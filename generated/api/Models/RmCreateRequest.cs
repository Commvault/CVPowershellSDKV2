// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6365, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>RMCreateRequest</summary>
    public partial class RmCreateRequest :
        Commvault.Powershell.Models.IRmCreateRequest,
        Commvault.Powershell.Models.IRmCreateRequestInternal
    {

        /// <summary>Backing field for <see cref="DeleteFromBackup" /> property.</summary>
        private bool? _deleteFromBackup;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? DeleteFromBackup { get => this._deleteFromBackup; set => this._deleteFromBackup = value; }

        /// <summary>Backing field for <see cref="EnableDocumentChaining" /> property.</summary>
        private bool? _enableDocumentChaining;

        /// <summary>
        /// If additional entities are found in a document, include documents that contain those additional entities in search results
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? EnableDocumentChaining { get => this._enableDocumentChaining; set => this._enableDocumentChaining = value; }

        /// <summary>Backing field for <see cref="EnableRedaction" /> property.</summary>
        private bool? _enableRedaction;

        /// <summary>This option redacts sensitive information from the files in the request</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? EnableRedaction { get => this._enableRedaction; set => this._enableRedaction = value; }

        /// <summary>Backing field for <see cref="Entities" /> property.</summary>
        private Commvault.Powershell.Models.INameValues[] _entities;

        /// <summary>
        /// List of personal entities with their values to form the criteria for the request
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.INameValues[] Entities { get => this._entities; set => this._entities = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the request</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Requestor" /> property.</summary>
        private string _requestor;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Requestor { get => this._requestor; set => this._requestor = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>RMRequestType</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="RmCreateRequest" /> instance.</summary>
        public RmCreateRequest()
        {

        }
    }
    /// RMCreateRequest
    public partial interface IRmCreateRequest :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"deleteFromBackup",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DeleteFromBackup { get; set; }
        /// <summary>
        /// If additional entities are found in a document, include documents that contain those additional entities in search results
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If additional entities are found in a document, include documents that contain those additional entities in search results",
        SerializedName = @"enableDocumentChaining",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableDocumentChaining { get; set; }
        /// <summary>This option redacts sensitive information from the files in the request</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This option redacts sensitive information from the files in the request",
        SerializedName = @"enableRedaction",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableRedaction { get; set; }
        /// <summary>
        /// List of personal entities with their values to form the criteria for the request
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"List of personal entities with their values to form the criteria for the request",
        SerializedName = @"entities",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.INameValues) })]
        Commvault.Powershell.Models.INameValues[] Entities { get; set; }
        /// <summary>Name of the request</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the request",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"requestor",
        PossibleTypes = new [] { typeof(string) })]
        string Requestor { get; set; }
        /// <summary>RMRequestType</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"RMRequestType",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// RMCreateRequest
    internal partial interface IRmCreateRequestInternal

    {
        bool? DeleteFromBackup { get; set; }
        /// <summary>
        /// If additional entities are found in a document, include documents that contain those additional entities in search results
        /// </summary>
        bool? EnableDocumentChaining { get; set; }
        /// <summary>This option redacts sensitive information from the files in the request</summary>
        bool? EnableRedaction { get; set; }
        /// <summary>
        /// List of personal entities with their values to form the criteria for the request
        /// </summary>
        Commvault.Powershell.Models.INameValues[] Entities { get; set; }
        /// <summary>Name of the request</summary>
        string Name { get; set; }

        string Requestor { get; set; }
        /// <summary>RMRequestType</summary>
        string Type { get; set; }

    }
}