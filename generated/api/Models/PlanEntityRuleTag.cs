// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6365, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Object to suggest possible plan rule tags that can be part of plan entity rule</summary>
    public partial class PlanEntityRuleTag :
        Commvault.Powershell.Models.IPlanEntityRuleTag,
        Commvault.Powershell.Models.IPlanEntityRuleTagInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private int? _id;

        /// <summary>Id for the tag</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public int? Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// Name for the plan rule tag which need to be matched against tag of the workload.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private string _value;

        /// <summary>
        /// Possible value that need to matched against value of tag associated to workload.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Value { get => this._value; set => this._value = value; }

        /// <summary>Creates an new <see cref="PlanEntityRuleTag" /> instance.</summary>
        public PlanEntityRuleTag()
        {

        }
    }
    /// Object to suggest possible plan rule tags that can be part of plan entity rule
    public partial interface IPlanEntityRuleTag :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Id for the tag</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id for the tag",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(int) })]
        int? Id { get; set; }
        /// <summary>
        /// Name for the plan rule tag which need to be matched against tag of the workload.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name for the plan rule tag which need to be matched against tag of the workload.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// Possible value that need to matched against value of tag associated to workload.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Possible value that need to matched against value of tag associated to workload.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string Value { get; set; }

    }
    /// Object to suggest possible plan rule tags that can be part of plan entity rule
    internal partial interface IPlanEntityRuleTagInternal

    {
        /// <summary>Id for the tag</summary>
        int? Id { get; set; }
        /// <summary>
        /// Name for the plan rule tag which need to be matched against tag of the workload.
        /// </summary>
        string Name { get; set; }
        /// <summary>
        /// Possible value that need to matched against value of tag associated to workload.
        /// </summary>
        string Value { get; set; }

    }
}