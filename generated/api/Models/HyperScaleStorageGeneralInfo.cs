// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>HyperScaleStorageGeneralInfo</summary>
    public partial class HyperScaleStorageGeneralInfo :
        Commvault.Powershell.Models.IHyperScaleStorageGeneralInfo,
        Commvault.Powershell.Models.IHyperScaleStorageGeneralInfoInternal
    {

        /// <summary>Backing field for <see cref="DeduplicationSavings" /> property.</summary>
        private string _deduplicationSavings;

        /// <summary>Specifies the savings in percentage that occurred due to deduplication.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string DeduplicationSavings { get => this._deduplicationSavings; set => this._deduplicationSavings = value; }

        /// <summary>Backing field for <see cref="DevicePath" /> property.</summary>
        private string _devicePath;

        /// <summary>The path of the disk storage area in which the data will be stored.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string DevicePath { get => this._devicePath; set => this._devicePath = value; }

        /// <summary>Backing field for <see cref="LibraryName" /> property.</summary>
        private string _libraryName;

        /// <summary>Library Name of HyperScale Storage</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string LibraryName { get => this._libraryName; set => this._libraryName = value; }

        /// <summary>Backing field for <see cref="Resiliency" /> property.</summary>
        private string _resiliency;

        /// <summary>Resiliency or redundancy of this HyperScale storage</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Resiliency { get => this._resiliency; set => this._resiliency = value; }

        /// <summary>Backing field for <see cref="SizeOndisk" /> property.</summary>
        private int? _sizeOndisk;

        /// <summary>The total amount of data stored on the disk after deduplication and compression</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public int? SizeOndisk { get => this._sizeOndisk; set => this._sizeOndisk = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>
        /// The status of the hyperscale storage pool - whether the storage pool is online or offline
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="TotalCapacity" /> property.</summary>
        private int? _totalCapacity;

        /// <summary>The total storage capacity of the selected HyperScale Storage Pool</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public int? TotalCapacity { get => this._totalCapacity; set => this._totalCapacity = value; }

        /// <summary>Backing field for <see cref="TotalFreeSpace" /> property.</summary>
        private int? _totalFreeSpace;

        /// <summary>The total free space available in the HyperScale storage pool</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public int? TotalFreeSpace { get => this._totalFreeSpace; set => this._totalFreeSpace = value; }

        /// <summary>Creates an new <see cref="HyperScaleStorageGeneralInfo" /> instance.</summary>
        public HyperScaleStorageGeneralInfo()
        {

        }
    }
    /// HyperScaleStorageGeneralInfo
    public partial interface IHyperScaleStorageGeneralInfo :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Specifies the savings in percentage that occurred due to deduplication.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the savings in percentage that occurred due to deduplication.",
        SerializedName = @"deduplicationSavings",
        PossibleTypes = new [] { typeof(string) })]
        string DeduplicationSavings { get; set; }
        /// <summary>The path of the disk storage area in which the data will be stored.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The path of the disk storage area in which the data will be stored.",
        SerializedName = @"devicePath",
        PossibleTypes = new [] { typeof(string) })]
        string DevicePath { get; set; }
        /// <summary>Library Name of HyperScale Storage</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Library Name of HyperScale Storage",
        SerializedName = @"libraryName",
        PossibleTypes = new [] { typeof(string) })]
        string LibraryName { get; set; }
        /// <summary>Resiliency or redundancy of this HyperScale storage</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resiliency or redundancy of this HyperScale storage",
        SerializedName = @"resiliency",
        PossibleTypes = new [] { typeof(string) })]
        string Resiliency { get; set; }
        /// <summary>The total amount of data stored on the disk after deduplication and compression</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total amount of data stored on the disk after deduplication and compression",
        SerializedName = @"sizeOndisk",
        PossibleTypes = new [] { typeof(int) })]
        int? SizeOndisk { get; set; }
        /// <summary>
        /// The status of the hyperscale storage pool - whether the storage pool is online or offline
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status of the hyperscale storage pool - whether the storage pool is online or offline",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get; set; }
        /// <summary>The total storage capacity of the selected HyperScale Storage Pool</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total storage capacity of the selected HyperScale Storage Pool",
        SerializedName = @"totalCapacity",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalCapacity { get; set; }
        /// <summary>The total free space available in the HyperScale storage pool</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total free space available in the HyperScale storage pool",
        SerializedName = @"totalFreeSpace",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalFreeSpace { get; set; }

    }
    /// HyperScaleStorageGeneralInfo
    internal partial interface IHyperScaleStorageGeneralInfoInternal

    {
        /// <summary>Specifies the savings in percentage that occurred due to deduplication.</summary>
        string DeduplicationSavings { get; set; }
        /// <summary>The path of the disk storage area in which the data will be stored.</summary>
        string DevicePath { get; set; }
        /// <summary>Library Name of HyperScale Storage</summary>
        string LibraryName { get; set; }
        /// <summary>Resiliency or redundancy of this HyperScale storage</summary>
        string Resiliency { get; set; }
        /// <summary>The total amount of data stored on the disk after deduplication and compression</summary>
        int? SizeOndisk { get; set; }
        /// <summary>
        /// The status of the hyperscale storage pool - whether the storage pool is online or offline
        /// </summary>
        string Status { get; set; }
        /// <summary>The total storage capacity of the selected HyperScale Storage Pool</summary>
        int? TotalCapacity { get; set; }
        /// <summary>The total free space available in the HyperScale storage pool</summary>
        int? TotalFreeSpace { get; set; }

    }
}