// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Details about Recovery Point Stores</summary>
    public partial class RecoveryPointStoreDetails :
        Commvault.Powershell.Models.IRecoveryPointStoreDetails,
        Commvault.Powershell.Models.IRecoveryPointStoreDetailsInternal
    {

        /// <summary>Backing field for <see cref="AssociatedMediaAgent" /> property.</summary>
        private string _associatedMediaAgent;

        /// <summary>Tape library MediaAgent association</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string AssociatedMediaAgent { get => this._associatedMediaAgent; set => this._associatedMediaAgent = value; }

        /// <summary>Backing field for <see cref="FreeSpace" /> property.</summary>
        private string _freeSpace;

        /// <summary>Magnetic library total free space</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string FreeSpace { get => this._freeSpace; set => this._freeSpace = value; }

        /// <summary>Backing field for <see cref="Locations" /> property.</summary>
        private Commvault.Powershell.Models.IMountLocationDetails[] _locations;

        /// <summary>Mount Path locations details</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.IMountLocationDetails[] Locations { get => this._locations; set => this._locations = value; }

        /// <summary>Backing field for <see cref="MaximumSize" /> property.</summary>
        private string _maximumSize;

        /// <summary>Magnetic library capacity size</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string MaximumSize { get => this._maximumSize; set => this._maximumSize = value; }

        /// <summary>Backing field for <see cref="PeakInterval" /> property.</summary>
        private Commvault.Powershell.Models.IDayAndTime[] _peakInterval;

        /// <summary>Interval window containing day and time details</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.IDayAndTime[] PeakInterval { get => this._peakInterval; set => this._peakInterval = value; }

        /// <summary>Backing field for <see cref="StorageName" /> property.</summary>
        private string _storageName;

        /// <summary>Name of the storage library.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string StorageName { get => this._storageName; set => this._storageName = value; }

        /// <summary>Backing field for <see cref="TotalCapacity" /> property.</summary>
        private string _totalCapacity;

        /// <summary>Magnetic library capacity.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string TotalCapacity { get => this._totalCapacity; set => this._totalCapacity = value; }

        /// <summary>Creates an new <see cref="RecoveryPointStoreDetails" /> instance.</summary>
        public RecoveryPointStoreDetails()
        {

        }
    }
    /// Details about Recovery Point Stores
    public partial interface IRecoveryPointStoreDetails :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Tape library MediaAgent association</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tape library MediaAgent association",
        SerializedName = @"associatedMediaAgent",
        PossibleTypes = new [] { typeof(string) })]
        string AssociatedMediaAgent { get; set; }
        /// <summary>Magnetic library total free space</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Magnetic library total free space",
        SerializedName = @"freeSpace",
        PossibleTypes = new [] { typeof(string) })]
        string FreeSpace { get; set; }
        /// <summary>Mount Path locations details</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Mount Path locations details",
        SerializedName = @"locations",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IMountLocationDetails) })]
        Commvault.Powershell.Models.IMountLocationDetails[] Locations { get; set; }
        /// <summary>Magnetic library capacity size</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Magnetic library capacity size",
        SerializedName = @"maximumSize",
        PossibleTypes = new [] { typeof(string) })]
        string MaximumSize { get; set; }
        /// <summary>Interval window containing day and time details</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Interval window containing day and time details",
        SerializedName = @"peakInterval",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IDayAndTime) })]
        Commvault.Powershell.Models.IDayAndTime[] PeakInterval { get; set; }
        /// <summary>Name of the storage library.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the storage library.",
        SerializedName = @"storageName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageName { get; set; }
        /// <summary>Magnetic library capacity.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Magnetic library capacity.",
        SerializedName = @"totalCapacity",
        PossibleTypes = new [] { typeof(string) })]
        string TotalCapacity { get; set; }

    }
    /// Details about Recovery Point Stores
    internal partial interface IRecoveryPointStoreDetailsInternal

    {
        /// <summary>Tape library MediaAgent association</summary>
        string AssociatedMediaAgent { get; set; }
        /// <summary>Magnetic library total free space</summary>
        string FreeSpace { get; set; }
        /// <summary>Mount Path locations details</summary>
        Commvault.Powershell.Models.IMountLocationDetails[] Locations { get; set; }
        /// <summary>Magnetic library capacity size</summary>
        string MaximumSize { get; set; }
        /// <summary>Interval window containing day and time details</summary>
        Commvault.Powershell.Models.IDayAndTime[] PeakInterval { get; set; }
        /// <summary>Name of the storage library.</summary>
        string StorageName { get; set; }
        /// <summary>Magnetic library capacity.</summary>
        string TotalCapacity { get; set; }

    }
}