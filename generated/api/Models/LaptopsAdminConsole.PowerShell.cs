// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(LaptopsAdminConsoleTypeConverter))]
    public partial class LaptopsAdminConsole
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.LaptopsAdminConsole"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.ILaptopsAdminConsole" />.</returns>
        public static Commvault.Powershell.Models.ILaptopsAdminConsole DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new LaptopsAdminConsole(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.LaptopsAdminConsole"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.ILaptopsAdminConsole" />.</returns>
        public static Commvault.Powershell.Models.ILaptopsAdminConsole DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new LaptopsAdminConsole(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="LaptopsAdminConsole" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Commvault.Powershell.Models.ILaptopsAdminConsole FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.LaptopsAdminConsole"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal LaptopsAdminConsole(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfo = (Commvault.Powershell.Models.ILastBackupJobInfo) content.GetValueForProperty("LastBackupJobInfo",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfo, Commvault.Powershell.Models.LastBackupJobInfoTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Plan = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("Plan",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Plan, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Sla = (Commvault.Powershell.Models.ISlaDetails) content.GetValueForProperty("Sla",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Sla, Commvault.Powershell.Models.SlaDetailsTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Id = (int?) content.GetValueForProperty("Id",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Id, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Name = (string) content.GetValueForProperty("Name",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Name, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Owners = (Commvault.Powershell.Models.IIdName[]) content.GetValueForProperty("Owners",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Owners, __y => TypeConverterExtensions.SelectToArray<Commvault.Powershell.Models.IIdName>(__y, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Username = (string) content.GetValueForProperty("Username",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Username, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Email = (string) content.GetValueForProperty("Email",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Email, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Configured = (bool?) content.GetValueForProperty("Configured",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Configured, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).TotalBackupSize = (int?) content.GetValueForProperty("TotalBackupSize",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).TotalBackupSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).SlaReason = (string) content.GetValueForProperty("SlaReason",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).SlaReason, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastSuccessfulBackup = (int?) content.GetValueForProperty("LastSuccessfulBackup",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastSuccessfulBackup, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Tags = (Commvault.Powershell.Models.IIdNameType[]) content.GetValueForProperty("Tags",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Tags, __y => TypeConverterExtensions.SelectToArray<Commvault.Powershell.Models.IIdNameType>(__y, Commvault.Powershell.Models.IdNameTypeTypeConverter.ConvertFrom));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoJobId = (int?) content.GetValueForProperty("LastBackupJobInfoJobId",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoJobId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoTime = (long?) content.GetValueForProperty("LastBackupJobInfoTime",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoFailureReason = (string) content.GetValueForProperty("LastBackupJobInfoFailureReason",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoFailureReason, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).SlaStatus = (string) content.GetValueForProperty("SlaStatus",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).SlaStatus, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoStatus = (string) content.GetValueForProperty("LastBackupJobInfoStatus",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoStatus, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).PlanId = (int?) content.GetValueForProperty("PlanId",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).PlanId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).PlanName = (string) content.GetValueForProperty("PlanName",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).PlanName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).SlaReasonList = (Commvault.Powershell.Models.IReasonDetails[]) content.GetValueForProperty("SlaReasonList",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).SlaReasonList, __y => TypeConverterExtensions.SelectToArray<Commvault.Powershell.Models.IReasonDetails>(__y, Commvault.Powershell.Models.ReasonDetailsTypeConverter.ConvertFrom));
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.LaptopsAdminConsole"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal LaptopsAdminConsole(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfo = (Commvault.Powershell.Models.ILastBackupJobInfo) content.GetValueForProperty("LastBackupJobInfo",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfo, Commvault.Powershell.Models.LastBackupJobInfoTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Plan = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("Plan",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Plan, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Sla = (Commvault.Powershell.Models.ISlaDetails) content.GetValueForProperty("Sla",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Sla, Commvault.Powershell.Models.SlaDetailsTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Id = (int?) content.GetValueForProperty("Id",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Id, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Name = (string) content.GetValueForProperty("Name",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Name, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Owners = (Commvault.Powershell.Models.IIdName[]) content.GetValueForProperty("Owners",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Owners, __y => TypeConverterExtensions.SelectToArray<Commvault.Powershell.Models.IIdName>(__y, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Username = (string) content.GetValueForProperty("Username",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Username, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Email = (string) content.GetValueForProperty("Email",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Email, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Configured = (bool?) content.GetValueForProperty("Configured",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Configured, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).TotalBackupSize = (int?) content.GetValueForProperty("TotalBackupSize",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).TotalBackupSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).SlaReason = (string) content.GetValueForProperty("SlaReason",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).SlaReason, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastSuccessfulBackup = (int?) content.GetValueForProperty("LastSuccessfulBackup",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastSuccessfulBackup, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Tags = (Commvault.Powershell.Models.IIdNameType[]) content.GetValueForProperty("Tags",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).Tags, __y => TypeConverterExtensions.SelectToArray<Commvault.Powershell.Models.IIdNameType>(__y, Commvault.Powershell.Models.IdNameTypeTypeConverter.ConvertFrom));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoJobId = (int?) content.GetValueForProperty("LastBackupJobInfoJobId",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoJobId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoTime = (long?) content.GetValueForProperty("LastBackupJobInfoTime",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoFailureReason = (string) content.GetValueForProperty("LastBackupJobInfoFailureReason",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoFailureReason, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).SlaStatus = (string) content.GetValueForProperty("SlaStatus",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).SlaStatus, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoStatus = (string) content.GetValueForProperty("LastBackupJobInfoStatus",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).LastBackupJobInfoStatus, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).PlanId = (int?) content.GetValueForProperty("PlanId",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).PlanId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).PlanName = (string) content.GetValueForProperty("PlanName",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).PlanName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).SlaReasonList = (Commvault.Powershell.Models.IReasonDetails[]) content.GetValueForProperty("SlaReasonList",((Commvault.Powershell.Models.ILaptopsAdminConsoleInternal)this).SlaReasonList, __y => TypeConverterExtensions.SelectToArray<Commvault.Powershell.Models.IReasonDetails>(__y, Commvault.Powershell.Models.ReasonDetailsTypeConverter.ConvertFrom));
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    [System.ComponentModel.TypeConverter(typeof(LaptopsAdminConsoleTypeConverter))]
    public partial interface ILaptopsAdminConsole

    {

    }
}