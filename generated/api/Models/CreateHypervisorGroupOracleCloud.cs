// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Create a hypervisor group with oracleCloud as the destination vendor</summary>
    public partial class CreateHypervisorGroupOracleCloud :
        Commvault.Powershell.Models.ICreateHypervisorGroupOracleCloud,
        Commvault.Powershell.Models.ICreateHypervisorGroupOracleCloudInternal,
        Commvault.Powershell.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Commvault.Powershell.Models.ICreateHypervisorGroupReq" />
        /// </summary>
        private Commvault.Powershell.Models.ICreateHypervisorGroupReq __createHypervisorGroupReq = new Commvault.Powershell.Models.CreateHypervisorGroupReq();

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public Commvault.Powershell.Models.IIdName[] AccessNodes { get => ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)__createHypervisorGroupReq).AccessNodes; set => ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)__createHypervisorGroupReq).AccessNodes = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public Commvault.Powershell.Models.IIdName Credentials { get => ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)__createHypervisorGroupReq).Credentials; set => ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)__createHypervisorGroupReq).Credentials = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public int? CredentialsId { get => ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)__createHypervisorGroupReq).CredentialsId; set => ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)__createHypervisorGroupReq).CredentialsId = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public string CredentialsName { get => ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)__createHypervisorGroupReq).CredentialsName; set => ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)__createHypervisorGroupReq).CredentialsName = value; }

        /// <summary>Backing field for <see cref="FingerPrint" /> property.</summary>
        private string _fingerPrint;

        /// <summary>Finger print for the private key</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string FingerPrint { get => this._fingerPrint; set => this._fingerPrint = value; }

        /// <summary>Backing field for <see cref="HypervisorType" /> property.</summary>
        private string _hypervisorType;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string HypervisorType { get => this._hypervisorType; set => this._hypervisorType = value; }

        /// <summary>The name of the hypervisor group being created</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public string Name { get => ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)__createHypervisorGroupReq).Name; set => ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)__createHypervisorGroupReq).Name = value; }

        /// <summary>Backing field for <see cref="PrivateKeyFileName" /> property.</summary>
        private string _privateKeyFileName;

        /// <summary>File Name for the private key</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string PrivateKeyFileName { get => this._privateKeyFileName; set => this._privateKeyFileName = value; }

        /// <summary>Backing field for <see cref="PrivateKeyPassword" /> property.</summary>
        private string _privateKeyPassword;

        /// <summary>
        /// password for the private key.This is the passphrase that was used to encrypt the private key.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string PrivateKeyPassword { get => this._privateKeyPassword; set => this._privateKeyPassword = value; }

        /// <summary>Backing field for <see cref="RegionName" /> property.</summary>
        private string _regionName;

        /// <summary>home region for the tenant</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string RegionName { get => this._regionName; set => this._regionName = value; }

        /// <summary>if credential validation has to be skipped.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public bool? SkipCredentialValidation { get => ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)__createHypervisorGroupReq).SkipCredentialValidation; set => ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)__createHypervisorGroupReq).SkipCredentialValidation = value; }

        /// <summary>Backing field for <see cref="TenancyOcId" /> property.</summary>
        private string _tenancyOcId;

        /// <summary>OCID for the tenant.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string TenancyOcId { get => this._tenancyOcId; set => this._tenancyOcId = value; }

        /// <summary>Backing field for <see cref="UserOcId" /> property.</summary>
        private string _userOcId;

        /// <summary>OCID for the admin user for the hypervisor</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string UserOcId { get => this._userOcId; set => this._userOcId = value; }

        /// <summary>Creates an new <see cref="CreateHypervisorGroupOracleCloud" /> instance.</summary>
        public CreateHypervisorGroupOracleCloud()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Commvault.Powershell.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Commvault.Powershell.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__createHypervisorGroupReq), __createHypervisorGroupReq);
            await eventListener.AssertObjectIsValid(nameof(__createHypervisorGroupReq), __createHypervisorGroupReq);
        }
    }
    /// Create a hypervisor group with oracleCloud as the destination vendor
    public partial interface ICreateHypervisorGroupOracleCloud :
        Commvault.Powershell.Runtime.IJsonSerializable,
        Commvault.Powershell.Models.ICreateHypervisorGroupReq
    {
        /// <summary>Finger print for the private key</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Finger print for the private key",
        SerializedName = @"fingerPrint",
        PossibleTypes = new [] { typeof(string) })]
        string FingerPrint { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"hypervisorType",
        PossibleTypes = new [] { typeof(string) })]
        string HypervisorType { get; set; }
        /// <summary>File Name for the private key</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"File Name for the private key",
        SerializedName = @"privateKeyFileName",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateKeyFileName { get; set; }
        /// <summary>
        /// password for the private key.This is the passphrase that was used to encrypt the private key.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"password for the private key.This is the passphrase that was used to encrypt the private key.",
        SerializedName = @"privateKeyPassword",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateKeyPassword { get; set; }
        /// <summary>home region for the tenant</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"home region for the tenant",
        SerializedName = @"regionName",
        PossibleTypes = new [] { typeof(string) })]
        string RegionName { get; set; }
        /// <summary>OCID for the tenant.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"OCID for the tenant.",
        SerializedName = @"tenancyOCId",
        PossibleTypes = new [] { typeof(string) })]
        string TenancyOcId { get; set; }
        /// <summary>OCID for the admin user for the hypervisor</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"OCID for the admin user for the hypervisor",
        SerializedName = @"userOCId",
        PossibleTypes = new [] { typeof(string) })]
        string UserOcId { get; set; }

    }
    /// Create a hypervisor group with oracleCloud as the destination vendor
    internal partial interface ICreateHypervisorGroupOracleCloudInternal :
        Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal
    {
        /// <summary>Finger print for the private key</summary>
        string FingerPrint { get; set; }

        string HypervisorType { get; set; }
        /// <summary>File Name for the private key</summary>
        string PrivateKeyFileName { get; set; }
        /// <summary>
        /// password for the private key.This is the passphrase that was used to encrypt the private key.
        /// </summary>
        string PrivateKeyPassword { get; set; }
        /// <summary>home region for the tenant</summary>
        string RegionName { get; set; }
        /// <summary>OCID for the tenant.</summary>
        string TenancyOcId { get; set; }
        /// <summary>OCID for the admin user for the hypervisor</summary>
        string UserOcId { get; set; }

    }
}