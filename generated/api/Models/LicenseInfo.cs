// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.3, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>License details</summary>
    public partial class LicenseInfo :
        Commvault.Powershell.Models.ILicenseInfo,
        Commvault.Powershell.Models.ILicenseInfoInternal
    {

        /// <summary>Backing field for <see cref="CommCellId" /> property.</summary>
        private int? _commCellId;

        /// <summary>ID of the registered CommCell</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public int? CommCellId { get => this._commCellId; set => this._commCellId = value; }

        /// <summary>Backing field for <see cref="CommServeIPAddress" /> property.</summary>
        private string _commServeIPAddress;

        /// <summary>IP Address of CommServe</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string CommServeIPAddress { get => this._commServeIPAddress; set => this._commServeIPAddress = value; }

        /// <summary>Backing field for <see cref="Edition" /> property.</summary>
        private string _edition;

        /// <summary>The license is for this software product</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Edition { get => this._edition; set => this._edition = value; }

        /// <summary>Backing field for <see cref="ExpiryDate" /> property.</summary>
        private int? _expiryDate;

        /// <summary>Expiry date of current license in epoch format</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public int? ExpiryDate { get => this._expiryDate; set => this._expiryDate = value; }

        /// <summary>Backing field for <see cref="LicenseIPAddress" /> property.</summary>
        private string _licenseIPAddress;

        /// <summary>IP Address of License</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string LicenseIPAddress { get => this._licenseIPAddress; set => this._licenseIPAddress = value; }

        /// <summary>Backing field for <see cref="LicenseMode" /> property.</summary>
        private string _licenseMode;

        /// <summary>This license is intended for the specified usage scenario</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string LicenseMode { get => this._licenseMode; set => this._licenseMode = value; }

        /// <summary>Backing field for <see cref="RegistrationCode" /> property.</summary>
        private string _registrationCode;

        /// <summary>Registration code of CommServe</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string RegistrationCode { get => this._registrationCode; set => this._registrationCode = value; }

        /// <summary>Backing field for <see cref="SerialNumber" /> property.</summary>
        private string _serialNumber;

        /// <summary>Serial number of CommServe</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string SerialNumber { get => this._serialNumber; set => this._serialNumber = value; }

        /// <summary>Creates an new <see cref="LicenseInfo" /> instance.</summary>
        public LicenseInfo()
        {

        }
    }
    /// License details
    public partial interface ILicenseInfo :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>ID of the registered CommCell</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the registered CommCell",
        SerializedName = @"commCellId",
        PossibleTypes = new [] { typeof(int) })]
        int? CommCellId { get; set; }
        /// <summary>IP Address of CommServe</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP Address of CommServe",
        SerializedName = @"commServeIPAddress",
        PossibleTypes = new [] { typeof(string) })]
        string CommServeIPAddress { get; set; }
        /// <summary>The license is for this software product</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The license is for this software product",
        SerializedName = @"edition",
        PossibleTypes = new [] { typeof(string) })]
        string Edition { get; set; }
        /// <summary>Expiry date of current license in epoch format</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expiry date of current license in epoch format",
        SerializedName = @"expiryDate",
        PossibleTypes = new [] { typeof(int) })]
        int? ExpiryDate { get; set; }
        /// <summary>IP Address of License</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP Address of License",
        SerializedName = @"licenseIPAddress",
        PossibleTypes = new [] { typeof(string) })]
        string LicenseIPAddress { get; set; }
        /// <summary>This license is intended for the specified usage scenario</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This license is intended for the specified usage scenario",
        SerializedName = @"licenseMode",
        PossibleTypes = new [] { typeof(string) })]
        string LicenseMode { get; set; }
        /// <summary>Registration code of CommServe</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registration code of CommServe",
        SerializedName = @"registrationCode",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationCode { get; set; }
        /// <summary>Serial number of CommServe</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Serial number of CommServe",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string SerialNumber { get; set; }

    }
    /// License details
    internal partial interface ILicenseInfoInternal

    {
        /// <summary>ID of the registered CommCell</summary>
        int? CommCellId { get; set; }
        /// <summary>IP Address of CommServe</summary>
        string CommServeIPAddress { get; set; }
        /// <summary>The license is for this software product</summary>
        string Edition { get; set; }
        /// <summary>Expiry date of current license in epoch format</summary>
        int? ExpiryDate { get; set; }
        /// <summary>IP Address of License</summary>
        string LicenseIPAddress { get; set; }
        /// <summary>This license is intended for the specified usage scenario</summary>
        string LicenseMode { get; set; }
        /// <summary>Registration code of CommServe</summary>
        string RegistrationCode { get; set; }
        /// <summary>Serial number of CommServe</summary>
        string SerialNumber { get; set; }

    }
}