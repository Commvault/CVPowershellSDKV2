// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6365, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Create a new role.</summary>
    public partial class CreateRole :
        Commvault.Powershell.Models.ICreateRole,
        Commvault.Powershell.Models.ICreateRoleInternal
    {

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>
        /// Used to determine if the role is enabled or disabled. If not provided, role will be enabled by default.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the new role</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="PermissionList" /> property.</summary>
        private Commvault.Powershell.Models.IPermissions[] _permissionList;

        /// <summary>Used to provide the list of permissions associated with the role.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.IPermissions[] PermissionList { get => this._permissionList; set => this._permissionList = value; }

        /// <summary>Backing field for <see cref="VisibleToAll" /> property.</summary>
        private bool? _visibleToAll;

        /// <summary>
        /// Determines if the role is visible to everyone. if not provided, it will be set to false by default.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? VisibleToAll { get => this._visibleToAll; set => this._visibleToAll = value; }

        /// <summary>Creates an new <see cref="CreateRole" /> instance.</summary>
        public CreateRole()
        {

        }
    }
    /// Create a new role.
    public partial interface ICreateRole :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Used to determine if the role is enabled or disabled. If not provided, role will be enabled by default.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Used to determine if the role is enabled or disabled. If not provided, role will be enabled by default.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>Name of the new role</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the new role",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Used to provide the list of permissions associated with the role.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Used to provide the list of permissions associated with the role.",
        SerializedName = @"permissionList",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IPermissions) })]
        Commvault.Powershell.Models.IPermissions[] PermissionList { get; set; }
        /// <summary>
        /// Determines if the role is visible to everyone. if not provided, it will be set to false by default.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines if the role is visible to everyone. if not provided, it will be set to false by default.",
        SerializedName = @"visibleToAll",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VisibleToAll { get; set; }

    }
    /// Create a new role.
    internal partial interface ICreateRoleInternal

    {
        /// <summary>
        /// Used to determine if the role is enabled or disabled. If not provided, role will be enabled by default.
        /// </summary>
        bool? Enabled { get; set; }
        /// <summary>Name of the new role</summary>
        string Name { get; set; }
        /// <summary>Used to provide the list of permissions associated with the role.</summary>
        Commvault.Powershell.Models.IPermissions[] PermissionList { get; set; }
        /// <summary>
        /// Determines if the role is visible to everyone. if not provided, it will be set to false by default.
        /// </summary>
        bool? VisibleToAll { get; set; }

    }
}