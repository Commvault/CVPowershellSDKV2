// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6365, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>vmGroupDetailsSummary</summary>
    public partial class VMGroupDetailsSummary :
        Commvault.Powershell.Models.IVMGroupDetailsSummary,
        Commvault.Powershell.Models.IVMGroupDetailsSummaryInternal
    {

        /// <summary>Internal Acessors for Plan</summary>
        Commvault.Powershell.Models.IPlanIdNameType Commvault.Powershell.Models.IVMGroupDetailsSummaryInternal.Plan { get => (this._plan = this._plan ?? new Commvault.Powershell.Models.PlanIdNameType()); set { {_plan = value;} } }

        /// <summary>Internal Acessors for Region</summary>
        Commvault.Powershell.Models.IRegionInfo Commvault.Powershell.Models.IVMGroupDetailsSummaryInternal.Region { get => (this._region = this._region ?? new Commvault.Powershell.Models.RegionInfo()); set { {_region = value;} } }

        /// <summary>Internal Acessors for TimeZone</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IVMGroupDetailsSummaryInternal.TimeZone { get => (this._timeZone = this._timeZone ?? new Commvault.Powershell.Models.IdName()); set { {_timeZone = value;} } }

        /// <summary>Backing field for <see cref="HypervisorName" /> property.</summary>
        private string _hypervisorName;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string HypervisorName { get => this._hypervisorName; set => this._hypervisorName = value; }

        /// <summary>Backing field for <see cref="LastBackupSize" /> property.</summary>
        private long? _lastBackupSize;

        /// <summary>Last Backup Job Size</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? LastBackupSize { get => this._lastBackupSize; set => this._lastBackupSize = value; }

        /// <summary>Backing field for <see cref="LastBackupTime" /> property.</summary>
        private int? _lastBackupTime;

        /// <summary>Last Backup time of the VMGroup</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public int? LastBackupTime { get => this._lastBackupTime; set => this._lastBackupTime = value; }

        /// <summary>Backing field for <see cref="NextBackupTime" /> property.</summary>
        private int? _nextBackupTime;

        /// <summary>Next Backup Job start time</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public int? NextBackupTime { get => this._nextBackupTime; set => this._nextBackupTime = value; }

        /// <summary>Backing field for <see cref="Plan" /> property.</summary>
        private Commvault.Powershell.Models.IPlanIdNameType _plan;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IPlanIdNameType Plan { get => (this._plan = this._plan ?? new Commvault.Powershell.Models.PlanIdNameType()); set => this._plan = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public int? PlanId { get => ((Commvault.Powershell.Models.IPlanIdNameTypeInternal)Plan).Id; set => ((Commvault.Powershell.Models.IPlanIdNameTypeInternal)Plan).Id = value ?? default(int); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string PlanName { get => ((Commvault.Powershell.Models.IPlanIdNameTypeInternal)Plan).Name; set => ((Commvault.Powershell.Models.IPlanIdNameTypeInternal)Plan).Name = value ?? null; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string PlanSubType { get => ((Commvault.Powershell.Models.IPlanIdNameTypeInternal)Plan).SubType; set => ((Commvault.Powershell.Models.IPlanIdNameTypeInternal)Plan).SubType = value ?? null; }

        /// <summary>Backing field for <see cref="Region" /> property.</summary>
        private Commvault.Powershell.Models.IRegionInfo _region;

        /// <summary>RegionInfo</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IRegionInfo Region { get => (this._region = this._region ?? new Commvault.Powershell.Models.RegionInfo()); set => this._region = value; }

        /// <summary>Display Name of Region</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string RegionDisplayName { get => ((Commvault.Powershell.Models.IRegionInfoInternal)Region).DisplayName; set => ((Commvault.Powershell.Models.IRegionInfoInternal)Region).DisplayName = value ?? null; }

        /// <summary>Region Id</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public int? RegionId { get => ((Commvault.Powershell.Models.IRegionInfoInternal)Region).Id; set => ((Commvault.Powershell.Models.IRegionInfoInternal)Region).Id = value ?? default(int); }

        /// <summary>Geolocation Latitude</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string RegionLatitude { get => ((Commvault.Powershell.Models.IRegionInfoInternal)Region).Latitude; set => ((Commvault.Powershell.Models.IRegionInfoInternal)Region).Latitude = value ?? null; }

        /// <summary>Geolocation Longitude</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string RegionLongitude { get => ((Commvault.Powershell.Models.IRegionInfoInternal)Region).Longitude; set => ((Commvault.Powershell.Models.IRegionInfoInternal)Region).Longitude = value ?? null; }

        /// <summary>Region Name</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string RegionName { get => ((Commvault.Powershell.Models.IRegionInfoInternal)Region).Name; set => ((Commvault.Powershell.Models.IRegionInfoInternal)Region).Name = value ?? null; }

        /// <summary>Backing field for <see cref="TimeZone" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _timeZone;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName TimeZone { get => (this._timeZone = this._timeZone ?? new Commvault.Powershell.Models.IdName()); set => this._timeZone = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public int? TimeZoneId { get => ((Commvault.Powershell.Models.IIdNameInternal)TimeZone).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)TimeZone).Id = value ?? default(int); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string TimeZoneName { get => ((Commvault.Powershell.Models.IIdNameInternal)TimeZone).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)TimeZone).Name = value ?? null; }

        /// <summary>Creates an new <see cref="VMGroupDetailsSummary" /> instance.</summary>
        public VMGroupDetailsSummary()
        {

        }
    }
    /// vmGroupDetailsSummary
    public partial interface IVMGroupDetailsSummary :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"hypervisorName",
        PossibleTypes = new [] { typeof(string) })]
        string HypervisorName { get; set; }
        /// <summary>Last Backup Job Size</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last Backup Job Size",
        SerializedName = @"lastBackupSize",
        PossibleTypes = new [] { typeof(long) })]
        long? LastBackupSize { get; set; }
        /// <summary>Last Backup time of the VMGroup</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last Backup time of the VMGroup",
        SerializedName = @"lastBackupTime",
        PossibleTypes = new [] { typeof(int) })]
        int? LastBackupTime { get; set; }
        /// <summary>Next Backup Job start time</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Next Backup Job start time",
        SerializedName = @"nextBackupTime",
        PossibleTypes = new [] { typeof(int) })]
        int? NextBackupTime { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(int) })]
        int? PlanId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PlanName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"subType",
        PossibleTypes = new [] { typeof(string) })]
        string PlanSubType { get; set; }
        /// <summary>Display Name of Region</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Display Name of Region",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string RegionDisplayName { get; set; }
        /// <summary>Region Id</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Region Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(int) })]
        int? RegionId { get; set; }
        /// <summary>Geolocation Latitude</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Geolocation Latitude",
        SerializedName = @"latitude",
        PossibleTypes = new [] { typeof(string) })]
        string RegionLatitude { get; set; }
        /// <summary>Geolocation Longitude</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Geolocation Longitude",
        SerializedName = @"longitude",
        PossibleTypes = new [] { typeof(string) })]
        string RegionLongitude { get; set; }
        /// <summary>Region Name</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Region Name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string RegionName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(int) })]
        int? TimeZoneId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string TimeZoneName { get; set; }

    }
    /// vmGroupDetailsSummary
    internal partial interface IVMGroupDetailsSummaryInternal

    {
        string HypervisorName { get; set; }
        /// <summary>Last Backup Job Size</summary>
        long? LastBackupSize { get; set; }
        /// <summary>Last Backup time of the VMGroup</summary>
        int? LastBackupTime { get; set; }
        /// <summary>Next Backup Job start time</summary>
        int? NextBackupTime { get; set; }

        Commvault.Powershell.Models.IPlanIdNameType Plan { get; set; }

        int? PlanId { get; set; }

        string PlanName { get; set; }

        string PlanSubType { get; set; }
        /// <summary>RegionInfo</summary>
        Commvault.Powershell.Models.IRegionInfo Region { get; set; }
        /// <summary>Display Name of Region</summary>
        string RegionDisplayName { get; set; }
        /// <summary>Region Id</summary>
        int? RegionId { get; set; }
        /// <summary>Geolocation Latitude</summary>
        string RegionLatitude { get; set; }
        /// <summary>Geolocation Longitude</summary>
        string RegionLongitude { get; set; }
        /// <summary>Region Name</summary>
        string RegionName { get; set; }

        Commvault.Powershell.Models.IIdName TimeZone { get; set; }

        int? TimeZoneId { get; set; }

        string TimeZoneName { get; set; }

    }
}