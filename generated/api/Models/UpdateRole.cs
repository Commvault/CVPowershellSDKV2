// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6365, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class UpdateRole :
        Commvault.Powershell.Models.IUpdateRole,
        Commvault.Powershell.Models.IUpdateRoleInternal
    {

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>Used to determine if the role is enabled or disabled.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="NewName" /> property.</summary>
        private string _newName;

        /// <summary>new name of the role</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string NewName { get => this._newName; set => this._newName = value; }

        /// <summary>Backing field for <see cref="PermissionList" /> property.</summary>
        private Commvault.Powershell.Models.IPermissions[] _permissionList;

        /// <summary>Used to update the list of permissions associated with the role.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.IPermissions[] PermissionList { get => this._permissionList; set => this._permissionList = value; }

        /// <summary>Backing field for <see cref="Security" /> property.</summary>
        private Commvault.Powershell.Models.IUpdateSecurityAssoc[] _security;

        /// <summary>Used to update the security association for the role</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.IUpdateSecurityAssoc[] Security { get => this._security; set => this._security = value; }

        /// <summary>Backing field for <see cref="VisibleToAll" /> property.</summary>
        private bool? _visibleToAll;

        /// <summary>Determines if the role is visible to everyone.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? VisibleToAll { get => this._visibleToAll; set => this._visibleToAll = value; }

        /// <summary>Creates an new <see cref="UpdateRole" /> instance.</summary>
        public UpdateRole()
        {

        }
    }
    public partial interface IUpdateRole :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Used to determine if the role is enabled or disabled.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Used to determine if the role is enabled or disabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>new name of the role</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"new name of the role",
        SerializedName = @"newName",
        PossibleTypes = new [] { typeof(string) })]
        string NewName { get; set; }
        /// <summary>Used to update the list of permissions associated with the role.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Used to update the list of permissions associated with the role.",
        SerializedName = @"permissionList",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IPermissions) })]
        Commvault.Powershell.Models.IPermissions[] PermissionList { get; set; }
        /// <summary>Used to update the security association for the role</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Used to update the security association for the role",
        SerializedName = @"security",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IUpdateSecurityAssoc) })]
        Commvault.Powershell.Models.IUpdateSecurityAssoc[] Security { get; set; }
        /// <summary>Determines if the role is visible to everyone.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines if the role is visible to everyone.",
        SerializedName = @"visibleToAll",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VisibleToAll { get; set; }

    }
    internal partial interface IUpdateRoleInternal

    {
        /// <summary>Used to determine if the role is enabled or disabled.</summary>
        bool? Enabled { get; set; }
        /// <summary>new name of the role</summary>
        string NewName { get; set; }
        /// <summary>Used to update the list of permissions associated with the role.</summary>
        Commvault.Powershell.Models.IPermissions[] PermissionList { get; set; }
        /// <summary>Used to update the security association for the role</summary>
        Commvault.Powershell.Models.IUpdateSecurityAssoc[] Security { get; set; }
        /// <summary>Determines if the role is visible to everyone.</summary>
        bool? VisibleToAll { get; set; }

    }
}