// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6365, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Details of the new region</summary>
    public partial class CreateRegion :
        Commvault.Powershell.Models.ICreateRegion,
        Commvault.Powershell.Models.ICreateRegionInternal
    {

        /// <summary>Backing field for <see cref="Locations" /> property.</summary>
        private Commvault.Powershell.Models.ILocationDetails[] _locations;

        /// <summary>List of locations which are part of the region</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.ILocationDetails[] Locations { get => this._locations; set => this._locations = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Region name</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Type of the region</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="CreateRegion" /> instance.</summary>
        public CreateRegion()
        {

        }
    }
    /// Details of the new region
    public partial interface ICreateRegion :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>List of locations which are part of the region</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"List of locations which are part of the region",
        SerializedName = @"locations",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.ILocationDetails) })]
        Commvault.Powershell.Models.ILocationDetails[] Locations { get; set; }
        /// <summary>Region name</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Region name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Type of the region</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the region",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// Details of the new region
    internal partial interface ICreateRegionInternal

    {
        /// <summary>List of locations which are part of the region</summary>
        Commvault.Powershell.Models.ILocationDetails[] Locations { get; set; }
        /// <summary>Region name</summary>
        string Name { get; set; }
        /// <summary>Type of the region</summary>
        string Type { get; set; }

    }
}