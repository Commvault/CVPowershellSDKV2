// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.3, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>
    /// Refers to default data protection plans to use for the company. There can be a default plan for each subtype.
    /// </summary>
    public partial class DefaultPlan :
        Commvault.Powershell.Models.IDefaultPlan,
        Commvault.Powershell.Models.IDefaultPlanInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private int? _id;

        /// <summary>
        /// Id of the default plan. Either id or name can be provided. If both id and name are provided, id is given first preference.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public int? Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// Name of the default plan. Either id or name can be provided. If both id and name are provided, id is given first preference.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Subtype" /> property.</summary>
        private string _subtype;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Subtype { get => this._subtype; set => this._subtype = value; }

        /// <summary>Creates an new <see cref="DefaultPlan" /> instance.</summary>
        public DefaultPlan()
        {

        }
    }
    /// Refers to default data protection plans to use for the company. There can be a default plan for each subtype.
    public partial interface IDefaultPlan :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Id of the default plan. Either id or name can be provided. If both id and name are provided, id is given first preference.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of the default plan. Either id or name can be provided. If both id and name are provided, id is given first preference.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(int) })]
        int? Id { get; set; }
        /// <summary>
        /// Name of the default plan. Either id or name can be provided. If both id and name are provided, id is given first preference.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the default plan. Either id or name can be provided. If both id and name are provided, id is given first preference.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"subtype",
        PossibleTypes = new [] { typeof(string) })]
        string Subtype { get; set; }

    }
    /// Refers to default data protection plans to use for the company. There can be a default plan for each subtype.
    internal partial interface IDefaultPlanInternal

    {
        /// <summary>
        /// Id of the default plan. Either id or name can be provided. If both id and name are provided, id is given first preference.
        /// </summary>
        int? Id { get; set; }
        /// <summary>
        /// Name of the default plan. Either id or name can be provided. If both id and name are provided, id is given first preference.
        /// </summary>
        string Name { get; set; }

        string Subtype { get; set; }

    }
}