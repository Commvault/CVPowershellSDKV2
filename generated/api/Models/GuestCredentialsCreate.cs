// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>
    /// Faster performance can be achieved during replication by using the VSA access node running on the Amazon instance. Applicable
    /// only if the source VM is Windows and the source hypervisor is not Amazon vendor.
    /// </summary>
    public partial class GuestCredentialsCreate :
        Commvault.Powershell.Models.IGuestCredentialsCreate,
        Commvault.Powershell.Models.IGuestCredentialsCreateInternal
    {

        /// <summary>Backing field for <see cref="ComputerName" /> property.</summary>
        private string _computerName;

        /// <summary>The name of the computer</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string ComputerName { get => this._computerName; set => this._computerName = value; }

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private string _password;

        /// <summary>The password of the user in Base64 format</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Password { get => this._password; set => this._password = value; }

        /// <summary>Backing field for <see cref="UserName" /> property.</summary>
        private string _userName;

        /// <summary>The user to be used to access the computer</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string UserName { get => this._userName; set => this._userName = value; }

        /// <summary>Creates an new <see cref="GuestCredentialsCreate" /> instance.</summary>
        public GuestCredentialsCreate()
        {

        }
    }
    /// Faster performance can be achieved during replication by using the VSA access node running on the Amazon instance. Applicable
    /// only if the source VM is Windows and the source hypervisor is not Amazon vendor.
    public partial interface IGuestCredentialsCreate :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>The name of the computer</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the computer",
        SerializedName = @"computerName",
        PossibleTypes = new [] { typeof(string) })]
        string ComputerName { get; set; }
        /// <summary>The password of the user in Base64 format</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password of the user in Base64 format",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string Password { get; set; }
        /// <summary>The user to be used to access the computer</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user to be used to access the computer",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string UserName { get; set; }

    }
    /// Faster performance can be achieved during replication by using the VSA access node running on the Amazon instance. Applicable
    /// only if the source VM is Windows and the source hypervisor is not Amazon vendor.
    internal partial interface IGuestCredentialsCreateInternal

    {
        /// <summary>The name of the computer</summary>
        string ComputerName { get; set; }
        /// <summary>The password of the user in Base64 format</summary>
        string Password { get; set; }
        /// <summary>The user to be used to access the computer</summary>
        string UserName { get; set; }

    }
}