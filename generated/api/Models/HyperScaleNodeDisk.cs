// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>HyperScaleNodeDisk</summary>
    public partial class HyperScaleNodeDisk :
        Commvault.Powershell.Models.IHyperScaleNodeDisk,
        Commvault.Powershell.Models.IHyperScaleNodeDiskInternal
    {

        /// <summary>Backing field for <see cref="Capacity" /> property.</summary>
        private long? _capacity;

        /// <summary>The total capacity of the mount path</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? Capacity { get => this._capacity; set => this._capacity = value; }

        /// <summary>Backing field for <see cref="DiskStatus" /> property.</summary>
        private string _diskStatus;

        /// <summary>The status of the mount path</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string DiskStatus { get => this._diskStatus; set => this._diskStatus = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private long? _id;

        /// <summary>Id of disk</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Mountpath" /> property.</summary>
        private string _mountpath;

        /// <summary>The physical path of the mount path in the file system</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Mountpath { get => this._mountpath; set => this._mountpath = value; }

        /// <summary>Backing field for <see cref="SerialNumber" /> property.</summary>
        private string _serialNumber;

        /// <summary>The serial number associated with the mount path</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string SerialNumber { get => this._serialNumber; set => this._serialNumber = value; }

        /// <summary>Creates an new <see cref="HyperScaleNodeDisk" /> instance.</summary>
        public HyperScaleNodeDisk()
        {

        }
    }
    /// HyperScaleNodeDisk
    public partial interface IHyperScaleNodeDisk :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>The total capacity of the mount path</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total capacity of the mount path",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(long) })]
        long? Capacity { get; set; }
        /// <summary>The status of the mount path</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status of the mount path",
        SerializedName = @"diskStatus",
        PossibleTypes = new [] { typeof(string) })]
        string DiskStatus { get; set; }
        /// <summary>Id of disk</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of disk",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? Id { get; set; }
        /// <summary>The physical path of the mount path in the file system</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The physical path of the mount path in the file system",
        SerializedName = @"mountpath",
        PossibleTypes = new [] { typeof(string) })]
        string Mountpath { get; set; }
        /// <summary>The serial number associated with the mount path</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The serial number associated with the mount path",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string SerialNumber { get; set; }

    }
    /// HyperScaleNodeDisk
    internal partial interface IHyperScaleNodeDiskInternal

    {
        /// <summary>The total capacity of the mount path</summary>
        long? Capacity { get; set; }
        /// <summary>The status of the mount path</summary>
        string DiskStatus { get; set; }
        /// <summary>Id of disk</summary>
        long? Id { get; set; }
        /// <summary>The physical path of the mount path in the file system</summary>
        string Mountpath { get; set; }
        /// <summary>The serial number associated with the mount path</summary>
        string SerialNumber { get; set; }

    }
}