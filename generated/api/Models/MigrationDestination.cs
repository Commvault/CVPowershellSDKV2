// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6365, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>
    /// Specify node with write access to Azure File share. The destincation type (NFS/CIFS) is determined by source.
    /// </summary>
    public partial class MigrationDestination :
        Commvault.Powershell.Models.IMigrationDestination,
        Commvault.Powershell.Models.IMigrationDestinationInternal
    {

        /// <summary>Backing field for <see cref="AccessNode" /> property.</summary>
        private Commvault.Powershell.Models.IAccessNodes[] _accessNode;

        /// <summary>Access nodes for the destination client</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.IAccessNodes[] AccessNode { get => this._accessNode; set => this._accessNode = value; }

        /// <summary>Internal Acessors for DestinationCredentials</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IMigrationDestinationInternal.DestinationCredentials { get => (this._destinationCredentials = this._destinationCredentials ?? new Commvault.Powershell.Models.IdName()); set { {_destinationCredentials = value;} } }

        /// <summary>Internal Acessors for Region</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IMigrationDestinationInternal.Region { get => (this._region = this._region ?? new Commvault.Powershell.Models.IdName()); set { {_region = value;} } }

        /// <summary>Backing field for <see cref="DestinationCredentials" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _destinationCredentials;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName DestinationCredentials { get => (this._destinationCredentials = this._destinationCredentials ?? new Commvault.Powershell.Models.IdName()); set => this._destinationCredentials = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public int? DestinationCredentialsId { get => ((Commvault.Powershell.Models.IIdNameInternal)DestinationCredentials).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)DestinationCredentials).Id = value ?? default(int); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string DestinationCredentialsName { get => ((Commvault.Powershell.Models.IIdNameInternal)DestinationCredentials).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)DestinationCredentials).Name = value ?? null; }

        /// <summary>Backing field for <see cref="DestinationName" /> property.</summary>
        private string _destinationName;

        /// <summary>Azure storage account</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string DestinationName { get => this._destinationName; set => this._destinationName = value; }

        /// <summary>Backing field for <see cref="Region" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _region;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Region { get => (this._region = this._region ?? new Commvault.Powershell.Models.IdName()); set => this._region = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public int? RegionId { get => ((Commvault.Powershell.Models.IIdNameInternal)Region).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Region).Id = value ?? default(int); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string RegionName { get => ((Commvault.Powershell.Models.IIdNameInternal)Region).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Region).Name = value ?? null; }

        /// <summary>Creates an new <see cref="MigrationDestination" /> instance.</summary>
        public MigrationDestination()
        {

        }
    }
    /// Specify node with write access to Azure File share. The destincation type (NFS/CIFS) is determined by source.
    public partial interface IMigrationDestination :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Access nodes for the destination client</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Access nodes for the destination client",
        SerializedName = @"accessNode",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IAccessNodes) })]
        Commvault.Powershell.Models.IAccessNodes[] AccessNode { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(int) })]
        int? DestinationCredentialsId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationCredentialsName { get; set; }
        /// <summary>Azure storage account</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure storage account",
        SerializedName = @"destinationName",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(int) })]
        int? RegionId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string RegionName { get; set; }

    }
    /// Specify node with write access to Azure File share. The destincation type (NFS/CIFS) is determined by source.
    internal partial interface IMigrationDestinationInternal

    {
        /// <summary>Access nodes for the destination client</summary>
        Commvault.Powershell.Models.IAccessNodes[] AccessNode { get; set; }

        Commvault.Powershell.Models.IIdName DestinationCredentials { get; set; }

        int? DestinationCredentialsId { get; set; }

        string DestinationCredentialsName { get; set; }
        /// <summary>Azure storage account</summary>
        string DestinationName { get; set; }

        Commvault.Powershell.Models.IIdName Region { get; set; }

        int? RegionId { get; set; }

        string RegionName { get; set; }

    }
}