// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6365, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Replication options for HyperV</summary>
    public partial class OverrideReplicationOptionsHyperV :
        Commvault.Powershell.Models.IOverrideReplicationOptionsHyperV,
        Commvault.Powershell.Models.IOverrideReplicationOptionsHyperVInternal
    {

        /// <summary>Backing field for <see cref="NetworkAdapter" /> property.</summary>
        private Commvault.Powershell.Models.INetworkName[] _networkAdapter;

        /// <summary>Select a network interface from the Network adapter list</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.INetworkName[] NetworkAdapter { get => this._networkAdapter; set => this._networkAdapter = value; }

        /// <summary>Backing field for <see cref="RegisterVMWithFailoverCluster" /> property.</summary>
        private string _registerVMWithFailoverCluster;

        /// <summary>
        /// Register replicated virtual machines to the failover cluster for the destination client.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string RegisterVMWithFailoverCluster { get => this._registerVMWithFailoverCluster; set => this._registerVMWithFailoverCluster = value; }

        /// <summary>Backing field for <see cref="VMDisplayName" /> property.</summary>
        private string _vMDisplayName;

        /// <summary>Display name for the destination VM</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string VMDisplayName { get => this._vMDisplayName; set => this._vMDisplayName = value; }

        /// <summary>Creates an new <see cref="OverrideReplicationOptionsHyperV" /> instance.</summary>
        public OverrideReplicationOptionsHyperV()
        {

        }
    }
    /// Replication options for HyperV
    public partial interface IOverrideReplicationOptionsHyperV :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Select a network interface from the Network adapter list</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Select a network interface from the Network adapter list",
        SerializedName = @"networkAdapter",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.INetworkName) })]
        Commvault.Powershell.Models.INetworkName[] NetworkAdapter { get; set; }
        /// <summary>
        /// Register replicated virtual machines to the failover cluster for the destination client.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Register replicated virtual machines to the failover cluster for the destination client.",
        SerializedName = @"registerVMWithFailoverCluster",
        PossibleTypes = new [] { typeof(string) })]
        string RegisterVMWithFailoverCluster { get; set; }
        /// <summary>Display name for the destination VM</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Display name for the destination VM",
        SerializedName = @"vmDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string VMDisplayName { get; set; }

    }
    /// Replication options for HyperV
    internal partial interface IOverrideReplicationOptionsHyperVInternal

    {
        /// <summary>Select a network interface from the Network adapter list</summary>
        Commvault.Powershell.Models.INetworkName[] NetworkAdapter { get; set; }
        /// <summary>
        /// Register replicated virtual machines to the failover cluster for the destination client.
        /// </summary>
        string RegisterVMWithFailoverCluster { get; set; }
        /// <summary>Display name for the destination VM</summary>
        string VMDisplayName { get; set; }

    }
}