// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>hypervisorCommonProps</summary>
    public partial class HypervisorCommonProps :
        Commvault.Powershell.Models.IHypervisorCommonProps,
        Commvault.Powershell.Models.IHypervisorCommonPropsInternal
    {

        /// <summary>Internal Acessors for Company</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IHypervisorCommonPropsInternal.Company { get => (this._company = this._company ?? new Commvault.Powershell.Models.IdName()); set { {_company = value;} } }

        /// <summary>Backing field for <see cref="Company" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _company;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Company { get => (this._company = this._company ?? new Commvault.Powershell.Models.IdName()); set => this._company = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public int? CompanyId { get => ((Commvault.Powershell.Models.IIdNameInternal)Company).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Company).Id = value ?? default(int); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string CompanyName { get => ((Commvault.Powershell.Models.IIdNameInternal)Company).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Company).Name = value ?? null; }

        /// <summary>Backing field for <see cref="IsDeconfigured" /> property.</summary>
        private bool? _isDeconfigured;

        /// <summary>True if the hypervisor is deconfigured</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? IsDeconfigured { get => this._isDeconfigured; set => this._isDeconfigured = value; }

        /// <summary>Backing field for <see cref="IsIndexingV2" /> property.</summary>
        private bool? _isIndexingV2;

        /// <summary>True if Indexing version is 2</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? IsIndexingV2 { get => this._isIndexingV2; set => this._isIndexingV2 = value; }

        /// <summary>Backing field for <see cref="RetirePhase" /> property.</summary>
        private string _retirePhase;

        /// <summary>RetireClientPhase</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string RetirePhase { get => this._retirePhase; set => this._retirePhase = value; }

        /// <summary>Creates an new <see cref="HypervisorCommonProps" /> instance.</summary>
        public HypervisorCommonProps()
        {

        }
    }
    /// hypervisorCommonProps
    public partial interface IHypervisorCommonProps :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(int) })]
        int? CompanyId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string CompanyName { get; set; }
        /// <summary>True if the hypervisor is deconfigured</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"True if the hypervisor is deconfigured",
        SerializedName = @"isDeconfigured",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDeconfigured { get; set; }
        /// <summary>True if Indexing version is 2</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"True if Indexing version is 2",
        SerializedName = @"isIndexingV2",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsIndexingV2 { get; set; }
        /// <summary>RetireClientPhase</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"RetireClientPhase",
        SerializedName = @"retirePhase",
        PossibleTypes = new [] { typeof(string) })]
        string RetirePhase { get; set; }

    }
    /// hypervisorCommonProps
    internal partial interface IHypervisorCommonPropsInternal

    {
        Commvault.Powershell.Models.IIdName Company { get; set; }

        int? CompanyId { get; set; }

        string CompanyName { get; set; }
        /// <summary>True if the hypervisor is deconfigured</summary>
        bool? IsDeconfigured { get; set; }
        /// <summary>True if Indexing version is 2</summary>
        bool? IsIndexingV2 { get; set; }
        /// <summary>RetireClientPhase</summary>
        string RetirePhase { get; set; }

    }
}