// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>This object will hold company and selected user group for saml.</summary>
    public partial class CompanyWithUserGroupAssocDetails :
        Commvault.Powershell.Models.ICompanyWithUserGroupAssocDetails,
        Commvault.Powershell.Models.ICompanyWithUserGroupAssocDetailsInternal
    {

        /// <summary>Internal Acessors for CompanyInfo</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.ICompanyWithUserGroupAssocDetailsInternal.CompanyInfo { get => (this._companyInfo = this._companyInfo ?? new Commvault.Powershell.Models.IdName()); set { {_companyInfo = value;} } }

        /// <summary>Internal Acessors for UserGroupInfo</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.ICompanyWithUserGroupAssocDetailsInternal.UserGroupInfo { get => (this._userGroupInfo = this._userGroupInfo ?? new Commvault.Powershell.Models.IdName()); set { {_userGroupInfo = value;} } }

        /// <summary>Backing field for <see cref="CompanyInfo" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _companyInfo;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName CompanyInfo { get => (this._companyInfo = this._companyInfo ?? new Commvault.Powershell.Models.IdName()); set => this._companyInfo = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? CompanyInfoId { get => ((Commvault.Powershell.Models.IIdNameInternal)CompanyInfo).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)CompanyInfo).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string CompanyInfoName { get => ((Commvault.Powershell.Models.IIdNameInternal)CompanyInfo).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)CompanyInfo).Name = value ?? null; }

        /// <summary>Backing field for <see cref="UserGroupInfo" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _userGroupInfo;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName UserGroupInfo { get => (this._userGroupInfo = this._userGroupInfo ?? new Commvault.Powershell.Models.IdName()); set => this._userGroupInfo = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? UserGroupInfoId { get => ((Commvault.Powershell.Models.IIdNameInternal)UserGroupInfo).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)UserGroupInfo).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string UserGroupInfoName { get => ((Commvault.Powershell.Models.IIdNameInternal)UserGroupInfo).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)UserGroupInfo).Name = value ?? null; }

        /// <summary>Creates an new <see cref="CompanyWithUserGroupAssocDetails" /> instance.</summary>
        public CompanyWithUserGroupAssocDetails()
        {

        }
    }
    /// This object will hold company and selected user group for saml.
    public partial interface ICompanyWithUserGroupAssocDetails :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? CompanyInfoId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string CompanyInfoName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? UserGroupInfoId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string UserGroupInfoName { get; set; }

    }
    /// This object will hold company and selected user group for saml.
    internal partial interface ICompanyWithUserGroupAssocDetailsInternal

    {
        Commvault.Powershell.Models.IIdName CompanyInfo { get; set; }

        long? CompanyInfoId { get; set; }

        string CompanyInfoName { get; set; }

        Commvault.Powershell.Models.IIdName UserGroupInfo { get; set; }

        long? UserGroupInfoId { get; set; }

        string UserGroupInfoName { get; set; }

    }
}