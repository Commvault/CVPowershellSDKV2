// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.3, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>
    /// Applicable only for credentials with Cloud Account, Vendor Type as Microsoft Azure and authType is Access Key
    /// </summary>
    public partial class AzureCredentialContent :
        Commvault.Powershell.Models.IAzureCredentialContent,
        Commvault.Powershell.Models.IAzureCredentialContentInternal
    {

        /// <summary>Backing field for <see cref="AccountName" /> property.</summary>
        private string _accountName;

        /// <summary>
        /// Account name of Credential. If updated the updated account name is considered else the existing account name is considered.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string AccountName { get => this._accountName; set => this._accountName = value; }

        /// <summary>Internal Acessors for OwnerUser</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IAzureCredentialContentInternal.OwnerUser { get => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).OwnerUser; set => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).OwnerUser = value; }

        /// <summary>Internal Acessors for OwnerUserGroup</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IAzureCredentialContentInternal.OwnerUserGroup { get => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).OwnerUserGroup; set => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).OwnerUserGroup = value; }

        /// <summary>Internal Acessors for Security</summary>
        Commvault.Powershell.Models.ICredentialSecurity Commvault.Powershell.Models.IAzureCredentialContentInternal.Security { get => (this._security = this._security ?? new Commvault.Powershell.Models.CredentialSecurity()); set { {_security = value;} } }

        /// <summary>Internal Acessors for SecurityOwner</summary>
        Commvault.Powershell.Models.ICredentialOwner Commvault.Powershell.Models.IAzureCredentialContentInternal.SecurityOwner { get => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).Owner; set => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).Owner = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Updated description of Credential</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="NewAccessKeyId" /> property.</summary>
        private string _newAccessKeyId;

        /// <summary>Access key ID of Credential and must be in base64 encoded format.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string NewAccessKeyId { get => this._newAccessKeyId; set => this._newAccessKeyId = value; }

        /// <summary>Backing field for <see cref="NewName" /> property.</summary>
        private string _newName;

        /// <summary>Updated name of credential</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string NewName { get => this._newName; set => this._newName = value; }

        /// <summary>Backing field for <see cref="Security" /> property.</summary>
        private Commvault.Powershell.Models.ICredentialSecurity _security;

        /// <summary>Security association of a list of users and user groups</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.ICredentialSecurity Security { get => (this._security = this._security ?? new Commvault.Powershell.Models.CredentialSecurity()); set => this._security = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public Commvault.Powershell.Models.ICredentialSecurityAssociations[] SecurityAssociations { get => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).Associations; set => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).Associations = value ?? null /* arrayOf */; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public int? UserGroupId { get => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).UserGroupId; set => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).UserGroupId = value ?? default(int); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string UserGroupName { get => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).UserGroupName; set => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).UserGroupName = value ?? null; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public int? UserId { get => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).UserId; set => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).UserId = value ?? default(int); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string UserName { get => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).UserName; set => ((Commvault.Powershell.Models.ICredentialSecurityInternal)Security).UserName = value ?? null; }

        /// <summary>Creates an new <see cref="AzureCredentialContent" /> instance.</summary>
        public AzureCredentialContent()
        {

        }
    }
    /// Applicable only for credentials with Cloud Account, Vendor Type as Microsoft Azure and authType is Access Key
    public partial interface IAzureCredentialContent :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Account name of Credential. If updated the updated account name is considered else the existing account name is considered.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Account name of Credential. If updated the updated account name is considered else the existing account name is considered.",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string AccountName { get; set; }
        /// <summary>Updated description of Credential</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Updated description of Credential",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Access key ID of Credential and must be in base64 encoded format.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Access key ID of Credential and must be in base64 encoded format.",
        SerializedName = @"newAccessKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string NewAccessKeyId { get; set; }
        /// <summary>Updated name of credential</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Updated name of credential",
        SerializedName = @"newName",
        PossibleTypes = new [] { typeof(string) })]
        string NewName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"associations",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.ICredentialSecurityAssociations) })]
        Commvault.Powershell.Models.ICredentialSecurityAssociations[] SecurityAssociations { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(int) })]
        int? UserGroupId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string UserGroupName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(int) })]
        int? UserId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string UserName { get; set; }

    }
    /// Applicable only for credentials with Cloud Account, Vendor Type as Microsoft Azure and authType is Access Key
    internal partial interface IAzureCredentialContentInternal

    {
        /// <summary>
        /// Account name of Credential. If updated the updated account name is considered else the existing account name is considered.
        /// </summary>
        string AccountName { get; set; }
        /// <summary>Updated description of Credential</summary>
        string Description { get; set; }
        /// <summary>Access key ID of Credential and must be in base64 encoded format.</summary>
        string NewAccessKeyId { get; set; }
        /// <summary>Updated name of credential</summary>
        string NewName { get; set; }

        Commvault.Powershell.Models.IIdName OwnerUser { get; set; }

        Commvault.Powershell.Models.IIdName OwnerUserGroup { get; set; }
        /// <summary>Security association of a list of users and user groups</summary>
        Commvault.Powershell.Models.ICredentialSecurity Security { get; set; }

        Commvault.Powershell.Models.ICredentialSecurityAssociations[] SecurityAssociations { get; set; }
        /// <summary>Owner of a credential can be a user or user group</summary>
        Commvault.Powershell.Models.ICredentialOwner SecurityOwner { get; set; }

        int? UserGroupId { get; set; }

        string UserGroupName { get; set; }

        int? UserId { get; set; }

        string UserName { get; set; }

    }
}