// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6365, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>
    /// Copy to be configured for a replication group. The first copy from the list is regarded as the Primary copy. Secondary
    /// copy, if provided, is used for replication. Provide both the id and the name of the storage pool
    /// </summary>
    public partial class StorageCopyCreate :
        Commvault.Powershell.Models.IStorageCopyCreate,
        Commvault.Powershell.Models.IStorageCopyCreateInternal
    {

        /// <summary>Internal Acessors for StoragePool</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IStorageCopyCreateInternal.StoragePool { get => (this._storagePool = this._storagePool ?? new Commvault.Powershell.Models.IdName()); set { {_storagePool = value;} } }

        /// <summary>Backing field for <see cref="IsDedupe" /> property.</summary>
        private bool _isDedupe;

        /// <summary>Denotes if this is a deduplication copy</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool IsDedupe { get => this._isDedupe; set => this._isDedupe = value; }

        /// <summary>Backing field for <see cref="StoragePool" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _storagePool;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName StoragePool { get => (this._storagePool = this._storagePool ?? new Commvault.Powershell.Models.IdName()); set => this._storagePool = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public int? StoragePoolId { get => ((Commvault.Powershell.Models.IIdNameInternal)StoragePool).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)StoragePool).Id = value ?? default(int); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string StoragePoolName { get => ((Commvault.Powershell.Models.IIdNameInternal)StoragePool).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)StoragePool).Name = value ?? null; }

        /// <summary>Creates an new <see cref="StorageCopyCreate" /> instance.</summary>
        public StorageCopyCreate()
        {

        }
    }
    /// Copy to be configured for a replication group. The first copy from the list is regarded as the Primary copy. Secondary
    /// copy, if provided, is used for replication. Provide both the id and the name of the storage pool
    public partial interface IStorageCopyCreate :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Denotes if this is a deduplication copy</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Denotes if this is a deduplication copy",
        SerializedName = @"isDedupe",
        PossibleTypes = new [] { typeof(bool) })]
        bool IsDedupe { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(int) })]
        int? StoragePoolId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string StoragePoolName { get; set; }

    }
    /// Copy to be configured for a replication group. The first copy from the list is regarded as the Primary copy. Secondary
    /// copy, if provided, is used for replication. Provide both the id and the name of the storage pool
    internal partial interface IStorageCopyCreateInternal

    {
        /// <summary>Denotes if this is a deduplication copy</summary>
        bool IsDedupe { get; set; }

        Commvault.Powershell.Models.IIdName StoragePool { get; set; }

        int? StoragePoolId { get; set; }

        string StoragePoolName { get; set; }

    }
}