// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.3, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>RMRequestDetails</summary>
    public partial class RmRequestDetails :
        Commvault.Powershell.Models.IRmRequestDetails,
        Commvault.Powershell.Models.IRmRequestDetailsInternal,
        Commvault.Powershell.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Commvault.Powershell.Models.IRmRequestSummary" />
        /// </summary>
        private Commvault.Powershell.Models.IRmRequestSummary __rmRequestSummary = new Commvault.Powershell.Models.RmRequestSummary();

        /// <summary>Enum to signify the source application of the request</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public string Application { get => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Application; set => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Application = value; }

        /// <summary>List of the request approvers</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public Commvault.Powershell.Models.IIdName[] Approvers { get => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Approvers; set => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Approvers = value; }

        /// <summary>Request creation time in unix epoch format</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public long? CreatedOn { get => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).CreatedOn; set => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).CreatedOn = value; }

        /// <summary>Request id</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public int? Id { get => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Id; set => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Id = value; }

        /// <summary>Request name</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public string Name { get => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Name; set => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Name = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public Commvault.Powershell.Models.IIdName Owner { get => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Owner; set => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Owner = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public int? OwnerId { get => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).OwnerId; set => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).OwnerId = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public string OwnerName { get => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).OwnerName; set => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).OwnerName = value; }

        /// <summary>Backing field for <see cref="Properties" /> property.</summary>
        private Commvault.Powershell.Models.INameValues[] _properties;

        /// <summary>Properties of the request</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.INameValues[] Properties { get => this._properties; set => this._properties = value; }

        /// <summary>Email of the requestor</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public string Requestor { get => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Requestor; set => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Requestor = value; }

        /// <summary>List of request reviewers</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public Commvault.Powershell.Models.IIdName[] Reviewers { get => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Reviewers; set => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Reviewers = value; }

        /// <summary>Signifies the progress of the request</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public string Status { get => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Status; set => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Status = value; }

        /// <summary>RMRequestType</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inherited)]
        public string Type { get => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Type; set => ((Commvault.Powershell.Models.IRmRequestSummaryInternal)__rmRequestSummary).Type = value; }

        /// <summary>Creates an new <see cref="RmRequestDetails" /> instance.</summary>
        public RmRequestDetails()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Commvault.Powershell.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Commvault.Powershell.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__rmRequestSummary), __rmRequestSummary);
            await eventListener.AssertObjectIsValid(nameof(__rmRequestSummary), __rmRequestSummary);
        }
    }
    /// RMRequestDetails
    public partial interface IRmRequestDetails :
        Commvault.Powershell.Runtime.IJsonSerializable,
        Commvault.Powershell.Models.IRmRequestSummary
    {
        /// <summary>Properties of the request</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Properties of the request",
        SerializedName = @"properties",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.INameValues) })]
        Commvault.Powershell.Models.INameValues[] Properties { get; set; }

    }
    /// RMRequestDetails
    internal partial interface IRmRequestDetailsInternal :
        Commvault.Powershell.Models.IRmRequestSummaryInternal
    {
        /// <summary>Properties of the request</summary>
        Commvault.Powershell.Models.INameValues[] Properties { get; set; }

    }
}