// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>PlanOverridenOptions</summary>
    public partial class PlanOverridenOptions :
        Commvault.Powershell.Models.IPlanOverridenOptions,
        Commvault.Powershell.Models.IPlanOverridenOptionsInternal
    {

        /// <summary>Backing field for <see cref="Overridden" /> property.</summary>
        private bool? _overridden;

        /// <summary>Flag telling if this setting is currently being overriden</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? Overridden { get => this._overridden; set => this._overridden = value; }

        /// <summary>Backing field for <see cref="OverrideBase" /> property.</summary>
        private string _overrideBase;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string OverrideBase { get => this._overrideBase; set => this._overrideBase = value; }

        /// <summary>Creates an new <see cref="PlanOverridenOptions" /> instance.</summary>
        public PlanOverridenOptions()
        {

        }
    }
    /// PlanOverridenOptions
    public partial interface IPlanOverridenOptions :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Flag telling if this setting is currently being overriden</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Flag telling if this setting is currently being overriden",
        SerializedName = @"overridden",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Overridden { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"overrideBase",
        PossibleTypes = new [] { typeof(string) })]
        string OverrideBase { get; set; }

    }
    /// PlanOverridenOptions
    internal partial interface IPlanOverridenOptionsInternal

    {
        /// <summary>Flag telling if this setting is currently being overriden</summary>
        bool? Overridden { get; set; }

        string OverrideBase { get; set; }

    }
}