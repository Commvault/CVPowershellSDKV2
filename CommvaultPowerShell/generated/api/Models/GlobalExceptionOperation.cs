// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Information conatins the operation to be done on exceptions</summary>
    public partial class GlobalExceptionOperation :
        Commvault.Powershell.Models.IGlobalExceptionOperation,
        Commvault.Powershell.Models.IGlobalExceptionOperationInternal
    {

        /// <summary>Backing field for <see cref="Exceptions" /> property.</summary>
        private string[] _exceptions;

        /// <summary>Array of exceptions which will be operated upon based on the operation type</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string[] Exceptions { get => this._exceptions; set => this._exceptions = value; }

        /// <summary>Backing field for <see cref="OperationType" /> property.</summary>
        private string _operationType;

        /// <summary>
        /// The operations on global exceptions provided would be executed based on the operation type provided
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string OperationType { get => this._operationType; set => this._operationType = value; }

        /// <summary>Creates an new <see cref="GlobalExceptionOperation" /> instance.</summary>
        public GlobalExceptionOperation()
        {

        }
    }
    /// Information conatins the operation to be done on exceptions
    public partial interface IGlobalExceptionOperation :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Array of exceptions which will be operated upon based on the operation type</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of exceptions which will be operated upon based on the operation type",
        SerializedName = @"exceptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] Exceptions { get; set; }
        /// <summary>
        /// The operations on global exceptions provided would be executed based on the operation type provided
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The operations on global exceptions provided would be executed based on the operation type provided",
        SerializedName = @"operationType",
        PossibleTypes = new [] { typeof(string) })]
        string OperationType { get; set; }

    }
    /// Information conatins the operation to be done on exceptions
    internal partial interface IGlobalExceptionOperationInternal

    {
        /// <summary>Array of exceptions which will be operated upon based on the operation type</summary>
        string[] Exceptions { get; set; }
        /// <summary>
        /// The operations on global exceptions provided would be executed based on the operation type provided
        /// </summary>
        string OperationType { get; set; }

    }
}