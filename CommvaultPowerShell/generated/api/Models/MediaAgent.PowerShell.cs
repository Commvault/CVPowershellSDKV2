// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(MediaAgentTypeConverter))]
    public partial class MediaAgent
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.MediaAgent"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.IMediaAgent" />.</returns>
        public static Commvault.Powershell.Models.IMediaAgent DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new MediaAgent(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.MediaAgent"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.IMediaAgent" />.</returns>
        public static Commvault.Powershell.Models.IMediaAgent DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new MediaAgent(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="MediaAgent" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Commvault.Powershell.Models.IMediaAgent FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.MediaAgent"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal MediaAgent(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).General = (Commvault.Powershell.Models.IMediaAgentSummary) content.GetValueForProperty("General",((Commvault.Powershell.Models.IMediaAgentInternal)this).General, Commvault.Powershell.Models.MediaAgentSummaryTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).IndexCache = (Commvault.Powershell.Models.IIndexCache) content.GetValueForProperty("IndexCache",((Commvault.Powershell.Models.IMediaAgentInternal)this).IndexCache, Commvault.Powershell.Models.IndexCacheTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).Control = (Commvault.Powershell.Models.IMediaAgentControl) content.GetValueForProperty("Control",((Commvault.Powershell.Models.IMediaAgentInternal)this).Control, Commvault.Powershell.Models.MediaAgentControlTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).Security = (Commvault.Powershell.Models.ISecurityAssoc[]) content.GetValueForProperty("Security",((Commvault.Powershell.Models.IMediaAgentInternal)this).Security, __y => TypeConverterExtensions.SelectToArray<Commvault.Powershell.Models.ISecurityAssoc>(__y, Commvault.Powershell.Models.SecurityAssocTypeConverter.ConvertFrom));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).IndexCachePath = (string) content.GetValueForProperty("IndexCachePath",((Commvault.Powershell.Models.IMediaAgentInternal)this).IndexCachePath, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralOperatingSystem = (Commvault.Powershell.Models.IIdNameType) content.GetValueForProperty("GeneralOperatingSystem",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralOperatingSystem, Commvault.Powershell.Models.IdNameTypeTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralCompany = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("GeneralCompany",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralCompany, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralId = (long?) content.GetValueForProperty("GeneralId",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralName = (string) content.GetValueForProperty("GeneralName",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralDisplayName = (string) content.GetValueForProperty("GeneralDisplayName",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralDisplayName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralStatus = (string) content.GetValueForProperty("GeneralStatus",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralStatus, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralIsUnlicensedMa = (bool?) content.GetValueForProperty("GeneralIsUnlicensedMa",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralIsUnlicensedMa, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralOfflineReason = (string) content.GetValueForProperty("GeneralOfflineReason",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralOfflineReason, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralOfflineReasonValue = (long?) content.GetValueForProperty("GeneralOfflineReasonValue",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralOfflineReasonValue, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralVersion = (string) content.GetValueForProperty("GeneralVersion",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralVersion, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralReleaseId = (long?) content.GetValueForProperty("GeneralReleaseId",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralReleaseId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralDescription = (string) content.GetValueForProperty("GeneralDescription",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralDescription, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).IndexCacheLogsCache = (Commvault.Powershell.Models.IMediaAgentLogsCache) content.GetValueForProperty("IndexCacheLogsCache",((Commvault.Powershell.Models.IMediaAgentInternal)this).IndexCacheLogsCache, Commvault.Powershell.Models.MediaAgentLogsCacheTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlEnabled = (bool?) content.GetValueForProperty("ControlEnabled",((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlOptimizeForConcurrentLanBackups = (bool?) content.GetValueForProperty("ControlOptimizeForConcurrentLanBackups",((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlOptimizeForConcurrentLanBackups, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlMaintenanceMode = (bool?) content.GetValueForProperty("ControlMaintenanceMode",((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlMaintenanceMode, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlRansomwareProtection = (bool?) content.GetValueForProperty("ControlRansomwareProtection",((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlRansomwareProtection, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlParallelDataTransferOperations = (long?) content.GetValueForProperty("ControlParallelDataTransferOperations",((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlParallelDataTransferOperations, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).OperatingSystemId = (long?) content.GetValueForProperty("OperatingSystemId",((Commvault.Powershell.Models.IMediaAgentInternal)this).OperatingSystemId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).OperatingSystemName = (string) content.GetValueForProperty("OperatingSystemName",((Commvault.Powershell.Models.IMediaAgentInternal)this).OperatingSystemName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).OperatingSystemType = (string) content.GetValueForProperty("OperatingSystemType",((Commvault.Powershell.Models.IMediaAgentInternal)this).OperatingSystemType, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).CompanyId = (long?) content.GetValueForProperty("CompanyId",((Commvault.Powershell.Models.IMediaAgentInternal)this).CompanyId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).CompanyName = (string) content.GetValueForProperty("CompanyName",((Commvault.Powershell.Models.IMediaAgentInternal)this).CompanyName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).LogCacheEnabled = (bool?) content.GetValueForProperty("LogCacheEnabled",((Commvault.Powershell.Models.IMediaAgentInternal)this).LogCacheEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).LogCachePath = (string) content.GetValueForProperty("LogCachePath",((Commvault.Powershell.Models.IMediaAgentInternal)this).LogCachePath, global::System.Convert.ToString);
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.MediaAgent"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal MediaAgent(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).General = (Commvault.Powershell.Models.IMediaAgentSummary) content.GetValueForProperty("General",((Commvault.Powershell.Models.IMediaAgentInternal)this).General, Commvault.Powershell.Models.MediaAgentSummaryTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).IndexCache = (Commvault.Powershell.Models.IIndexCache) content.GetValueForProperty("IndexCache",((Commvault.Powershell.Models.IMediaAgentInternal)this).IndexCache, Commvault.Powershell.Models.IndexCacheTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).Control = (Commvault.Powershell.Models.IMediaAgentControl) content.GetValueForProperty("Control",((Commvault.Powershell.Models.IMediaAgentInternal)this).Control, Commvault.Powershell.Models.MediaAgentControlTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).Security = (Commvault.Powershell.Models.ISecurityAssoc[]) content.GetValueForProperty("Security",((Commvault.Powershell.Models.IMediaAgentInternal)this).Security, __y => TypeConverterExtensions.SelectToArray<Commvault.Powershell.Models.ISecurityAssoc>(__y, Commvault.Powershell.Models.SecurityAssocTypeConverter.ConvertFrom));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).IndexCachePath = (string) content.GetValueForProperty("IndexCachePath",((Commvault.Powershell.Models.IMediaAgentInternal)this).IndexCachePath, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralOperatingSystem = (Commvault.Powershell.Models.IIdNameType) content.GetValueForProperty("GeneralOperatingSystem",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralOperatingSystem, Commvault.Powershell.Models.IdNameTypeTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralCompany = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("GeneralCompany",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralCompany, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralId = (long?) content.GetValueForProperty("GeneralId",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralName = (string) content.GetValueForProperty("GeneralName",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralDisplayName = (string) content.GetValueForProperty("GeneralDisplayName",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralDisplayName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralStatus = (string) content.GetValueForProperty("GeneralStatus",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralStatus, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralIsUnlicensedMa = (bool?) content.GetValueForProperty("GeneralIsUnlicensedMa",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralIsUnlicensedMa, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralOfflineReason = (string) content.GetValueForProperty("GeneralOfflineReason",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralOfflineReason, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralOfflineReasonValue = (long?) content.GetValueForProperty("GeneralOfflineReasonValue",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralOfflineReasonValue, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralVersion = (string) content.GetValueForProperty("GeneralVersion",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralVersion, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralReleaseId = (long?) content.GetValueForProperty("GeneralReleaseId",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralReleaseId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralDescription = (string) content.GetValueForProperty("GeneralDescription",((Commvault.Powershell.Models.IMediaAgentInternal)this).GeneralDescription, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).IndexCacheLogsCache = (Commvault.Powershell.Models.IMediaAgentLogsCache) content.GetValueForProperty("IndexCacheLogsCache",((Commvault.Powershell.Models.IMediaAgentInternal)this).IndexCacheLogsCache, Commvault.Powershell.Models.MediaAgentLogsCacheTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlEnabled = (bool?) content.GetValueForProperty("ControlEnabled",((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlOptimizeForConcurrentLanBackups = (bool?) content.GetValueForProperty("ControlOptimizeForConcurrentLanBackups",((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlOptimizeForConcurrentLanBackups, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlMaintenanceMode = (bool?) content.GetValueForProperty("ControlMaintenanceMode",((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlMaintenanceMode, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlRansomwareProtection = (bool?) content.GetValueForProperty("ControlRansomwareProtection",((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlRansomwareProtection, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlParallelDataTransferOperations = (long?) content.GetValueForProperty("ControlParallelDataTransferOperations",((Commvault.Powershell.Models.IMediaAgentInternal)this).ControlParallelDataTransferOperations, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).OperatingSystemId = (long?) content.GetValueForProperty("OperatingSystemId",((Commvault.Powershell.Models.IMediaAgentInternal)this).OperatingSystemId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).OperatingSystemName = (string) content.GetValueForProperty("OperatingSystemName",((Commvault.Powershell.Models.IMediaAgentInternal)this).OperatingSystemName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).OperatingSystemType = (string) content.GetValueForProperty("OperatingSystemType",((Commvault.Powershell.Models.IMediaAgentInternal)this).OperatingSystemType, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).CompanyId = (long?) content.GetValueForProperty("CompanyId",((Commvault.Powershell.Models.IMediaAgentInternal)this).CompanyId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).CompanyName = (string) content.GetValueForProperty("CompanyName",((Commvault.Powershell.Models.IMediaAgentInternal)this).CompanyName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).LogCacheEnabled = (bool?) content.GetValueForProperty("LogCacheEnabled",((Commvault.Powershell.Models.IMediaAgentInternal)this).LogCacheEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IMediaAgentInternal)this).LogCachePath = (string) content.GetValueForProperty("LogCachePath",((Commvault.Powershell.Models.IMediaAgentInternal)this).LogCachePath, global::System.Convert.ToString);
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    [System.ComponentModel.TypeConverter(typeof(MediaAgentTypeConverter))]
    public partial interface IMediaAgent

    {

    }
}