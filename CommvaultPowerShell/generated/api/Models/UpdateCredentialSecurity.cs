// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Update Security association of a list of users and user groups</summary>
    public partial class UpdateCredentialSecurity :
        Commvault.Powershell.Models.IUpdateCredentialSecurity,
        Commvault.Powershell.Models.IUpdateCredentialSecurityInternal
    {

        /// <summary>Backing field for <see cref="Associations" /> property.</summary>
        private Commvault.Powershell.Models.ICredentialSecurityAssociations[] _associations;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.ICredentialSecurityAssociations[] Associations { get => this._associations; set => this._associations = value; }

        /// <summary>Internal Acessors for Owner</summary>
        Commvault.Powershell.Models.ICredentialOwner Commvault.Powershell.Models.IUpdateCredentialSecurityInternal.Owner { get => (this._owner = this._owner ?? new Commvault.Powershell.Models.CredentialOwner()); set { {_owner = value;} } }

        /// <summary>Internal Acessors for OwnerUser</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IUpdateCredentialSecurityInternal.OwnerUser { get => ((Commvault.Powershell.Models.ICredentialOwnerInternal)Owner).User; set => ((Commvault.Powershell.Models.ICredentialOwnerInternal)Owner).User = value; }

        /// <summary>Internal Acessors for OwnerUserGroup</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IUpdateCredentialSecurityInternal.OwnerUserGroup { get => ((Commvault.Powershell.Models.ICredentialOwnerInternal)Owner).UserGroup; set => ((Commvault.Powershell.Models.ICredentialOwnerInternal)Owner).UserGroup = value; }

        /// <summary>Backing field for <see cref="Owner" /> property.</summary>
        private Commvault.Powershell.Models.ICredentialOwner _owner;

        /// <summary>Owner of a credential can be a user or user group</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.ICredentialOwner Owner { get => (this._owner = this._owner ?? new Commvault.Powershell.Models.CredentialOwner()); set => this._owner = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? UserGroupId { get => ((Commvault.Powershell.Models.ICredentialOwnerInternal)Owner).UserGroupId; set => ((Commvault.Powershell.Models.ICredentialOwnerInternal)Owner).UserGroupId = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string UserGroupName { get => ((Commvault.Powershell.Models.ICredentialOwnerInternal)Owner).UserGroupName; set => ((Commvault.Powershell.Models.ICredentialOwnerInternal)Owner).UserGroupName = value ?? null; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? UserId { get => ((Commvault.Powershell.Models.ICredentialOwnerInternal)Owner).UserId; set => ((Commvault.Powershell.Models.ICredentialOwnerInternal)Owner).UserId = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string UserName { get => ((Commvault.Powershell.Models.ICredentialOwnerInternal)Owner).UserName; set => ((Commvault.Powershell.Models.ICredentialOwnerInternal)Owner).UserName = value ?? null; }

        /// <summary>Creates an new <see cref="UpdateCredentialSecurity" /> instance.</summary>
        public UpdateCredentialSecurity()
        {

        }
    }
    /// Update Security association of a list of users and user groups
    public partial interface IUpdateCredentialSecurity :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"associations",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.ICredentialSecurityAssociations) })]
        Commvault.Powershell.Models.ICredentialSecurityAssociations[] Associations { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? UserGroupId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string UserGroupName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? UserId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string UserName { get; set; }

    }
    /// Update Security association of a list of users and user groups
    internal partial interface IUpdateCredentialSecurityInternal

    {
        Commvault.Powershell.Models.ICredentialSecurityAssociations[] Associations { get; set; }
        /// <summary>Owner of a credential can be a user or user group</summary>
        Commvault.Powershell.Models.ICredentialOwner Owner { get; set; }

        Commvault.Powershell.Models.IIdName OwnerUser { get; set; }

        Commvault.Powershell.Models.IIdName OwnerUserGroup { get; set; }

        long? UserGroupId { get; set; }

        string UserGroupName { get; set; }

        long? UserId { get; set; }

        string UserName { get; set; }

    }
}