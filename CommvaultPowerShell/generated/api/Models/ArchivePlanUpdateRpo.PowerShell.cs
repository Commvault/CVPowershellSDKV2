// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    /// <summary>
    /// Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO
    /// determines the frequency of your backup jobs.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(ArchivePlanUpdateRpoTypeConverter))]
    public partial class ArchivePlanUpdateRpo
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.ArchivePlanUpdateRpo"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ArchivePlanUpdateRpo(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("BackupFrequency"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequency = (Commvault.Powershell.Models.IBackupFrequencyPattern) content.GetValueForProperty("BackupFrequency",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequency, Commvault.Powershell.Models.BackupFrequencyPatternTypeConverter.ConvertFrom);
            }
            if (content.Contains("Sla"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).Sla = (Commvault.Powershell.Models.ISlaUpdateOptions) content.GetValueForProperty("Sla",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).Sla, Commvault.Powershell.Models.SlaUpdateOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupWindow"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupWindow = (System.Collections.Generic.List<Commvault.Powershell.Models.IDayAndTime>) content.GetValueForProperty("BackupWindow",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupWindow, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IDayAndTime>(__y, Commvault.Powershell.Models.DayAndTimeTypeConverter.ConvertFrom));
            }
            if (content.Contains("BackupFrequencyScheduleFrequencyType"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyScheduleFrequencyType = (string) content.GetValueForProperty("BackupFrequencyScheduleFrequencyType",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyScheduleFrequencyType, global::System.Convert.ToString);
            }
            if (content.Contains("BackupFrequencyFrequency"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyFrequency = (long?) content.GetValueForProperty("BackupFrequencyFrequency",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyFrequency, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("BackupFrequencyWeeklyDays"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyWeeklyDays = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupFrequencyWeeklyDays",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyWeeklyDays, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupFrequencyDayOfMonth"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyDayOfMonth = (long?) content.GetValueForProperty("BackupFrequencyDayOfMonth",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyDayOfMonth, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("BackupFrequencyWeekOfMonth"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyWeekOfMonth = (string) content.GetValueForProperty("BackupFrequencyWeekOfMonth",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyWeekOfMonth, global::System.Convert.ToString);
            }
            if (content.Contains("BackupFrequencyDayOfWeek"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyDayOfWeek = (string) content.GetValueForProperty("BackupFrequencyDayOfWeek",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyDayOfWeek, global::System.Convert.ToString);
            }
            if (content.Contains("BackupFrequencyMonthOfYear"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyMonthOfYear = (string) content.GetValueForProperty("BackupFrequencyMonthOfYear",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyMonthOfYear, global::System.Convert.ToString);
            }
            if (content.Contains("BackupFrequencyStartTime"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyStartTime = (long?) content.GetValueForProperty("BackupFrequencyStartTime",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyStartTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("SlaUseSystemDefaultSla"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaUseSystemDefaultSla = (bool?) content.GetValueForProperty("SlaUseSystemDefaultSla",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaUseSystemDefaultSla, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SlaPeriod"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaPeriod = (long?) content.GetValueForProperty("SlaPeriod",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaPeriod, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("SlaExcludeFromSla"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaExcludeFromSla = (bool?) content.GetValueForProperty("SlaExcludeFromSla",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaExcludeFromSla, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SlaEnableAfterDelay"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaEnableAfterDelay = (long?) content.GetValueForProperty("SlaEnableAfterDelay",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaEnableAfterDelay, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("SlaExclusionReason"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaExclusionReason = (string) content.GetValueForProperty("SlaExclusionReason",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaExclusionReason, global::System.Convert.ToString);
            }
            if (content.Contains("SlaLogSlaMinutes"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaLogSlaMinutes = (long?) content.GetValueForProperty("SlaLogSlaMinutes",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaLogSlaMinutes, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.ArchivePlanUpdateRpo"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ArchivePlanUpdateRpo(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("BackupFrequency"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequency = (Commvault.Powershell.Models.IBackupFrequencyPattern) content.GetValueForProperty("BackupFrequency",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequency, Commvault.Powershell.Models.BackupFrequencyPatternTypeConverter.ConvertFrom);
            }
            if (content.Contains("Sla"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).Sla = (Commvault.Powershell.Models.ISlaUpdateOptions) content.GetValueForProperty("Sla",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).Sla, Commvault.Powershell.Models.SlaUpdateOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupWindow"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupWindow = (System.Collections.Generic.List<Commvault.Powershell.Models.IDayAndTime>) content.GetValueForProperty("BackupWindow",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupWindow, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IDayAndTime>(__y, Commvault.Powershell.Models.DayAndTimeTypeConverter.ConvertFrom));
            }
            if (content.Contains("BackupFrequencyScheduleFrequencyType"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyScheduleFrequencyType = (string) content.GetValueForProperty("BackupFrequencyScheduleFrequencyType",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyScheduleFrequencyType, global::System.Convert.ToString);
            }
            if (content.Contains("BackupFrequencyFrequency"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyFrequency = (long?) content.GetValueForProperty("BackupFrequencyFrequency",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyFrequency, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("BackupFrequencyWeeklyDays"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyWeeklyDays = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupFrequencyWeeklyDays",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyWeeklyDays, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupFrequencyDayOfMonth"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyDayOfMonth = (long?) content.GetValueForProperty("BackupFrequencyDayOfMonth",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyDayOfMonth, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("BackupFrequencyWeekOfMonth"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyWeekOfMonth = (string) content.GetValueForProperty("BackupFrequencyWeekOfMonth",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyWeekOfMonth, global::System.Convert.ToString);
            }
            if (content.Contains("BackupFrequencyDayOfWeek"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyDayOfWeek = (string) content.GetValueForProperty("BackupFrequencyDayOfWeek",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyDayOfWeek, global::System.Convert.ToString);
            }
            if (content.Contains("BackupFrequencyMonthOfYear"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyMonthOfYear = (string) content.GetValueForProperty("BackupFrequencyMonthOfYear",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyMonthOfYear, global::System.Convert.ToString);
            }
            if (content.Contains("BackupFrequencyStartTime"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyStartTime = (long?) content.GetValueForProperty("BackupFrequencyStartTime",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).BackupFrequencyStartTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("SlaUseSystemDefaultSla"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaUseSystemDefaultSla = (bool?) content.GetValueForProperty("SlaUseSystemDefaultSla",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaUseSystemDefaultSla, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SlaPeriod"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaPeriod = (long?) content.GetValueForProperty("SlaPeriod",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaPeriod, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("SlaExcludeFromSla"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaExcludeFromSla = (bool?) content.GetValueForProperty("SlaExcludeFromSla",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaExcludeFromSla, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SlaEnableAfterDelay"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaEnableAfterDelay = (long?) content.GetValueForProperty("SlaEnableAfterDelay",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaEnableAfterDelay, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("SlaExclusionReason"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaExclusionReason = (string) content.GetValueForProperty("SlaExclusionReason",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaExclusionReason, global::System.Convert.ToString);
            }
            if (content.Contains("SlaLogSlaMinutes"))
            {
                ((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaLogSlaMinutes = (long?) content.GetValueForProperty("SlaLogSlaMinutes",((Commvault.Powershell.Models.IArchivePlanUpdateRpoInternal)this).SlaLogSlaMinutes, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.ArchivePlanUpdateRpo"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Commvault.Powershell.Models.IArchivePlanUpdateRpo" />.
        /// </returns>
        public static Commvault.Powershell.Models.IArchivePlanUpdateRpo DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ArchivePlanUpdateRpo(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.ArchivePlanUpdateRpo"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Commvault.Powershell.Models.IArchivePlanUpdateRpo" />.
        /// </returns>
        public static Commvault.Powershell.Models.IArchivePlanUpdateRpo DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ArchivePlanUpdateRpo(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ArchivePlanUpdateRpo" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ArchivePlanUpdateRpo" /> model class.</returns>
        public static Commvault.Powershell.Models.IArchivePlanUpdateRpo FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO
    /// determines the frequency of your backup jobs.
    [System.ComponentModel.TypeConverter(typeof(ArchivePlanUpdateRpoTypeConverter))]
    public partial interface IArchivePlanUpdateRpo

    {

    }
}