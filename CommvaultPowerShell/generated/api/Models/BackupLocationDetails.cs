// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class BackupLocationDetails :
        Commvault.Powershell.Models.IBackupLocationDetails,
        Commvault.Powershell.Models.IBackupLocationDetailsInternal
    {

        /// <summary>Backing field for <see cref="DiskAccessPaths" /> property.</summary>
        private Commvault.Powershell.Models.IAccessPathDetails[] _diskAccessPaths;

        /// <summary>access paths available on the backup location</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.IAccessPathDetails[] DiskAccessPaths { get => this._diskAccessPaths; set => this._diskAccessPaths = value; }

        /// <summary>Backing field for <see cref="FreeSpace" /> property.</summary>
        private long? _freeSpace;

        /// <summary>total free space on the backup location</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? FreeSpace { get => this._freeSpace; set => this._freeSpace = value; }

        /// <summary>Backing field for <see cref="TotalCapacity" /> property.</summary>
        private long? _totalCapacity;

        /// <summary>total capacity of the backup location</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? TotalCapacity { get => this._totalCapacity; set => this._totalCapacity = value; }

        /// <summary>Creates an new <see cref="BackupLocationDetails" /> instance.</summary>
        public BackupLocationDetails()
        {

        }
    }
    public partial interface IBackupLocationDetails :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>access paths available on the backup location</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"access paths available on the backup location",
        SerializedName = @"diskAccessPaths",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IAccessPathDetails) })]
        Commvault.Powershell.Models.IAccessPathDetails[] DiskAccessPaths { get; set; }
        /// <summary>total free space on the backup location</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"total free space on the backup location",
        SerializedName = @"freeSpace",
        PossibleTypes = new [] { typeof(long) })]
        long? FreeSpace { get; set; }
        /// <summary>total capacity of the backup location</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"total capacity of the backup location",
        SerializedName = @"totalCapacity",
        PossibleTypes = new [] { typeof(long) })]
        long? TotalCapacity { get; set; }

    }
    internal partial interface IBackupLocationDetailsInternal

    {
        /// <summary>access paths available on the backup location</summary>
        Commvault.Powershell.Models.IAccessPathDetails[] DiskAccessPaths { get; set; }
        /// <summary>total free space on the backup location</summary>
        long? FreeSpace { get; set; }
        /// <summary>total capacity of the backup location</summary>
        long? TotalCapacity { get; set; }

    }
}