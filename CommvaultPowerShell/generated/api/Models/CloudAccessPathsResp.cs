// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>CloudAccessPathsResp</summary>
    public partial class CloudAccessPathsResp :
        Commvault.Powershell.Models.ICloudAccessPathsResp,
        Commvault.Powershell.Models.ICloudAccessPathsRespInternal
    {

        /// <summary>Backing field for <see cref="Access" /> property.</summary>
        private string _access;

        /// <summary>Type of access provided to the cloud storage are Read and Read/Write</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Access { get => this._access; set => this._access = value; }

        /// <summary>Backing field for <see cref="AccessPathId" /> property.</summary>
        private long? _accessPathId;

        /// <summary>Id of cloud access path</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? AccessPathId { get => this._accessPathId; set => this._accessPathId = value; }

        /// <summary>Backing field for <see cref="Accessible" /> property.</summary>
        private string _accessible;

        /// <summary>Accessibility status of cloud storage</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Accessible { get => this._accessible; set => this._accessible = value; }

        /// <summary>Backing field for <see cref="Bucket" /> property.</summary>
        private string _bucket;

        /// <summary>Name of the bucket</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Bucket { get => this._bucket; set => this._bucket = value; }

        /// <summary>Internal Acessors for MediaAgent</summary>
        Commvault.Powershell.Models.IIdNameDisplayName Commvault.Powershell.Models.ICloudAccessPathsRespInternal.MediaAgent { get => (this._mediaAgent = this._mediaAgent ?? new Commvault.Powershell.Models.IdNameDisplayName()); set { {_mediaAgent = value;} } }

        /// <summary>Backing field for <see cref="MediaAgent" /> property.</summary>
        private Commvault.Powershell.Models.IIdNameDisplayName _mediaAgent;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdNameDisplayName MediaAgent { get => (this._mediaAgent = this._mediaAgent ?? new Commvault.Powershell.Models.IdNameDisplayName()); set => this._mediaAgent = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string MediaAgentDisplayName { get => ((Commvault.Powershell.Models.IIdNameDisplayNameInternal)MediaAgent).DisplayName; set => ((Commvault.Powershell.Models.IIdNameDisplayNameInternal)MediaAgent).DisplayName = value ?? null; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? MediaAgentId { get => ((Commvault.Powershell.Models.IIdNameDisplayNameInternal)MediaAgent).Id; set => ((Commvault.Powershell.Models.IIdNameDisplayNameInternal)MediaAgent).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string MediaAgentName { get => ((Commvault.Powershell.Models.IIdNameDisplayNameInternal)MediaAgent).Name; set => ((Commvault.Powershell.Models.IIdNameDisplayNameInternal)MediaAgent).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Username" /> property.</summary>
        private string _username;

        /// <summary>Username used to connect to cloud Storage</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Username { get => this._username; set => this._username = value; }

        /// <summary>Creates an new <see cref="CloudAccessPathsResp" /> instance.</summary>
        public CloudAccessPathsResp()
        {

        }
    }
    /// CloudAccessPathsResp
    public partial interface ICloudAccessPathsResp :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Type of access provided to the cloud storage are Read and Read/Write</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of access provided to the cloud storage are Read and Read/Write",
        SerializedName = @"access",
        PossibleTypes = new [] { typeof(string) })]
        string Access { get; set; }
        /// <summary>Id of cloud access path</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of cloud access path",
        SerializedName = @"accessPathId",
        PossibleTypes = new [] { typeof(long) })]
        long? AccessPathId { get; set; }
        /// <summary>Accessibility status of cloud storage</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Accessibility status of cloud storage",
        SerializedName = @"accessible",
        PossibleTypes = new [] { typeof(string) })]
        string Accessible { get; set; }
        /// <summary>Name of the bucket</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the bucket",
        SerializedName = @"bucket",
        PossibleTypes = new [] { typeof(string) })]
        string Bucket { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string MediaAgentDisplayName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? MediaAgentId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string MediaAgentName { get; set; }
        /// <summary>Username used to connect to cloud Storage</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Username used to connect to cloud Storage",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string Username { get; set; }

    }
    /// CloudAccessPathsResp
    internal partial interface ICloudAccessPathsRespInternal

    {
        /// <summary>Type of access provided to the cloud storage are Read and Read/Write</summary>
        string Access { get; set; }
        /// <summary>Id of cloud access path</summary>
        long? AccessPathId { get; set; }
        /// <summary>Accessibility status of cloud storage</summary>
        string Accessible { get; set; }
        /// <summary>Name of the bucket</summary>
        string Bucket { get; set; }

        Commvault.Powershell.Models.IIdNameDisplayName MediaAgent { get; set; }

        string MediaAgentDisplayName { get; set; }

        long? MediaAgentId { get; set; }

        string MediaAgentName { get; set; }
        /// <summary>Username used to connect to cloud Storage</summary>
        string Username { get; set; }

    }
}