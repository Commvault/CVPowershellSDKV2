// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>
    /// The id or name of the permission can be provided in order to associate it to the role. It can be provided with or without
    /// category id or name. If only category id or name is provided, entire list of permissions associated with this category
    /// can be associated to the role.
    /// </summary>
    public partial class Permissions :
        Commvault.Powershell.Models.IPermissions,
        Commvault.Powershell.Models.IPermissionsInternal
    {

        /// <summary>Backing field for <see cref="Category" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _category;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Category { get => (this._category = this._category ?? new Commvault.Powershell.Models.IdName()); set => this._category = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? CategoryId { get => ((Commvault.Powershell.Models.IIdNameInternal)Category).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Category).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string CategoryName { get => ((Commvault.Powershell.Models.IIdNameInternal)Category).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Category).Name = value ?? null; }

        /// <summary>Internal Acessors for Category</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IPermissionsInternal.Category { get => (this._category = this._category ?? new Commvault.Powershell.Models.IdName()); set { {_category = value;} } }

        /// <summary>Internal Acessors for Permission</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IPermissionsInternal.Permission { get => (this._permission = this._permission ?? new Commvault.Powershell.Models.IdName()); set { {_permission = value;} } }

        /// <summary>Backing field for <see cref="Permission" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _permission;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Permission { get => (this._permission = this._permission ?? new Commvault.Powershell.Models.IdName()); set => this._permission = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? PermissionId { get => ((Commvault.Powershell.Models.IIdNameInternal)Permission).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Permission).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string PermissionName { get => ((Commvault.Powershell.Models.IIdNameInternal)Permission).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Permission).Name = value ?? null; }

        /// <summary>Creates an new <see cref="Permissions" /> instance.</summary>
        public Permissions()
        {

        }
    }
    /// The id or name of the permission can be provided in order to associate it to the role. It can be provided with or without
    /// category id or name. If only category id or name is provided, entire list of permissions associated with this category
    /// can be associated to the role.
    public partial interface IPermissions :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? CategoryId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string CategoryName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? PermissionId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PermissionName { get; set; }

    }
    /// The id or name of the permission can be provided in order to associate it to the role. It can be provided with or without
    /// category id or name. If only category id or name is provided, entire list of permissions associated with this category
    /// can be associated to the role.
    internal partial interface IPermissionsInternal

    {
        Commvault.Powershell.Models.IIdName Category { get; set; }

        long? CategoryId { get; set; }

        string CategoryName { get; set; }

        Commvault.Powershell.Models.IIdName Permission { get; set; }

        long? PermissionId { get; set; }

        string PermissionName { get; set; }

    }
}