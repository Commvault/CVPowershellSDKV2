// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    /// <summary>Update a hypervisor group with VMware Cloud Director as the destination vendor</summary>
    [System.ComponentModel.TypeConverter(typeof(UpdateHypervisorGroupVCloudTypeConverter))]
    public partial class UpdateHypervisorGroupVCloud
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.UpdateHypervisorGroupVCloud"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Commvault.Powershell.Models.IUpdateHypervisorGroupVCloud" />.
        /// </returns>
        public static Commvault.Powershell.Models.IUpdateHypervisorGroupVCloud DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new UpdateHypervisorGroupVCloud(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.UpdateHypervisorGroupVCloud"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Commvault.Powershell.Models.IUpdateHypervisorGroupVCloud" />.
        /// </returns>
        public static Commvault.Powershell.Models.IUpdateHypervisorGroupVCloud DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new UpdateHypervisorGroupVCloud(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="UpdateHypervisorGroupVCloud" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="UpdateHypervisorGroupVCloud" /> model class.</returns>
        public static Commvault.Powershell.Models.IUpdateHypervisorGroupVCloud FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.UpdateHypervisorGroupVCloud"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal UpdateHypervisorGroupVCloud(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("HypervisorType"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).HypervisorType = (string) content.GetValueForProperty("HypervisorType",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).HypervisorType, global::System.Convert.ToString);
            }
            if (content.Contains("VOrganizationName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VOrganizationName = (string) content.GetValueForProperty("VOrganizationName",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VOrganizationName, global::System.Convert.ToString);
            }
            if (content.Contains("VOrganizationGuid"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VOrganizationGuid = (string) content.GetValueForProperty("VOrganizationGuid",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VOrganizationGuid, global::System.Convert.ToString);
            }
            if (content.Contains("HostName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).HostName = (string) content.GetValueForProperty("HostName",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).HostName, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterHostName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VcenterHostName = (string) content.GetValueForProperty("VcenterHostName",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VcenterHostName, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterUserName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VcenterUserName = (string) content.GetValueForProperty("VcenterUserName",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VcenterUserName, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterPassword"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VcenterPassword = (string) content.GetValueForProperty("VcenterPassword",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VcenterPassword, global::System.Convert.ToString);
            }
            if (content.Contains("CreateOrgAccount"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).CreateOrgAccount = (bool?) content.GetValueForProperty("CreateOrgAccount",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).CreateOrgAccount, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UserName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).UserName = (string) content.GetValueForProperty("UserName",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).UserName, global::System.Convert.ToString);
            }
            if (content.Contains("Password"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).Password = (string) content.GetValueForProperty("Password",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).Password, global::System.Convert.ToString);
            }
            if (content.Contains("SettingRegionInfo"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingRegionInfo = (Commvault.Powershell.Models.IRegionInfo) content.GetValueForProperty("SettingRegionInfo",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingRegionInfo, Commvault.Powershell.Models.RegionInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("FbrUnixMediaAgentId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).FbrUnixMediaAgentId = (long?) content.GetValueForProperty("FbrUnixMediaAgentId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).FbrUnixMediaAgentId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("FbrUnixMediaAgentName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).FbrUnixMediaAgentName = (string) content.GetValueForProperty("FbrUnixMediaAgentName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).FbrUnixMediaAgentName, global::System.Convert.ToString);
            }
            if (content.Contains("ActivityControlBackupActivityControlOptions"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlBackupActivityControlOptions = (Commvault.Powershell.Models.IActivityControlOptionsProp) content.GetValueForProperty("ActivityControlBackupActivityControlOptions",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlBackupActivityControlOptions, Commvault.Powershell.Models.ActivityControlOptionsPropTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActivityControlRestoreActivityControlOptions"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlRestoreActivityControlOptions = (Commvault.Powershell.Models.IActivityControlOptionsProp) content.GetValueForProperty("ActivityControlRestoreActivityControlOptions",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlRestoreActivityControlOptions, Commvault.Powershell.Models.ActivityControlOptionsPropTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActivityControlEnableBackup"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlEnableBackup = (bool?) content.GetValueForProperty("ActivityControlEnableBackup",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlEnableBackup, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ActivityControlEnableRestore"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlEnableRestore = (bool?) content.GetValueForProperty("ActivityControlEnableRestore",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlEnableRestore, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SecurityClientOwners"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SecurityClientOwners = (string) content.GetValueForProperty("SecurityClientOwners",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SecurityClientOwners, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityAssociatedUserGroups"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SecurityAssociatedUserGroups = (System.Collections.Generic.List<Commvault.Powershell.Models.IIdName>) content.GetValueForProperty("SecurityAssociatedUserGroups",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SecurityAssociatedUserGroups, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IIdName>(__y, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom));
            }
            if (content.Contains("SettingTimeZone"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingTimeZone = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("SettingTimeZone",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingTimeZone, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("SettingMetricsMonitoringPolicy"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingMetricsMonitoringPolicy = (Commvault.Powershell.Models.IHypervisorMonitoringPolicy) content.GetValueForProperty("SettingMetricsMonitoringPolicy",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingMetricsMonitoringPolicy, Commvault.Powershell.Models.HypervisorMonitoringPolicyTypeConverter.ConvertFrom);
            }
            if (content.Contains("SettingGuestCredentials"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingGuestCredentials = (Commvault.Powershell.Models.IUserNamePassword) content.GetValueForProperty("SettingGuestCredentials",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingGuestCredentials, Commvault.Powershell.Models.UserNamePasswordTypeConverter.ConvertFrom);
            }
            if (content.Contains("SettingApplicationCredentials"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingApplicationCredentials = (Commvault.Powershell.Models.IUserNamePassword) content.GetValueForProperty("SettingApplicationCredentials",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingApplicationCredentials, Commvault.Powershell.Models.UserNamePasswordTypeConverter.ConvertFrom);
            }
            if (content.Contains("SettingMountAccessNode"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingMountAccessNode = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("SettingMountAccessNode",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingMountAccessNode, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("SettingCustomAttributes"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingCustomAttributes = (System.Collections.Generic.List<Commvault.Powershell.Models.IHypervisorCustomAttribute>) content.GetValueForProperty("SettingCustomAttributes",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingCustomAttributes, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IHypervisorCustomAttribute>(__y, Commvault.Powershell.Models.HypervisorCustomAttributeTypeConverter.ConvertFrom));
            }
            if (content.Contains("RegionInfoId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoId = (long?) content.GetValueForProperty("RegionInfoId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("RegionInfoName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoName = (string) content.GetValueForProperty("RegionInfoName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoName, global::System.Convert.ToString);
            }
            if (content.Contains("RegionInfoDisplayName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoDisplayName = (string) content.GetValueForProperty("RegionInfoDisplayName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("RegionInfoLatitude"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoLatitude = (string) content.GetValueForProperty("RegionInfoLatitude",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoLatitude, global::System.Convert.ToString);
            }
            if (content.Contains("RegionInfoLongitude"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoLongitude = (string) content.GetValueForProperty("RegionInfoLongitude",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoLongitude, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).CredentialsId = (long?) content.GetValueForProperty("CredentialsId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).CredentialsId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CredentialsName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).CredentialsName = (string) content.GetValueForProperty("CredentialsName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).CredentialsName, global::System.Convert.ToString);
            }
            if (content.Contains("BackupActivityControlOptionDelayTime"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionDelayTime = (Commvault.Powershell.Models.IActivityControlTileDelayTime) content.GetValueForProperty("BackupActivityControlOptionDelayTime",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionDelayTime, Commvault.Powershell.Models.ActivityControlTileDelayTimeTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupActivityControlOptionActivityType"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionActivityType = (string) content.GetValueForProperty("BackupActivityControlOptionActivityType",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionActivityType, global::System.Convert.ToString);
            }
            if (content.Contains("BackupActivityControlOptionEnableAfterADelay"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionEnableAfterADelay = (bool?) content.GetValueForProperty("BackupActivityControlOptionEnableAfterADelay",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionEnableAfterADelay, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BackupActivityControlOptionEnableActivityType"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionEnableActivityType = (bool?) content.GetValueForProperty("BackupActivityControlOptionEnableActivityType",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionEnableActivityType, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RestoreActivityControlOptionDelayTime"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionDelayTime = (Commvault.Powershell.Models.IActivityControlTileDelayTime) content.GetValueForProperty("RestoreActivityControlOptionDelayTime",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionDelayTime, Commvault.Powershell.Models.ActivityControlTileDelayTimeTypeConverter.ConvertFrom);
            }
            if (content.Contains("RestoreActivityControlOptionActivityType"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionActivityType = (string) content.GetValueForProperty("RestoreActivityControlOptionActivityType",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionActivityType, global::System.Convert.ToString);
            }
            if (content.Contains("RestoreActivityControlOptionEnableAfterADelay"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionEnableAfterADelay = (bool?) content.GetValueForProperty("RestoreActivityControlOptionEnableAfterADelay",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionEnableAfterADelay, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RestoreActivityControlOptionEnableActivityType"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionEnableActivityType = (bool?) content.GetValueForProperty("RestoreActivityControlOptionEnableActivityType",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionEnableActivityType, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TimeZoneId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).TimeZoneId = (long?) content.GetValueForProperty("TimeZoneId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).TimeZoneId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("TimeZoneName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).TimeZoneName = (string) content.GetValueForProperty("TimeZoneName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).TimeZoneName, global::System.Convert.ToString);
            }
            if (content.Contains("MetricMonitoringPolicyId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MetricMonitoringPolicyId = (long?) content.GetValueForProperty("MetricMonitoringPolicyId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MetricMonitoringPolicyId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("MetricMonitoringPolicyName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MetricMonitoringPolicyName = (string) content.GetValueForProperty("MetricMonitoringPolicyName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MetricMonitoringPolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("MetricMonitoringPolicyIsEnabled"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MetricMonitoringPolicyIsEnabled = (bool?) content.GetValueForProperty("MetricMonitoringPolicyIsEnabled",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MetricMonitoringPolicyIsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("GuestCredentialsName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).GuestCredentialsName = (string) content.GetValueForProperty("GuestCredentialsName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).GuestCredentialsName, global::System.Convert.ToString);
            }
            if (content.Contains("GuestCredentialsPassword"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).GuestCredentialsPassword = (string) content.GetValueForProperty("GuestCredentialsPassword",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).GuestCredentialsPassword, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicationCredentialsName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ApplicationCredentialsName = (string) content.GetValueForProperty("ApplicationCredentialsName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ApplicationCredentialsName, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicationCredentialsPassword"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ApplicationCredentialsPassword = (string) content.GetValueForProperty("ApplicationCredentialsPassword",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ApplicationCredentialsPassword, global::System.Convert.ToString);
            }
            if (content.Contains("MountAccessNodeId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MountAccessNodeId = (long?) content.GetValueForProperty("MountAccessNodeId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MountAccessNodeId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("MountAccessNodeName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MountAccessNodeName = (string) content.GetValueForProperty("MountAccessNodeName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MountAccessNodeName, global::System.Convert.ToString);
            }
            if (content.Contains("BackupActivityControlOptionsDelayTimeZone"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeZone = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("BackupActivityControlOptionsDelayTimeZone",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeZone, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupActivityControlOptionsDelayTime"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTime = (long?) content.GetValueForProperty("BackupActivityControlOptionsDelayTime",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("BackupActivityControlOptionsDelayTimeValue"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeValue = (string) content.GetValueForProperty("BackupActivityControlOptionsDelayTimeValue",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeValue, global::System.Convert.ToString);
            }
            if (content.Contains("RestoreActivityControlOptionsDelayTimeZone"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeZone = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("RestoreActivityControlOptionsDelayTimeZone",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeZone, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("RestoreActivityControlOptionsDelayTime"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTime = (long?) content.GetValueForProperty("RestoreActivityControlOptionsDelayTime",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("RestoreActivityControlOptionsDelayTimeValue"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeValue = (string) content.GetValueForProperty("RestoreActivityControlOptionsDelayTimeValue",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeValue, global::System.Convert.ToString);
            }
            if (content.Contains("BackupActivityControlOptionsDelayTimeZoneId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeZoneId = (long?) content.GetValueForProperty("BackupActivityControlOptionsDelayTimeZoneId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeZoneId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("BackupActivityControlOptionsDelayTimeZoneName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeZoneName = (string) content.GetValueForProperty("BackupActivityControlOptionsDelayTimeZoneName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeZoneName, global::System.Convert.ToString);
            }
            if (content.Contains("RestoreActivityControlOptionsDelayTimeZoneId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeZoneId = (long?) content.GetValueForProperty("RestoreActivityControlOptionsDelayTimeZoneId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeZoneId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("RestoreActivityControlOptionsDelayTimeZoneName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeZoneName = (string) content.GetValueForProperty("RestoreActivityControlOptionsDelayTimeZoneName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeZoneName, global::System.Convert.ToString);
            }
            if (content.Contains("FbrUnixMediaAgent"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).FbrUnixMediaAgent = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("FbrUnixMediaAgent",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).FbrUnixMediaAgent, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActivityControl"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControl = (Commvault.Powershell.Models.IActivityControlOptions) content.GetValueForProperty("ActivityControl",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControl, Commvault.Powershell.Models.ActivityControlOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Security"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).Security = (Commvault.Powershell.Models.IVMHypervisorSecurityProp) content.GetValueForProperty("Security",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).Security, Commvault.Powershell.Models.VMHypervisorSecurityPropTypeConverter.ConvertFrom);
            }
            if (content.Contains("Settings"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).Settings = (Commvault.Powershell.Models.IHypervisorSettings) content.GetValueForProperty("Settings",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).Settings, Commvault.Powershell.Models.HypervisorSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Credentials"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).Credentials = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("Credentials",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).Credentials, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("AccessNodes"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).AccessNodes = (System.Collections.Generic.List<Commvault.Powershell.Models.IAccessNodeModel>) content.GetValueForProperty("AccessNodes",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).AccessNodes, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IAccessNodeModel>(__y, Commvault.Powershell.Models.AccessNodeModelTypeConverter.ConvertFrom));
            }
            if (content.Contains("NewName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).NewName = (string) content.GetValueForProperty("NewName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).NewName, global::System.Convert.ToString);
            }
            if (content.Contains("SkipCredentialValidation"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SkipCredentialValidation = (bool?) content.GetValueForProperty("SkipCredentialValidation",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SkipCredentialValidation, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.UpdateHypervisorGroupVCloud"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal UpdateHypervisorGroupVCloud(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("HypervisorType"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).HypervisorType = (string) content.GetValueForProperty("HypervisorType",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).HypervisorType, global::System.Convert.ToString);
            }
            if (content.Contains("VOrganizationName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VOrganizationName = (string) content.GetValueForProperty("VOrganizationName",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VOrganizationName, global::System.Convert.ToString);
            }
            if (content.Contains("VOrganizationGuid"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VOrganizationGuid = (string) content.GetValueForProperty("VOrganizationGuid",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VOrganizationGuid, global::System.Convert.ToString);
            }
            if (content.Contains("HostName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).HostName = (string) content.GetValueForProperty("HostName",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).HostName, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterHostName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VcenterHostName = (string) content.GetValueForProperty("VcenterHostName",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VcenterHostName, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterUserName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VcenterUserName = (string) content.GetValueForProperty("VcenterUserName",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VcenterUserName, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterPassword"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VcenterPassword = (string) content.GetValueForProperty("VcenterPassword",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).VcenterPassword, global::System.Convert.ToString);
            }
            if (content.Contains("CreateOrgAccount"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).CreateOrgAccount = (bool?) content.GetValueForProperty("CreateOrgAccount",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).CreateOrgAccount, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UserName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).UserName = (string) content.GetValueForProperty("UserName",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).UserName, global::System.Convert.ToString);
            }
            if (content.Contains("Password"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).Password = (string) content.GetValueForProperty("Password",((Commvault.Powershell.Models.IUpdateHypervisorGroupVCloudInternal)this).Password, global::System.Convert.ToString);
            }
            if (content.Contains("SettingRegionInfo"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingRegionInfo = (Commvault.Powershell.Models.IRegionInfo) content.GetValueForProperty("SettingRegionInfo",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingRegionInfo, Commvault.Powershell.Models.RegionInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("FbrUnixMediaAgentId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).FbrUnixMediaAgentId = (long?) content.GetValueForProperty("FbrUnixMediaAgentId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).FbrUnixMediaAgentId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("FbrUnixMediaAgentName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).FbrUnixMediaAgentName = (string) content.GetValueForProperty("FbrUnixMediaAgentName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).FbrUnixMediaAgentName, global::System.Convert.ToString);
            }
            if (content.Contains("ActivityControlBackupActivityControlOptions"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlBackupActivityControlOptions = (Commvault.Powershell.Models.IActivityControlOptionsProp) content.GetValueForProperty("ActivityControlBackupActivityControlOptions",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlBackupActivityControlOptions, Commvault.Powershell.Models.ActivityControlOptionsPropTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActivityControlRestoreActivityControlOptions"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlRestoreActivityControlOptions = (Commvault.Powershell.Models.IActivityControlOptionsProp) content.GetValueForProperty("ActivityControlRestoreActivityControlOptions",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlRestoreActivityControlOptions, Commvault.Powershell.Models.ActivityControlOptionsPropTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActivityControlEnableBackup"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlEnableBackup = (bool?) content.GetValueForProperty("ActivityControlEnableBackup",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlEnableBackup, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ActivityControlEnableRestore"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlEnableRestore = (bool?) content.GetValueForProperty("ActivityControlEnableRestore",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControlEnableRestore, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SecurityClientOwners"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SecurityClientOwners = (string) content.GetValueForProperty("SecurityClientOwners",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SecurityClientOwners, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityAssociatedUserGroups"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SecurityAssociatedUserGroups = (System.Collections.Generic.List<Commvault.Powershell.Models.IIdName>) content.GetValueForProperty("SecurityAssociatedUserGroups",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SecurityAssociatedUserGroups, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IIdName>(__y, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom));
            }
            if (content.Contains("SettingTimeZone"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingTimeZone = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("SettingTimeZone",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingTimeZone, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("SettingMetricsMonitoringPolicy"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingMetricsMonitoringPolicy = (Commvault.Powershell.Models.IHypervisorMonitoringPolicy) content.GetValueForProperty("SettingMetricsMonitoringPolicy",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingMetricsMonitoringPolicy, Commvault.Powershell.Models.HypervisorMonitoringPolicyTypeConverter.ConvertFrom);
            }
            if (content.Contains("SettingGuestCredentials"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingGuestCredentials = (Commvault.Powershell.Models.IUserNamePassword) content.GetValueForProperty("SettingGuestCredentials",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingGuestCredentials, Commvault.Powershell.Models.UserNamePasswordTypeConverter.ConvertFrom);
            }
            if (content.Contains("SettingApplicationCredentials"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingApplicationCredentials = (Commvault.Powershell.Models.IUserNamePassword) content.GetValueForProperty("SettingApplicationCredentials",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingApplicationCredentials, Commvault.Powershell.Models.UserNamePasswordTypeConverter.ConvertFrom);
            }
            if (content.Contains("SettingMountAccessNode"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingMountAccessNode = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("SettingMountAccessNode",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingMountAccessNode, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("SettingCustomAttributes"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingCustomAttributes = (System.Collections.Generic.List<Commvault.Powershell.Models.IHypervisorCustomAttribute>) content.GetValueForProperty("SettingCustomAttributes",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SettingCustomAttributes, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IHypervisorCustomAttribute>(__y, Commvault.Powershell.Models.HypervisorCustomAttributeTypeConverter.ConvertFrom));
            }
            if (content.Contains("RegionInfoId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoId = (long?) content.GetValueForProperty("RegionInfoId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("RegionInfoName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoName = (string) content.GetValueForProperty("RegionInfoName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoName, global::System.Convert.ToString);
            }
            if (content.Contains("RegionInfoDisplayName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoDisplayName = (string) content.GetValueForProperty("RegionInfoDisplayName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("RegionInfoLatitude"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoLatitude = (string) content.GetValueForProperty("RegionInfoLatitude",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoLatitude, global::System.Convert.ToString);
            }
            if (content.Contains("RegionInfoLongitude"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoLongitude = (string) content.GetValueForProperty("RegionInfoLongitude",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RegionInfoLongitude, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).CredentialsId = (long?) content.GetValueForProperty("CredentialsId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).CredentialsId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CredentialsName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).CredentialsName = (string) content.GetValueForProperty("CredentialsName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).CredentialsName, global::System.Convert.ToString);
            }
            if (content.Contains("BackupActivityControlOptionDelayTime"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionDelayTime = (Commvault.Powershell.Models.IActivityControlTileDelayTime) content.GetValueForProperty("BackupActivityControlOptionDelayTime",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionDelayTime, Commvault.Powershell.Models.ActivityControlTileDelayTimeTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupActivityControlOptionActivityType"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionActivityType = (string) content.GetValueForProperty("BackupActivityControlOptionActivityType",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionActivityType, global::System.Convert.ToString);
            }
            if (content.Contains("BackupActivityControlOptionEnableAfterADelay"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionEnableAfterADelay = (bool?) content.GetValueForProperty("BackupActivityControlOptionEnableAfterADelay",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionEnableAfterADelay, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BackupActivityControlOptionEnableActivityType"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionEnableActivityType = (bool?) content.GetValueForProperty("BackupActivityControlOptionEnableActivityType",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionEnableActivityType, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RestoreActivityControlOptionDelayTime"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionDelayTime = (Commvault.Powershell.Models.IActivityControlTileDelayTime) content.GetValueForProperty("RestoreActivityControlOptionDelayTime",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionDelayTime, Commvault.Powershell.Models.ActivityControlTileDelayTimeTypeConverter.ConvertFrom);
            }
            if (content.Contains("RestoreActivityControlOptionActivityType"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionActivityType = (string) content.GetValueForProperty("RestoreActivityControlOptionActivityType",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionActivityType, global::System.Convert.ToString);
            }
            if (content.Contains("RestoreActivityControlOptionEnableAfterADelay"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionEnableAfterADelay = (bool?) content.GetValueForProperty("RestoreActivityControlOptionEnableAfterADelay",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionEnableAfterADelay, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RestoreActivityControlOptionEnableActivityType"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionEnableActivityType = (bool?) content.GetValueForProperty("RestoreActivityControlOptionEnableActivityType",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionEnableActivityType, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TimeZoneId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).TimeZoneId = (long?) content.GetValueForProperty("TimeZoneId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).TimeZoneId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("TimeZoneName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).TimeZoneName = (string) content.GetValueForProperty("TimeZoneName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).TimeZoneName, global::System.Convert.ToString);
            }
            if (content.Contains("MetricMonitoringPolicyId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MetricMonitoringPolicyId = (long?) content.GetValueForProperty("MetricMonitoringPolicyId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MetricMonitoringPolicyId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("MetricMonitoringPolicyName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MetricMonitoringPolicyName = (string) content.GetValueForProperty("MetricMonitoringPolicyName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MetricMonitoringPolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("MetricMonitoringPolicyIsEnabled"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MetricMonitoringPolicyIsEnabled = (bool?) content.GetValueForProperty("MetricMonitoringPolicyIsEnabled",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MetricMonitoringPolicyIsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("GuestCredentialsName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).GuestCredentialsName = (string) content.GetValueForProperty("GuestCredentialsName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).GuestCredentialsName, global::System.Convert.ToString);
            }
            if (content.Contains("GuestCredentialsPassword"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).GuestCredentialsPassword = (string) content.GetValueForProperty("GuestCredentialsPassword",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).GuestCredentialsPassword, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicationCredentialsName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ApplicationCredentialsName = (string) content.GetValueForProperty("ApplicationCredentialsName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ApplicationCredentialsName, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicationCredentialsPassword"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ApplicationCredentialsPassword = (string) content.GetValueForProperty("ApplicationCredentialsPassword",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ApplicationCredentialsPassword, global::System.Convert.ToString);
            }
            if (content.Contains("MountAccessNodeId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MountAccessNodeId = (long?) content.GetValueForProperty("MountAccessNodeId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MountAccessNodeId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("MountAccessNodeName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MountAccessNodeName = (string) content.GetValueForProperty("MountAccessNodeName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).MountAccessNodeName, global::System.Convert.ToString);
            }
            if (content.Contains("BackupActivityControlOptionsDelayTimeZone"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeZone = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("BackupActivityControlOptionsDelayTimeZone",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeZone, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupActivityControlOptionsDelayTime"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTime = (long?) content.GetValueForProperty("BackupActivityControlOptionsDelayTime",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("BackupActivityControlOptionsDelayTimeValue"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeValue = (string) content.GetValueForProperty("BackupActivityControlOptionsDelayTimeValue",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeValue, global::System.Convert.ToString);
            }
            if (content.Contains("RestoreActivityControlOptionsDelayTimeZone"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeZone = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("RestoreActivityControlOptionsDelayTimeZone",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeZone, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("RestoreActivityControlOptionsDelayTime"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTime = (long?) content.GetValueForProperty("RestoreActivityControlOptionsDelayTime",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("RestoreActivityControlOptionsDelayTimeValue"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeValue = (string) content.GetValueForProperty("RestoreActivityControlOptionsDelayTimeValue",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeValue, global::System.Convert.ToString);
            }
            if (content.Contains("BackupActivityControlOptionsDelayTimeZoneId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeZoneId = (long?) content.GetValueForProperty("BackupActivityControlOptionsDelayTimeZoneId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeZoneId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("BackupActivityControlOptionsDelayTimeZoneName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeZoneName = (string) content.GetValueForProperty("BackupActivityControlOptionsDelayTimeZoneName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).BackupActivityControlOptionsDelayTimeZoneName, global::System.Convert.ToString);
            }
            if (content.Contains("RestoreActivityControlOptionsDelayTimeZoneId"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeZoneId = (long?) content.GetValueForProperty("RestoreActivityControlOptionsDelayTimeZoneId",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeZoneId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("RestoreActivityControlOptionsDelayTimeZoneName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeZoneName = (string) content.GetValueForProperty("RestoreActivityControlOptionsDelayTimeZoneName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).RestoreActivityControlOptionsDelayTimeZoneName, global::System.Convert.ToString);
            }
            if (content.Contains("FbrUnixMediaAgent"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).FbrUnixMediaAgent = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("FbrUnixMediaAgent",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).FbrUnixMediaAgent, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActivityControl"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControl = (Commvault.Powershell.Models.IActivityControlOptions) content.GetValueForProperty("ActivityControl",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).ActivityControl, Commvault.Powershell.Models.ActivityControlOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Security"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).Security = (Commvault.Powershell.Models.IVMHypervisorSecurityProp) content.GetValueForProperty("Security",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).Security, Commvault.Powershell.Models.VMHypervisorSecurityPropTypeConverter.ConvertFrom);
            }
            if (content.Contains("Settings"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).Settings = (Commvault.Powershell.Models.IHypervisorSettings) content.GetValueForProperty("Settings",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).Settings, Commvault.Powershell.Models.HypervisorSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Credentials"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).Credentials = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("Credentials",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).Credentials, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("AccessNodes"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).AccessNodes = (System.Collections.Generic.List<Commvault.Powershell.Models.IAccessNodeModel>) content.GetValueForProperty("AccessNodes",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).AccessNodes, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IAccessNodeModel>(__y, Commvault.Powershell.Models.AccessNodeModelTypeConverter.ConvertFrom));
            }
            if (content.Contains("NewName"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).NewName = (string) content.GetValueForProperty("NewName",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).NewName, global::System.Convert.ToString);
            }
            if (content.Contains("SkipCredentialValidation"))
            {
                ((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SkipCredentialValidation = (bool?) content.GetValueForProperty("SkipCredentialValidation",((Commvault.Powershell.Models.IUpdateHypervisorGroupReqInternal)this).SkipCredentialValidation, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializePSObject(content);
        }
    }
    /// Update a hypervisor group with VMware Cloud Director as the destination vendor
    [System.ComponentModel.TypeConverter(typeof(UpdateHypervisorGroupVCloudTypeConverter))]
    public partial interface IUpdateHypervisorGroupVCloud

    {

    }
}