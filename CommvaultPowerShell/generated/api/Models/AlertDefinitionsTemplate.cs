// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>AlertDefinitionsTemplate</summary>
    public partial class AlertDefinitionsTemplate :
        Commvault.Powershell.Models.IAlertDefinitionsTemplate,
        Commvault.Powershell.Models.IAlertDefinitionsTemplateInternal
    {

        /// <summary>Internal Acessors for Locale</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IAlertDefinitionsTemplateInternal.Locale { get => (this._locale = this._locale ?? new Commvault.Powershell.Models.IdName()); set { {_locale = value;} } }

        /// <summary>Internal Acessors for Workflow</summary>
        Commvault.Powershell.Models.IWorkflowEntity Commvault.Powershell.Models.IAlertDefinitionsTemplateInternal.Workflow { get => (this._workflow = this._workflow ?? new Commvault.Powershell.Models.WorkflowEntity()); set { {_workflow = value;} } }

        /// <summary>Backing field for <see cref="Console" /> property.</summary>
        private string _console;

        /// <summary>the message template for the console notification</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Console { get => this._console; set => this._console = value; }

        /// <summary>Backing field for <see cref="Email" /> property.</summary>
        private string _email;

        /// <summary>
        /// the message template for the email notification. Contains both email subject as well as body
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Email { get => this._email; set => this._email = value; }

        /// <summary>Backing field for <see cref="EventViewer" /> property.</summary>
        private string _eventViewer;

        /// <summary>the message template for the event viewer notification</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string EventViewer { get => this._eventViewer; set => this._eventViewer = value; }

        /// <summary>Backing field for <see cref="Locale" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _locale;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Locale { get => (this._locale = this._locale ?? new Commvault.Powershell.Models.IdName()); set => this._locale = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? LocaleId { get => ((Commvault.Powershell.Models.IIdNameInternal)Locale).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Locale).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string LocaleName { get => ((Commvault.Powershell.Models.IIdNameInternal)Locale).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Locale).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Webhook" /> property.</summary>
        private string _webhook;

        /// <summary>the message template for the webhook notification</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Webhook { get => this._webhook; set => this._webhook = value; }

        /// <summary>Backing field for <see cref="Workflow" /> property.</summary>
        private Commvault.Powershell.Models.IWorkflowEntity _workflow;

        /// <summary>WorkflowEntity</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IWorkflowEntity Workflow { get => (this._workflow = this._workflow ?? new Commvault.Powershell.Models.WorkflowEntity()); set => this._workflow = value; }

        /// <summary>
        /// id of the client on which the workflow runs (zero value means it can run on any workflow engine)
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? WorkflowClientId { get => ((Commvault.Powershell.Models.IWorkflowEntityInternal)Workflow).ClientId; set => ((Commvault.Powershell.Models.IWorkflowEntityInternal)Workflow).ClientId = value ?? default(long); }

        /// <summary>
        /// name of the client on which the workflow runs (empty value means it can run on any workflow engine)
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string WorkflowClientName { get => ((Commvault.Powershell.Models.IWorkflowEntityInternal)Workflow).ClientName; set => ((Commvault.Powershell.Models.IWorkflowEntityInternal)Workflow).ClientName = value ?? null; }

        /// <summary>id of the workflow which runs when the alert is triggered</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? WorkflowId { get => ((Commvault.Powershell.Models.IWorkflowEntityInternal)Workflow).Id; set => ((Commvault.Powershell.Models.IWorkflowEntityInternal)Workflow).Id = value ?? default(long); }

        /// <summary>Backing field for <see cref="WorkflowInputDetails" /> property.</summary>
        private string _workflowInputDetails;

        /// <summary>
        /// the template for the workflow input entries values (empty value means the configured workflow does not need any inputs
        /// value)
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string WorkflowInputDetails { get => this._workflowInputDetails; set => this._workflowInputDetails = value; }

        /// <summary>name of the workflow which runs when the alert is triggered</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string WorkflowName { get => ((Commvault.Powershell.Models.IWorkflowEntityInternal)Workflow).Name; set => ((Commvault.Powershell.Models.IWorkflowEntityInternal)Workflow).Name = value ?? null; }

        /// <summary>Creates an new <see cref="AlertDefinitionsTemplate" /> instance.</summary>
        public AlertDefinitionsTemplate()
        {

        }
    }
    /// AlertDefinitionsTemplate
    public partial interface IAlertDefinitionsTemplate :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>the message template for the console notification</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"the message template for the console notification",
        SerializedName = @"console",
        PossibleTypes = new [] { typeof(string) })]
        string Console { get; set; }
        /// <summary>
        /// the message template for the email notification. Contains both email subject as well as body
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"the message template for the email notification. Contains both email subject as well as body",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string Email { get; set; }
        /// <summary>the message template for the event viewer notification</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"the message template for the event viewer notification",
        SerializedName = @"eventViewer",
        PossibleTypes = new [] { typeof(string) })]
        string EventViewer { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? LocaleId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string LocaleName { get; set; }
        /// <summary>the message template for the webhook notification</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"the message template for the webhook notification",
        SerializedName = @"webhook",
        PossibleTypes = new [] { typeof(string) })]
        string Webhook { get; set; }
        /// <summary>
        /// id of the client on which the workflow runs (zero value means it can run on any workflow engine)
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"id of the client on which the workflow runs (zero value means it can run on any workflow engine)",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(long) })]
        long? WorkflowClientId { get; set; }
        /// <summary>
        /// name of the client on which the workflow runs (empty value means it can run on any workflow engine)
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"name of the client on which the workflow runs (empty value means it can run on any workflow engine)",
        SerializedName = @"clientName",
        PossibleTypes = new [] { typeof(string) })]
        string WorkflowClientName { get; set; }
        /// <summary>id of the workflow which runs when the alert is triggered</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"id of the workflow which runs when the alert is triggered",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? WorkflowId { get; set; }
        /// <summary>
        /// the template for the workflow input entries values (empty value means the configured workflow does not need any inputs
        /// value)
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"the template for the workflow input entries values (empty value means the configured workflow does not need any inputs value)",
        SerializedName = @"workflowInputDetails",
        PossibleTypes = new [] { typeof(string) })]
        string WorkflowInputDetails { get; set; }
        /// <summary>name of the workflow which runs when the alert is triggered</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"name of the workflow which runs when the alert is triggered",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string WorkflowName { get; set; }

    }
    /// AlertDefinitionsTemplate
    internal partial interface IAlertDefinitionsTemplateInternal

    {
        /// <summary>the message template for the console notification</summary>
        string Console { get; set; }
        /// <summary>
        /// the message template for the email notification. Contains both email subject as well as body
        /// </summary>
        string Email { get; set; }
        /// <summary>the message template for the event viewer notification</summary>
        string EventViewer { get; set; }

        Commvault.Powershell.Models.IIdName Locale { get; set; }

        long? LocaleId { get; set; }

        string LocaleName { get; set; }
        /// <summary>the message template for the webhook notification</summary>
        string Webhook { get; set; }
        /// <summary>WorkflowEntity</summary>
        Commvault.Powershell.Models.IWorkflowEntity Workflow { get; set; }
        /// <summary>
        /// id of the client on which the workflow runs (zero value means it can run on any workflow engine)
        /// </summary>
        long? WorkflowClientId { get; set; }
        /// <summary>
        /// name of the client on which the workflow runs (empty value means it can run on any workflow engine)
        /// </summary>
        string WorkflowClientName { get; set; }
        /// <summary>id of the workflow which runs when the alert is triggered</summary>
        long? WorkflowId { get; set; }
        /// <summary>
        /// the template for the workflow input entries values (empty value means the configured workflow does not need any inputs
        /// value)
        /// </summary>
        string WorkflowInputDetails { get; set; }
        /// <summary>name of the workflow which runs when the alert is triggered</summary>
        string WorkflowName { get; set; }

    }
}