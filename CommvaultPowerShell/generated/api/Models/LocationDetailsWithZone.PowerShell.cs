// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    /// <summary>Details of a location with Zone</summary>
    [System.ComponentModel.TypeConverter(typeof(LocationDetailsWithZoneTypeConverter))]
    public partial class LocationDetailsWithZone
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.LocationDetailsWithZone"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Commvault.Powershell.Models.ILocationDetailsWithZone" />.
        /// </returns>
        public static Commvault.Powershell.Models.ILocationDetailsWithZone DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new LocationDetailsWithZone(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.LocationDetailsWithZone"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Commvault.Powershell.Models.ILocationDetailsWithZone" />.
        /// </returns>
        public static Commvault.Powershell.Models.ILocationDetailsWithZone DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new LocationDetailsWithZone(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="LocationDetailsWithZone" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Commvault.Powershell.Models.ILocationDetailsWithZone FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.LocationDetailsWithZone"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal LocationDetailsWithZone(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Zone = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("Zone",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Zone, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Continent = (string) content.GetValueForProperty("Continent",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Continent, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Country = (string) content.GetValueForProperty("Country",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Country, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).State = (string) content.GetValueForProperty("State",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).State, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).City = (string) content.GetValueForProperty("City",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).City, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Latitude = (double) content.GetValueForProperty("Latitude",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Latitude, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Longitude = (double) content.GetValueForProperty("Longitude",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Longitude, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).ZoneId = (long?) content.GetValueForProperty("ZoneId",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).ZoneId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).ZoneName = (string) content.GetValueForProperty("ZoneName",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).ZoneName, global::System.Convert.ToString);
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.LocationDetailsWithZone"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal LocationDetailsWithZone(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Zone = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("Zone",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Zone, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Continent = (string) content.GetValueForProperty("Continent",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Continent, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Country = (string) content.GetValueForProperty("Country",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Country, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).State = (string) content.GetValueForProperty("State",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).State, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).City = (string) content.GetValueForProperty("City",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).City, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Latitude = (double) content.GetValueForProperty("Latitude",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Latitude, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Longitude = (double) content.GetValueForProperty("Longitude",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).Longitude, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).ZoneId = (long?) content.GetValueForProperty("ZoneId",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).ZoneId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).ZoneName = (string) content.GetValueForProperty("ZoneName",((Commvault.Powershell.Models.ILocationDetailsWithZoneInternal)this).ZoneName, global::System.Convert.ToString);
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Details of a location with Zone
    [System.ComponentModel.TypeConverter(typeof(LocationDetailsWithZoneTypeConverter))]
    public partial interface ILocationDetailsWithZone

    {

    }
}