// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class General
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Commvault.Powershell.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Commvault.Powershell.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Commvault.Powershell.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Commvault.Powershell.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Commvault.Powershell.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Commvault.Powershell.Runtime.Json.JsonNode"/> into an instance of Commvault.Powershell.Models.IGeneral.
        /// </summary>
        /// <param name="node">a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of Commvault.Powershell.Models.IGeneral.</returns>
        public static Commvault.Powershell.Models.IGeneral FromJson(Commvault.Powershell.Runtime.Json.JsonNode node)
        {
            return node is Commvault.Powershell.Runtime.Json.JsonObject json ? new General(json) : null;
        }

        /// <summary>
        /// Deserializes a Commvault.Powershell.Runtime.Json.JsonObject into a new instance of <see cref="General" />.
        /// </summary>
        /// <param name="json">A Commvault.Powershell.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal General(Commvault.Powershell.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_twoFactorAuth = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("twoFactorAuth"), out var __jsonTwoFactorAuth) ? Commvault.Powershell.Models.TwoFactorAuth.FromJson(__jsonTwoFactorAuth) : TwoFactorAuth;}
            {_newAlias = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonString>("newAlias"), out var __jsonNewAlias) ? (string)__jsonNewAlias : (string)NewAlias;}
            {_emailSuffix = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonString>("emailSuffix"), out var __jsonEmailSuffix) ? (string)__jsonEmailSuffix : (string)EmailSuffix;}
            {_authcodeForInstallation = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonBoolean>("authcodeForInstallation"), out var __jsonAuthcodeForInstallation) ? (bool?)__jsonAuthcodeForInstallation : AuthcodeForInstallation;}
            {_upnInsteadOfEmail = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonBoolean>("upnInsteadOfEmail"), out var __jsonUpnInsteadOfEmail) ? (bool?)__jsonUpnInsteadOfEmail : UpnInsteadOfEmail;}
            {_resellerMode = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonBoolean>("resellerMode"), out var __jsonResellerMode) ? (bool?)__jsonResellerMode : ResellerMode;}
            {_enableDataEncryption = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonBoolean>("enableDataEncryption"), out var __jsonEnableDataEncryption) ? (bool?)__jsonEnableDataEncryption : EnableDataEncryption;}
            {_autoDiscoverApp = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonBoolean>("autoDiscoverApp"), out var __jsonAutoDiscoverApp) ? (bool?)__jsonAutoDiscoverApp : AutoDiscoverApp;}
            {_infrastructureType = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonString>("infrastructureType"), out var __jsonInfrastructureType) ? (string)__jsonInfrastructureType : (string)InfrastructureType;}
            {_supportedSolutions = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonArray>("supportedSolutions"), out var __jsonSupportedSolutions) ? If( __jsonSupportedSolutions as Commvault.Powershell.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Commvault.Powershell.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : SupportedSolutions;}
            {_assignLaptopOwners = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonString>("assignLaptopOwners"), out var __jsonAssignLaptopOwners) ? (string)__jsonAssignLaptopOwners : (string)AssignLaptopOwners;}
            {_serviceCommcells = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonArray>("serviceCommcells"), out var __jsonServiceCommcells) ? If( __jsonServiceCommcells as Commvault.Powershell.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Commvault.Powershell.Models.IIdName[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Commvault.Powershell.Models.IIdName) (Commvault.Powershell.Models.IdName.FromJson(__p) )) ))() : null : ServiceCommcells;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="General" /> into a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Commvault.Powershell.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Commvault.Powershell.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="General" /> as a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" />.
        /// </returns>
        public Commvault.Powershell.Runtime.Json.JsonNode ToJson(Commvault.Powershell.Runtime.Json.JsonObject container, Commvault.Powershell.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Commvault.Powershell.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._twoFactorAuth ? (Commvault.Powershell.Runtime.Json.JsonNode) this._twoFactorAuth.ToJson(null,serializationMode) : null, "twoFactorAuth" ,container.Add );
            AddIf( null != (((object)this._newAlias)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(this._newAlias.ToString()) : null, "newAlias" ,container.Add );
            AddIf( null != (((object)this._emailSuffix)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(this._emailSuffix.ToString()) : null, "emailSuffix" ,container.Add );
            AddIf( null != this._authcodeForInstallation ? (Commvault.Powershell.Runtime.Json.JsonNode)new Commvault.Powershell.Runtime.Json.JsonBoolean((bool)this._authcodeForInstallation) : null, "authcodeForInstallation" ,container.Add );
            AddIf( null != this._upnInsteadOfEmail ? (Commvault.Powershell.Runtime.Json.JsonNode)new Commvault.Powershell.Runtime.Json.JsonBoolean((bool)this._upnInsteadOfEmail) : null, "upnInsteadOfEmail" ,container.Add );
            AddIf( null != this._resellerMode ? (Commvault.Powershell.Runtime.Json.JsonNode)new Commvault.Powershell.Runtime.Json.JsonBoolean((bool)this._resellerMode) : null, "resellerMode" ,container.Add );
            AddIf( null != this._enableDataEncryption ? (Commvault.Powershell.Runtime.Json.JsonNode)new Commvault.Powershell.Runtime.Json.JsonBoolean((bool)this._enableDataEncryption) : null, "enableDataEncryption" ,container.Add );
            AddIf( null != this._autoDiscoverApp ? (Commvault.Powershell.Runtime.Json.JsonNode)new Commvault.Powershell.Runtime.Json.JsonBoolean((bool)this._autoDiscoverApp) : null, "autoDiscoverApp" ,container.Add );
            AddIf( null != (((object)this._infrastructureType)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(this._infrastructureType.ToString()) : null, "infrastructureType" ,container.Add );
            if (null != this._supportedSolutions)
            {
                var __w = new Commvault.Powershell.Runtime.Json.XNodeArray();
                foreach( var __x in this._supportedSolutions )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("supportedSolutions",__w);
            }
            AddIf( null != (((object)this._assignLaptopOwners)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(this._assignLaptopOwners.ToString()) : null, "assignLaptopOwners" ,container.Add );
            if (null != this._serviceCommcells)
            {
                var __r = new Commvault.Powershell.Runtime.Json.XNodeArray();
                foreach( var __s in this._serviceCommcells )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("serviceCommcells",__r);
            }
            AfterToJson(ref container);
            return container;
        }
    }
}