// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class LaptopsWebConsole :
        Commvault.Powershell.Models.ILaptopsWebConsole,
        Commvault.Powershell.Models.ILaptopsWebConsoleInternal
    {

        /// <summary>Internal Acessors for LastBackupJobInfo</summary>
        Commvault.Powershell.Models.ILastBackupJobInfo Commvault.Powershell.Models.ILaptopsWebConsoleInternal.LastBackupJobInfo { get => (this._lastBackupJobInfo = this._lastBackupJobInfo ?? new Commvault.Powershell.Models.LastBackupJobInfo()); set { {_lastBackupJobInfo = value;} } }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private long? _id;

        /// <summary>id of the laptop client</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="LastBackupJobInfo" /> property.</summary>
        private Commvault.Powershell.Models.ILastBackupJobInfo _lastBackupJobInfo;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.ILastBackupJobInfo LastBackupJobInfo { get => (this._lastBackupJobInfo = this._lastBackupJobInfo ?? new Commvault.Powershell.Models.LastBackupJobInfo()); set => this._lastBackupJobInfo = value; }

        /// <summary>Gives the reason for the last backup job failing, if the last backup job fails.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string LastBackupJobInfoFailureReason { get => ((Commvault.Powershell.Models.ILastBackupJobInfoInternal)LastBackupJobInfo).FailureReason; set => ((Commvault.Powershell.Models.ILastBackupJobInfoInternal)LastBackupJobInfo).FailureReason = value ?? null; }

        /// <summary>Returns the job id of the last backup job performed.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? LastBackupJobInfoJobId { get => ((Commvault.Powershell.Models.ILastBackupJobInfoInternal)LastBackupJobInfo).JobId; set => ((Commvault.Powershell.Models.ILastBackupJobInfoInternal)LastBackupJobInfo).JobId = value ?? default(long); }

        /// <summary>Status of the last backup job performed.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string LastBackupJobInfoStatus { get => ((Commvault.Powershell.Models.ILastBackupJobInfoInternal)LastBackupJobInfo).Status; set => ((Commvault.Powershell.Models.ILastBackupJobInfoInternal)LastBackupJobInfo).Status = value ?? null; }

        /// <summary>
        /// Shows the time when the last back up job was carried out. The time is provided in unix time format.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? LastBackupJobInfoTime { get => ((Commvault.Powershell.Models.ILastBackupJobInfoInternal)LastBackupJobInfo).Time; set => ((Commvault.Powershell.Models.ILastBackupJobInfoInternal)LastBackupJobInfo).Time = value ?? default(long); }

        /// <summary>Backing field for <see cref="LastBackupTime" /> property.</summary>
        private long? _lastBackupTime;

        /// <summary>This specifies the last backup time (in unix timestamp)</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? LastBackupTime { get => this._lastBackupTime; set => this._lastBackupTime = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>name of the laptop client</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="NextBackupTime" /> property.</summary>
        private long? _nextBackupTime;

        /// <summary>This species the timestamp (in unix timestamp) of the next scheduled backup</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? NextBackupTime { get => this._nextBackupTime; set => this._nextBackupTime = value; }

        /// <summary>Backing field for <see cref="SlaReason" /> property.</summary>
        private string _slaReason;

        /// <summary>reason for the current sla status</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string SlaReason { get => this._slaReason; set => this._slaReason = value; }

        /// <summary>Backing field for <see cref="SlaStatus" /> property.</summary>
        private string _slaStatus;

        /// <summary>Provides the SLA status.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string SlaStatus { get => this._slaStatus; set => this._slaStatus = value; }

        /// <summary>Backing field for <see cref="TotalBackupSize" /> property.</summary>
        private long? _totalBackupSize;

        /// <summary>This specifies the total backup size (in bytes)</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? TotalBackupSize { get => this._totalBackupSize; set => this._totalBackupSize = value; }

        /// <summary>Creates an new <see cref="LaptopsWebConsole" /> instance.</summary>
        public LaptopsWebConsole()
        {

        }
    }
    public partial interface ILaptopsWebConsole :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>id of the laptop client</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"id of the laptop client",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? Id { get; set; }
        /// <summary>Gives the reason for the last backup job failing, if the last backup job fails.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gives the reason for the last backup job failing, if the last backup job fails.",
        SerializedName = @"failureReason",
        PossibleTypes = new [] { typeof(string) })]
        string LastBackupJobInfoFailureReason { get; set; }
        /// <summary>Returns the job id of the last backup job performed.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Returns the job id of the last backup job performed.",
        SerializedName = @"jobId",
        PossibleTypes = new [] { typeof(long) })]
        long? LastBackupJobInfoJobId { get; set; }
        /// <summary>Status of the last backup job performed.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Status of the last backup job performed.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string LastBackupJobInfoStatus { get; set; }
        /// <summary>
        /// Shows the time when the last back up job was carried out. The time is provided in unix time format.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Shows the time when the last back up job was carried out. The time is provided in unix time format.",
        SerializedName = @"time",
        PossibleTypes = new [] { typeof(long) })]
        long? LastBackupJobInfoTime { get; set; }
        /// <summary>This specifies the last backup time (in unix timestamp)</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This specifies the last backup time (in unix timestamp)",
        SerializedName = @"lastBackupTime",
        PossibleTypes = new [] { typeof(long) })]
        long? LastBackupTime { get; set; }
        /// <summary>name of the laptop client</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"name of the laptop client",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>This species the timestamp (in unix timestamp) of the next scheduled backup</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This species the timestamp (in unix timestamp) of the next scheduled backup",
        SerializedName = @"nextBackupTime",
        PossibleTypes = new [] { typeof(long) })]
        long? NextBackupTime { get; set; }
        /// <summary>reason for the current sla status</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"reason for the current sla status",
        SerializedName = @"slaReason",
        PossibleTypes = new [] { typeof(string) })]
        string SlaReason { get; set; }
        /// <summary>Provides the SLA status.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Provides the SLA status.",
        SerializedName = @"slaStatus",
        PossibleTypes = new [] { typeof(string) })]
        string SlaStatus { get; set; }
        /// <summary>This specifies the total backup size (in bytes)</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This specifies the total backup size (in bytes)",
        SerializedName = @"totalBackupSize",
        PossibleTypes = new [] { typeof(long) })]
        long? TotalBackupSize { get; set; }

    }
    internal partial interface ILaptopsWebConsoleInternal

    {
        /// <summary>id of the laptop client</summary>
        long? Id { get; set; }

        Commvault.Powershell.Models.ILastBackupJobInfo LastBackupJobInfo { get; set; }
        /// <summary>Gives the reason for the last backup job failing, if the last backup job fails.</summary>
        string LastBackupJobInfoFailureReason { get; set; }
        /// <summary>Returns the job id of the last backup job performed.</summary>
        long? LastBackupJobInfoJobId { get; set; }
        /// <summary>Status of the last backup job performed.</summary>
        string LastBackupJobInfoStatus { get; set; }
        /// <summary>
        /// Shows the time when the last back up job was carried out. The time is provided in unix time format.
        /// </summary>
        long? LastBackupJobInfoTime { get; set; }
        /// <summary>This specifies the last backup time (in unix timestamp)</summary>
        long? LastBackupTime { get; set; }
        /// <summary>name of the laptop client</summary>
        string Name { get; set; }
        /// <summary>This species the timestamp (in unix timestamp) of the next scheduled backup</summary>
        long? NextBackupTime { get; set; }
        /// <summary>reason for the current sla status</summary>
        string SlaReason { get; set; }
        /// <summary>Provides the SLA status.</summary>
        string SlaStatus { get; set; }
        /// <summary>This specifies the total backup size (in bytes)</summary>
        long? TotalBackupSize { get; set; }

    }
}