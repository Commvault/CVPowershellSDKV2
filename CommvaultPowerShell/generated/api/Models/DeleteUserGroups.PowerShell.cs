// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(DeleteUserGroupsTypeConverter))]
    public partial class DeleteUserGroups
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.DeleteUserGroups"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal DeleteUserGroups(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("NewUser"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUser = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("NewUser",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUser, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("NewUserGroup"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserGroup = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("NewUserGroup",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserGroup, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("UserGroup"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).UserGroup = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("UserGroup",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).UserGroup, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkipOwnerTransfer"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).SkipOwnerTransfer = (bool?) content.GetValueForProperty("SkipOwnerTransfer",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).SkipOwnerTransfer, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NewUserId"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserId = (long?) content.GetValueForProperty("NewUserId",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NewUserName"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserName = (string) content.GetValueForProperty("NewUserName",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserName, global::System.Convert.ToString);
            }
            if (content.Contains("NewUserGroupId"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserGroupId = (long?) content.GetValueForProperty("NewUserGroupId",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserGroupId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NewUserGroupName"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserGroupName = (string) content.GetValueForProperty("NewUserGroupName",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("UserGroupId"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).UserGroupId = (long?) content.GetValueForProperty("UserGroupId",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).UserGroupId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("UserGroupName"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).UserGroupName = (string) content.GetValueForProperty("UserGroupName",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).UserGroupName, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.DeleteUserGroups"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal DeleteUserGroups(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("NewUser"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUser = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("NewUser",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUser, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("NewUserGroup"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserGroup = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("NewUserGroup",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserGroup, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("UserGroup"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).UserGroup = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("UserGroup",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).UserGroup, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkipOwnerTransfer"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).SkipOwnerTransfer = (bool?) content.GetValueForProperty("SkipOwnerTransfer",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).SkipOwnerTransfer, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NewUserId"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserId = (long?) content.GetValueForProperty("NewUserId",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NewUserName"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserName = (string) content.GetValueForProperty("NewUserName",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserName, global::System.Convert.ToString);
            }
            if (content.Contains("NewUserGroupId"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserGroupId = (long?) content.GetValueForProperty("NewUserGroupId",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserGroupId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NewUserGroupName"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserGroupName = (string) content.GetValueForProperty("NewUserGroupName",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).NewUserGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("UserGroupId"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).UserGroupId = (long?) content.GetValueForProperty("UserGroupId",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).UserGroupId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("UserGroupName"))
            {
                ((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).UserGroupName = (string) content.GetValueForProperty("UserGroupName",((Commvault.Powershell.Models.IDeleteUserGroupsInternal)this).UserGroupName, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.DeleteUserGroups"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.IDeleteUserGroups" />.</returns>
        public static Commvault.Powershell.Models.IDeleteUserGroups DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new DeleteUserGroups(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.DeleteUserGroups"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.IDeleteUserGroups" />.</returns>
        public static Commvault.Powershell.Models.IDeleteUserGroups DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new DeleteUserGroups(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="DeleteUserGroups" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="DeleteUserGroups" /> model class.</returns>
        public static Commvault.Powershell.Models.IDeleteUserGroups FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    [System.ComponentModel.TypeConverter(typeof(DeleteUserGroupsTypeConverter))]
    public partial interface IDeleteUserGroups

    {

    }
}