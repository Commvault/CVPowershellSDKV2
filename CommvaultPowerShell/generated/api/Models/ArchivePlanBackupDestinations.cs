// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class ArchivePlanBackupDestinations :
        Commvault.Powershell.Models.IArchivePlanBackupDestinations,
        Commvault.Powershell.Models.IArchivePlanBackupDestinationsInternal
    {

        /// <summary>Backing field for <see cref="Backupdestinations" /> property.</summary>
        private System.Collections.Generic.List<Commvault.Powershell.Models.IArchivePlanBackupDestination> _backupdestinations;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Commvault.Powershell.Models.IArchivePlanBackupDestination> Backupdestinations { get => this._backupdestinations; set => this._backupdestinations = value; }

        /// <summary>Backing field for <see cref="RegionsConfigured" /> property.</summary>
        private bool? _regionsConfigured;

        /// <summary>Specifies if the plan has region-based storage</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? RegionsConfigured { get => this._regionsConfigured; set => this._regionsConfigured = value; }

        /// <summary>Creates an new <see cref="ArchivePlanBackupDestinations" /> instance.</summary>
        public ArchivePlanBackupDestinations()
        {

        }
    }
    public partial interface IArchivePlanBackupDestinations :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"backupdestinations",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IArchivePlanBackupDestination) })]
        System.Collections.Generic.List<Commvault.Powershell.Models.IArchivePlanBackupDestination> Backupdestinations { get; set; }
        /// <summary>Specifies if the plan has region-based storage</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies if the plan has region-based storage",
        SerializedName = @"regionsConfigured",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RegionsConfigured { get; set; }

    }
    internal partial interface IArchivePlanBackupDestinationsInternal

    {
        System.Collections.Generic.List<Commvault.Powershell.Models.IArchivePlanBackupDestination> Backupdestinations { get; set; }
        /// <summary>Specifies if the plan has region-based storage</summary>
        bool? RegionsConfigured { get; set; }

    }
}