// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class UpdateUserGroup
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Commvault.Powershell.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Commvault.Powershell.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Commvault.Powershell.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Commvault.Powershell.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Commvault.Powershell.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Commvault.Powershell.Runtime.Json.JsonNode"/> into an instance of Commvault.Powershell.Models.IUpdateUserGroup.
        /// </summary>
        /// <param name="node">a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of Commvault.Powershell.Models.IUpdateUserGroup.</returns>
        public static Commvault.Powershell.Models.IUpdateUserGroup FromJson(Commvault.Powershell.Runtime.Json.JsonNode node)
        {
            return node is Commvault.Powershell.Runtime.Json.JsonObject json ? new UpdateUserGroup(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="UpdateUserGroup" /> into a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Commvault.Powershell.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Commvault.Powershell.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="UpdateUserGroup" /> as a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" />.
        /// </returns>
        public Commvault.Powershell.Runtime.Json.JsonNode ToJson(Commvault.Powershell.Runtime.Json.JsonObject container, Commvault.Powershell.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Commvault.Powershell.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._laptopPlan ? (Commvault.Powershell.Runtime.Json.JsonNode) this._laptopPlan.ToJson(null,serializationMode) : null, "laptopPlan" ,container.Add );
            AddIf( null != (((object)this._newName)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(this._newName.ToString()) : null, "newName" ,container.Add );
            AddIf( null != (((object)this._newDescription)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(this._newDescription.ToString()) : null, "newDescription" ,container.Add );
            AddIf( null != (((object)this._planOperationType)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(this._planOperationType.ToString()) : null, "planOperationType" ,container.Add );
            AddIf( null != this._enabled ? (Commvault.Powershell.Runtime.Json.JsonNode)new Commvault.Powershell.Runtime.Json.JsonBoolean((bool)this._enabled) : null, "enabled" ,container.Add );
            AddIf( null != this._enforceFsQuota ? (Commvault.Powershell.Runtime.Json.JsonNode)new Commvault.Powershell.Runtime.Json.JsonBoolean((bool)this._enforceFsQuota) : null, "enforceFSQuota" ,container.Add );
            AddIf( null != this._quotaLimitInGb ? (Commvault.Powershell.Runtime.Json.JsonNode)new Commvault.Powershell.Runtime.Json.JsonNumber((long)this._quotaLimitInGb) : null, "quotaLimitInGB" ,container.Add );
            AddIf( null != (((object)this._enableTwoFactorAuthentication)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(this._enableTwoFactorAuthentication.ToString()) : null, "enableTwoFactorAuthentication" ,container.Add );
            if (null != this._associatedExternalGroups)
            {
                var __w = new Commvault.Powershell.Runtime.Json.XNodeArray();
                foreach( var __x in this._associatedExternalGroups )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("associatedExternalGroups",__w);
            }
            AddIf( null != (((object)this._externalUserGroupsOperationType)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(this._externalUserGroupsOperationType.ToString()) : null, "externalUserGroupsOperationType" ,container.Add );
            AddIf( null != this._laptopAdmins ? (Commvault.Powershell.Runtime.Json.JsonNode)new Commvault.Powershell.Runtime.Json.JsonBoolean((bool)this._laptopAdmins) : null, "laptopAdmins" ,container.Add );
            if (null != this._associatedLocalGroups)
            {
                var __r = new Commvault.Powershell.Runtime.Json.XNodeArray();
                foreach( var __s in this._associatedLocalGroups )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("associatedLocalGroups",__r);
            }
            AddIf( null != (((object)this._localUserGroupsOperationType)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(this._localUserGroupsOperationType.ToString()) : null, "localUserGroupsOperationType" ,container.Add );
            if (null != this._users)
            {
                var __m = new Commvault.Powershell.Runtime.Json.XNodeArray();
                foreach( var __n in this._users )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("users",__m);
            }
            AddIf( null != (((object)this._userOperationType)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(this._userOperationType.ToString()) : null, "userOperationType" ,container.Add );
            AddIf( null != this._allowMultipleCompanyMembers ? (Commvault.Powershell.Runtime.Json.JsonNode)new Commvault.Powershell.Runtime.Json.JsonBoolean((bool)this._allowMultipleCompanyMembers) : null, "allowMultipleCompanyMembers" ,container.Add );
            AddIf( null != (((object)this._consoleTypeOperationType)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(this._consoleTypeOperationType.ToString()) : null, "consoleTypeOperationType" ,container.Add );
            if (null != this._consoleType)
            {
                var __h = new Commvault.Powershell.Runtime.Json.XNodeArray();
                foreach( var __i in this._consoleType )
                {
                    AddIf(null != (((object)__i)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(__i.ToString()) : null ,__h.Add);
                }
                container.Add("consoleType",__h);
            }
            AfterToJson(ref container);
            return container;
        }

        /// <summary>
        /// Deserializes a Commvault.Powershell.Runtime.Json.JsonObject into a new instance of <see cref="UpdateUserGroup" />.
        /// </summary>
        /// <param name="json">A Commvault.Powershell.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal UpdateUserGroup(Commvault.Powershell.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_laptopPlan = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("laptopPlan"), out var __jsonLaptopPlan) ? Commvault.Powershell.Models.IdName.FromJson(__jsonLaptopPlan) : LaptopPlan;}
            {_newName = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonString>("newName"), out var __jsonNewName) ? (string)__jsonNewName : (string)NewName;}
            {_newDescription = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonString>("newDescription"), out var __jsonNewDescription) ? (string)__jsonNewDescription : (string)NewDescription;}
            {_planOperationType = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonString>("planOperationType"), out var __jsonPlanOperationType) ? (string)__jsonPlanOperationType : (string)PlanOperationType;}
            {_enabled = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonBoolean>("enabled"), out var __jsonEnabled) ? (bool?)__jsonEnabled : Enabled;}
            {_enforceFsQuota = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonBoolean>("enforceFSQuota"), out var __jsonEnforceFsQuota) ? (bool?)__jsonEnforceFsQuota : EnforceFsQuota;}
            {_quotaLimitInGb = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonNumber>("quotaLimitInGB"), out var __jsonQuotaLimitInGb) ? (long?)__jsonQuotaLimitInGb : QuotaLimitInGb;}
            {_enableTwoFactorAuthentication = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonString>("enableTwoFactorAuthentication"), out var __jsonEnableTwoFactorAuthentication) ? (string)__jsonEnableTwoFactorAuthentication : (string)EnableTwoFactorAuthentication;}
            {_associatedExternalGroups = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonArray>("associatedExternalGroups"), out var __jsonAssociatedExternalGroups) ? If( __jsonAssociatedExternalGroups as Commvault.Powershell.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Commvault.Powershell.Models.IIdName[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Commvault.Powershell.Models.IIdName) (Commvault.Powershell.Models.IdName.FromJson(__u) )) ))() : null : AssociatedExternalGroups;}
            {_externalUserGroupsOperationType = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonString>("externalUserGroupsOperationType"), out var __jsonExternalUserGroupsOperationType) ? (string)__jsonExternalUserGroupsOperationType : (string)ExternalUserGroupsOperationType;}
            {_laptopAdmins = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonBoolean>("laptopAdmins"), out var __jsonLaptopAdmins) ? (bool?)__jsonLaptopAdmins : LaptopAdmins;}
            {_associatedLocalGroups = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonArray>("associatedLocalGroups"), out var __jsonAssociatedLocalGroups) ? If( __jsonAssociatedLocalGroups as Commvault.Powershell.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Commvault.Powershell.Models.IIdName[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Commvault.Powershell.Models.IIdName) (Commvault.Powershell.Models.IdName.FromJson(__p) )) ))() : null : AssociatedLocalGroups;}
            {_localUserGroupsOperationType = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonString>("localUserGroupsOperationType"), out var __jsonLocalUserGroupsOperationType) ? (string)__jsonLocalUserGroupsOperationType : (string)LocalUserGroupsOperationType;}
            {_users = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonArray>("users"), out var __jsonUsers) ? If( __jsonUsers as Commvault.Powershell.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Commvault.Powershell.Models.IIdName[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Commvault.Powershell.Models.IIdName) (Commvault.Powershell.Models.IdName.FromJson(__k) )) ))() : null : Users;}
            {_userOperationType = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonString>("userOperationType"), out var __jsonUserOperationType) ? (string)__jsonUserOperationType : (string)UserOperationType;}
            {_allowMultipleCompanyMembers = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonBoolean>("allowMultipleCompanyMembers"), out var __jsonAllowMultipleCompanyMembers) ? (bool?)__jsonAllowMultipleCompanyMembers : AllowMultipleCompanyMembers;}
            {_consoleTypeOperationType = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonString>("consoleTypeOperationType"), out var __jsonConsoleTypeOperationType) ? (string)__jsonConsoleTypeOperationType : (string)ConsoleTypeOperationType;}
            {_consoleType = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonArray>("consoleType"), out var __jsonConsoleType) ? If( __jsonConsoleType as Commvault.Powershell.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(string) (__f is Commvault.Powershell.Runtime.Json.JsonString __e ? (string)(__e.ToString()) : null)) ))() : null : ConsoleType;}
            AfterFromJson(json);
        }
    }
}