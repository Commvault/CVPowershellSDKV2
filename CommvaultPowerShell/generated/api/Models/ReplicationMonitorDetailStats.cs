// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.2, generator: @autorest/powershell@3.0.494)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Gives statistics information for Replication performance and Journal retention</summary>
    public partial class ReplicationMonitorDetailStats :
        Commvault.Powershell.Models.IReplicationMonitorDetailStats,
        Commvault.Powershell.Models.IReplicationMonitorDetailStatsInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private long? _id;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="IoDelta" /> property.</summary>
        private long? _ioDelta;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? IoDelta { get => this._ioDelta; set => this._ioDelta = value; }

        /// <summary>Backing field for <see cref="IopsDelta" /> property.</summary>
        private long? _iopsDelta;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? IopsDelta { get => this._iopsDelta; set => this._iopsDelta = value; }

        /// <summary>Backing field for <see cref="RepDataDeltaActual" /> property.</summary>
        private long? _repDataDeltaActual;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? RepDataDeltaActual { get => this._repDataDeltaActual; set => this._repDataDeltaActual = value; }

        /// <summary>Backing field for <see cref="RepDataDeltaComp" /> property.</summary>
        private long? _repDataDeltaComp;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? RepDataDeltaComp { get => this._repDataDeltaComp; set => this._repDataDeltaComp = value; }

        /// <summary>Backing field for <see cref="RepSetSize" /> property.</summary>
        private long? _repSetSize;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? RepSetSize { get => this._repSetSize; set => this._repSetSize = value; }

        /// <summary>Backing field for <see cref="Retention" /> property.</summary>
        private long? _retention;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? Retention { get => this._retention; set => this._retention = value; }

        /// <summary>Backing field for <see cref="SizeInRpStore" /> property.</summary>
        private long? _sizeInRpStore;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? SizeInRpStore { get => this._sizeInRpStore; set => this._sizeInRpStore = value; }

        /// <summary>Backing field for <see cref="TimeStamp" /> property.</summary>
        private long? _timeStamp;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? TimeStamp { get => this._timeStamp; set => this._timeStamp = value; }

        /// <summary>Creates an new <see cref="ReplicationMonitorDetailStats" /> instance.</summary>
        public ReplicationMonitorDetailStats()
        {

        }
    }
    /// Gives statistics information for Replication performance and Journal retention
    public partial interface IReplicationMonitorDetailStats :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? Id { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"IODelta",
        PossibleTypes = new [] { typeof(long) })]
        long? IoDelta { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"IOPSDelta",
        PossibleTypes = new [] { typeof(long) })]
        long? IopsDelta { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"repDataDeltaActual",
        PossibleTypes = new [] { typeof(long) })]
        long? RepDataDeltaActual { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"repDataDeltaComp",
        PossibleTypes = new [] { typeof(long) })]
        long? RepDataDeltaComp { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"repSetSize",
        PossibleTypes = new [] { typeof(long) })]
        long? RepSetSize { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"retention",
        PossibleTypes = new [] { typeof(long) })]
        long? Retention { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"sizeInRpStore",
        PossibleTypes = new [] { typeof(long) })]
        long? SizeInRpStore { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"timeStamp",
        PossibleTypes = new [] { typeof(long) })]
        long? TimeStamp { get; set; }

    }
    /// Gives statistics information for Replication performance and Journal retention
    internal partial interface IReplicationMonitorDetailStatsInternal

    {
        long? Id { get; set; }

        long? IoDelta { get; set; }

        long? IopsDelta { get; set; }

        long? RepDataDeltaActual { get; set; }

        long? RepDataDeltaComp { get; set; }

        long? RepSetSize { get; set; }

        long? Retention { get; set; }

        long? SizeInRpStore { get; set; }

        long? TimeStamp { get; set; }

    }
}