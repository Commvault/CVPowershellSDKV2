// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class CreateDiskStorage :
        Commvault.Powershell.Models.ICreateDiskStorage,
        Commvault.Powershell.Models.ICreateDiskStorageInternal
    {

        /// <summary>Backing field for <see cref="DeduplicationDbStorage" /> property.</summary>
        private System.Collections.Generic.List<Commvault.Powershell.Models.IDedupePath> _deduplicationDbStorage;

        /// <summary>
        /// A list of dedupe locations can be provided for the storage pool being created. This provides an efficient way to save/store
        /// data by eliminating duplicate blocks of data during backups.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Commvault.Powershell.Models.IDedupePath> DeduplicationDbStorage { get => this._deduplicationDbStorage; set => this._deduplicationDbStorage = value; }

        /// <summary>Backing field for <see cref="EnableDeduplication" /> property.</summary>
        private bool _enableDeduplication;

        /// <summary>enables or disables deduplication</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool EnableDeduplication { get => this._enableDeduplication; set => this._enableDeduplication = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the Disk Storage to be created.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Storage" /> property.</summary>
        private System.Collections.Generic.List<Commvault.Powershell.Models.IPath> _storage;

        /// <summary>A list of backup locations can be provided for the storage pool being created.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Commvault.Powershell.Models.IPath> Storage { get => this._storage; set => this._storage = value; }

        /// <summary>Creates an new <see cref="CreateDiskStorage" /> instance.</summary>
        public CreateDiskStorage()
        {

        }
    }
    public partial interface ICreateDiskStorage :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A list of dedupe locations can be provided for the storage pool being created. This provides an efficient way to save/store
        /// data by eliminating duplicate blocks of data during backups.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of dedupe locations can be provided for the storage pool being created. This provides an efficient way to save/store data by eliminating duplicate blocks of data during backups.",
        SerializedName = @"deduplicationDBStorage",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IDedupePath) })]
        System.Collections.Generic.List<Commvault.Powershell.Models.IDedupePath> DeduplicationDbStorage { get; set; }
        /// <summary>enables or disables deduplication</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"enables or disables deduplication",
        SerializedName = @"enableDeduplication",
        PossibleTypes = new [] { typeof(bool) })]
        bool EnableDeduplication { get; set; }
        /// <summary>Name of the Disk Storage to be created.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the Disk Storage to be created.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>A list of backup locations can be provided for the storage pool being created.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of backup locations can be provided for the storage pool being created.",
        SerializedName = @"storage",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IPath) })]
        System.Collections.Generic.List<Commvault.Powershell.Models.IPath> Storage { get; set; }

    }
    internal partial interface ICreateDiskStorageInternal

    {
        /// <summary>
        /// A list of dedupe locations can be provided for the storage pool being created. This provides an efficient way to save/store
        /// data by eliminating duplicate blocks of data during backups.
        /// </summary>
        System.Collections.Generic.List<Commvault.Powershell.Models.IDedupePath> DeduplicationDbStorage { get; set; }
        /// <summary>enables or disables deduplication</summary>
        bool EnableDeduplication { get; set; }
        /// <summary>Name of the Disk Storage to be created.</summary>
        string Name { get; set; }
        /// <summary>A list of backup locations can be provided for the storage pool being created.</summary>
        System.Collections.Generic.List<Commvault.Powershell.Models.IPath> Storage { get; set; }

    }
}