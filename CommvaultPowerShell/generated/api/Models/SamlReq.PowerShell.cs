// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    /// <summary>Create SAML request</summary>
    [System.ComponentModel.TypeConverter(typeof(SamlReqTypeConverter))]
    public partial class SamlReq
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.SamlReq"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.ISamlReq" />.</returns>
        public static Commvault.Powershell.Models.ISamlReq DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new SamlReq(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.SamlReq"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.ISamlReq" />.</returns>
        public static Commvault.Powershell.Models.ISamlReq DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new SamlReq(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="SamlReq" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="SamlReq" /> model class.</returns>
        public static Commvault.Powershell.Models.ISamlReq FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.SamlReq"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal SamlReq(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("IdentityProviderMetaData"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaData = (Commvault.Powershell.Models.ISamlidpMetaDataReq) content.GetValueForProperty("IdentityProviderMetaData",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaData, Commvault.Powershell.Models.SamlidpMetaDataReqTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceProviderMetaData"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaData = (Commvault.Powershell.Models.ISamlspMetaData) content.GetValueForProperty("ServiceProviderMetaData",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaData, Commvault.Powershell.Models.SamlspMetaDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Associations"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).Associations = (Commvault.Powershell.Models.ISamlAssociations) content.GetValueForProperty("Associations",((Commvault.Powershell.Models.ISamlReqInternal)this).Associations, Commvault.Powershell.Models.SamlAssociationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Name"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).Name = (string) content.GetValueForProperty("Name",((Commvault.Powershell.Models.ISamlReqInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).Description = (string) content.GetValueForProperty("Description",((Commvault.Powershell.Models.ISamlReqInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProviderMetaDataEntityId"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataEntityId = (string) content.GetValueForProperty("IdentityProviderMetaDataEntityId",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataEntityId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProviderMetaDataRedirectUrl"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataRedirectUrl = (string) content.GetValueForProperty("IdentityProviderMetaDataRedirectUrl",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataRedirectUrl, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProviderMetaDataLogoutUrl"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataLogoutUrl = (string) content.GetValueForProperty("IdentityProviderMetaDataLogoutUrl",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataLogoutUrl, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProviderMetaDataCertificateData"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataCertificateData = (string) content.GetValueForProperty("IdentityProviderMetaDataCertificateData",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataCertificateData, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProviderMetaDataSecondaryCertificateData"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataSecondaryCertificateData = (string) content.GetValueForProperty("IdentityProviderMetaDataSecondaryCertificateData",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataSecondaryCertificateData, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProviderMetaDataSamlProtocolVersion"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataSamlProtocolVersion = (string) content.GetValueForProperty("IdentityProviderMetaDataSamlProtocolVersion",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataSamlProtocolVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceProviderMetaDataServiceProviderEndpoint"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataServiceProviderEndpoint = (string) content.GetValueForProperty("ServiceProviderMetaDataServiceProviderEndpoint",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataServiceProviderEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceProviderMetaDataSpAliases"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataSpAliases = (System.Collections.Generic.List<string>) content.GetValueForProperty("ServiceProviderMetaDataSpAliases",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataSpAliases, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceProviderMetaDataAutoGenerateSpMetaData"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataAutoGenerateSpMetaData = (bool) content.GetValueForProperty("ServiceProviderMetaDataAutoGenerateSpMetaData",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataAutoGenerateSpMetaData, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ServiceProviderMetaDataCertificateData"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataCertificateData = (string) content.GetValueForProperty("ServiceProviderMetaDataCertificateData",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataCertificateData, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceProviderMetaDataJksPrivateKey"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataJksPrivateKey = (string) content.GetValueForProperty("ServiceProviderMetaDataJksPrivateKey",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataJksPrivateKey, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceProviderMetaDataJksFileContents"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataJksFileContents = (System.Collections.Generic.List<string>) content.GetValueForProperty("ServiceProviderMetaDataJksFileContents",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataJksFileContents, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceProviderMetaDataAliasName"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataAliasName = (string) content.GetValueForProperty("ServiceProviderMetaDataAliasName",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataAliasName, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceProviderMetaDataPrivateKeyPassword"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataPrivateKeyPassword = (string) content.GetValueForProperty("ServiceProviderMetaDataPrivateKeyPassword",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataPrivateKeyPassword, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceProviderMetaDataKeyStorePassword"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataKeyStorePassword = (string) content.GetValueForProperty("ServiceProviderMetaDataKeyStorePassword",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataKeyStorePassword, global::System.Convert.ToString);
            }
            if (content.Contains("AssociationEmailSuffixes"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationEmailSuffixes = (System.Collections.Generic.List<string>) content.GetValueForProperty("AssociationEmailSuffixes",((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationEmailSuffixes, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AssociationCompanies"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationCompanies = (System.Collections.Generic.List<Commvault.Powershell.Models.IIdName>) content.GetValueForProperty("AssociationCompanies",((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationCompanies, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IIdName>(__y, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom));
            }
            if (content.Contains("AssociationDomains"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationDomains = (System.Collections.Generic.List<Commvault.Powershell.Models.IIdName>) content.GetValueForProperty("AssociationDomains",((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationDomains, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IIdName>(__y, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom));
            }
            if (content.Contains("AssociationUserGroups"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationUserGroups = (System.Collections.Generic.List<Commvault.Powershell.Models.IIdName>) content.GetValueForProperty("AssociationUserGroups",((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationUserGroups, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IIdName>(__y, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.SamlReq"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal SamlReq(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("IdentityProviderMetaData"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaData = (Commvault.Powershell.Models.ISamlidpMetaDataReq) content.GetValueForProperty("IdentityProviderMetaData",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaData, Commvault.Powershell.Models.SamlidpMetaDataReqTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceProviderMetaData"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaData = (Commvault.Powershell.Models.ISamlspMetaData) content.GetValueForProperty("ServiceProviderMetaData",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaData, Commvault.Powershell.Models.SamlspMetaDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Associations"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).Associations = (Commvault.Powershell.Models.ISamlAssociations) content.GetValueForProperty("Associations",((Commvault.Powershell.Models.ISamlReqInternal)this).Associations, Commvault.Powershell.Models.SamlAssociationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Name"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).Name = (string) content.GetValueForProperty("Name",((Commvault.Powershell.Models.ISamlReqInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).Description = (string) content.GetValueForProperty("Description",((Commvault.Powershell.Models.ISamlReqInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProviderMetaDataEntityId"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataEntityId = (string) content.GetValueForProperty("IdentityProviderMetaDataEntityId",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataEntityId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProviderMetaDataRedirectUrl"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataRedirectUrl = (string) content.GetValueForProperty("IdentityProviderMetaDataRedirectUrl",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataRedirectUrl, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProviderMetaDataLogoutUrl"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataLogoutUrl = (string) content.GetValueForProperty("IdentityProviderMetaDataLogoutUrl",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataLogoutUrl, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProviderMetaDataCertificateData"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataCertificateData = (string) content.GetValueForProperty("IdentityProviderMetaDataCertificateData",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataCertificateData, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProviderMetaDataSecondaryCertificateData"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataSecondaryCertificateData = (string) content.GetValueForProperty("IdentityProviderMetaDataSecondaryCertificateData",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataSecondaryCertificateData, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProviderMetaDataSamlProtocolVersion"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataSamlProtocolVersion = (string) content.GetValueForProperty("IdentityProviderMetaDataSamlProtocolVersion",((Commvault.Powershell.Models.ISamlReqInternal)this).IdentityProviderMetaDataSamlProtocolVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceProviderMetaDataServiceProviderEndpoint"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataServiceProviderEndpoint = (string) content.GetValueForProperty("ServiceProviderMetaDataServiceProviderEndpoint",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataServiceProviderEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceProviderMetaDataSpAliases"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataSpAliases = (System.Collections.Generic.List<string>) content.GetValueForProperty("ServiceProviderMetaDataSpAliases",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataSpAliases, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceProviderMetaDataAutoGenerateSpMetaData"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataAutoGenerateSpMetaData = (bool) content.GetValueForProperty("ServiceProviderMetaDataAutoGenerateSpMetaData",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataAutoGenerateSpMetaData, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ServiceProviderMetaDataCertificateData"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataCertificateData = (string) content.GetValueForProperty("ServiceProviderMetaDataCertificateData",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataCertificateData, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceProviderMetaDataJksPrivateKey"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataJksPrivateKey = (string) content.GetValueForProperty("ServiceProviderMetaDataJksPrivateKey",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataJksPrivateKey, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceProviderMetaDataJksFileContents"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataJksFileContents = (System.Collections.Generic.List<string>) content.GetValueForProperty("ServiceProviderMetaDataJksFileContents",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataJksFileContents, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceProviderMetaDataAliasName"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataAliasName = (string) content.GetValueForProperty("ServiceProviderMetaDataAliasName",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataAliasName, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceProviderMetaDataPrivateKeyPassword"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataPrivateKeyPassword = (string) content.GetValueForProperty("ServiceProviderMetaDataPrivateKeyPassword",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataPrivateKeyPassword, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceProviderMetaDataKeyStorePassword"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataKeyStorePassword = (string) content.GetValueForProperty("ServiceProviderMetaDataKeyStorePassword",((Commvault.Powershell.Models.ISamlReqInternal)this).ServiceProviderMetaDataKeyStorePassword, global::System.Convert.ToString);
            }
            if (content.Contains("AssociationEmailSuffixes"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationEmailSuffixes = (System.Collections.Generic.List<string>) content.GetValueForProperty("AssociationEmailSuffixes",((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationEmailSuffixes, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AssociationCompanies"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationCompanies = (System.Collections.Generic.List<Commvault.Powershell.Models.IIdName>) content.GetValueForProperty("AssociationCompanies",((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationCompanies, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IIdName>(__y, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom));
            }
            if (content.Contains("AssociationDomains"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationDomains = (System.Collections.Generic.List<Commvault.Powershell.Models.IIdName>) content.GetValueForProperty("AssociationDomains",((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationDomains, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IIdName>(__y, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom));
            }
            if (content.Contains("AssociationUserGroups"))
            {
                ((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationUserGroups = (System.Collections.Generic.List<Commvault.Powershell.Models.IIdName>) content.GetValueForProperty("AssociationUserGroups",((Commvault.Powershell.Models.ISamlReqInternal)this).AssociationUserGroups, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IIdName>(__y, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Create SAML request
    [System.ComponentModel.TypeConverter(typeof(SamlReqTypeConverter))]
    public partial interface ISamlReq

    {

    }
}