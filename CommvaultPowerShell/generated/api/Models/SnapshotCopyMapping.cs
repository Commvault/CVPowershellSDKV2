// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class SnapshotCopyMapping :
        Commvault.Powershell.Models.ISnapshotCopyMapping,
        Commvault.Powershell.Models.ISnapshotCopyMappingInternal
    {

        /// <summary>Internal Acessors for Source</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.ISnapshotCopyMappingInternal.Source { get => (this._source = this._source ?? new Commvault.Powershell.Models.IdName()); set { {_source = value;} } }

        /// <summary>Internal Acessors for SourceVendor</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.ISnapshotCopyMappingInternal.SourceVendor { get => (this._sourceVendor = this._sourceVendor ?? new Commvault.Powershell.Models.IdName()); set { {_sourceVendor = value;} } }

        /// <summary>Internal Acessors for Target</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.ISnapshotCopyMappingInternal.Target { get => (this._target = this._target ?? new Commvault.Powershell.Models.IdName()); set { {_target = value;} } }

        /// <summary>Internal Acessors for TargetVendor</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.ISnapshotCopyMappingInternal.TargetVendor { get => (this._targetVendor = this._targetVendor ?? new Commvault.Powershell.Models.IdName()); set { {_targetVendor = value;} } }

        /// <summary>Backing field for <see cref="MappingType" /> property.</summary>
        private string _mappingType;

        /// <summary>Mapping type for pure storage replicaton</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string MappingType { get => this._mappingType; set => this._mappingType = value; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _source;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Source { get => (this._source = this._source ?? new Commvault.Powershell.Models.IdName()); set => this._source = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? SourceId { get => ((Commvault.Powershell.Models.IIdNameInternal)Source).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Source).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string SourceName { get => ((Commvault.Powershell.Models.IIdNameInternal)Source).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Source).Name = value ?? null; }

        /// <summary>Backing field for <see cref="SourceVendor" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _sourceVendor;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName SourceVendor { get => (this._sourceVendor = this._sourceVendor ?? new Commvault.Powershell.Models.IdName()); set => this._sourceVendor = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? SourceVendorId { get => ((Commvault.Powershell.Models.IIdNameInternal)SourceVendor).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)SourceVendor).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string SourceVendorName { get => ((Commvault.Powershell.Models.IIdNameInternal)SourceVendor).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)SourceVendor).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Subclients" /> property.</summary>
        private System.Collections.Generic.List<Commvault.Powershell.Models.IIdName> _subclients;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Commvault.Powershell.Models.IIdName> Subclients { get => this._subclients; set => this._subclients = value; }

        /// <summary>Backing field for <see cref="Target" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _target;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Target { get => (this._target = this._target ?? new Commvault.Powershell.Models.IdName()); set => this._target = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? TargetId { get => ((Commvault.Powershell.Models.IIdNameInternal)Target).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Target).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string TargetName { get => ((Commvault.Powershell.Models.IIdNameInternal)Target).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Target).Name = value ?? null; }

        /// <summary>Backing field for <see cref="TargetVendor" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _targetVendor;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName TargetVendor { get => (this._targetVendor = this._targetVendor ?? new Commvault.Powershell.Models.IdName()); set => this._targetVendor = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? TargetVendorId { get => ((Commvault.Powershell.Models.IIdNameInternal)TargetVendor).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)TargetVendor).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string TargetVendorName { get => ((Commvault.Powershell.Models.IIdNameInternal)TargetVendor).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)TargetVendor).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Vendor" /> property.</summary>
        private string _vendor;

        /// <summary>Snapshot vendors available for Snap Copy mappings</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Vendor { get => this._vendor; set => this._vendor = value; }

        /// <summary>Creates an new <see cref="SnapshotCopyMapping" /> instance.</summary>
        public SnapshotCopyMapping()
        {

        }
    }
    public partial interface ISnapshotCopyMapping :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Mapping type for pure storage replicaton</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Mapping type for pure storage replicaton",
        SerializedName = @"mappingType",
        PossibleTypes = new [] { typeof(string) })]
        string MappingType { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? SourceId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SourceName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? SourceVendorId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SourceVendorName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"subclients",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IIdName) })]
        System.Collections.Generic.List<Commvault.Powershell.Models.IIdName> Subclients { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? TargetId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string TargetName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? TargetVendorId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string TargetVendorName { get; set; }
        /// <summary>Snapshot vendors available for Snap Copy mappings</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Snapshot vendors available for Snap Copy mappings",
        SerializedName = @"vendor",
        PossibleTypes = new [] { typeof(string) })]
        string Vendor { get; set; }

    }
    internal partial interface ISnapshotCopyMappingInternal

    {
        /// <summary>Mapping type for pure storage replicaton</summary>
        string MappingType { get; set; }

        Commvault.Powershell.Models.IIdName Source { get; set; }

        long? SourceId { get; set; }

        string SourceName { get; set; }

        Commvault.Powershell.Models.IIdName SourceVendor { get; set; }

        long? SourceVendorId { get; set; }

        string SourceVendorName { get; set; }

        System.Collections.Generic.List<Commvault.Powershell.Models.IIdName> Subclients { get; set; }

        Commvault.Powershell.Models.IIdName Target { get; set; }

        long? TargetId { get; set; }

        string TargetName { get; set; }

        Commvault.Powershell.Models.IIdName TargetVendor { get; set; }

        long? TargetVendorId { get; set; }

        string TargetVendorName { get; set; }
        /// <summary>Snapshot vendors available for Snap Copy mappings</summary>
        string Vendor { get; set; }

    }
}