// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(UpdateLaptopPlanTypeConverter))]
    public partial class UpdateLaptopPlan
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.UpdateLaptopPlan"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.IUpdateLaptopPlan" />.</returns>
        public static Commvault.Powershell.Models.IUpdateLaptopPlan DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new UpdateLaptopPlan(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.UpdateLaptopPlan"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.IUpdateLaptopPlan" />.</returns>
        public static Commvault.Powershell.Models.IUpdateLaptopPlan DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new UpdateLaptopPlan(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="UpdateLaptopPlan" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Commvault.Powershell.Models.IUpdateLaptopPlan FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.UpdateLaptopPlan"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal UpdateLaptopPlan(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).General = (Commvault.Powershell.Models.ILaptopPlanUpdateGeneralInfo) content.GetValueForProperty("General",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).General, Commvault.Powershell.Models.LaptopPlanUpdateGeneralInfoTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).Rpo = (Commvault.Powershell.Models.ILaptopPlanUpdateRpo) content.GetValueForProperty("Rpo",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).Rpo, Commvault.Powershell.Models.LaptopPlanUpdateRpoTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContent = (Commvault.Powershell.Models.ILaptopPlanBackupContent) content.GetValueForProperty("BackupContent",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContent, Commvault.Powershell.Models.LaptopPlanBackupContentTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).Retention = (Commvault.Powershell.Models.ILaptopPlanRetention) content.GetValueForProperty("Retention",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).Retention, Commvault.Powershell.Models.LaptopPlanRetentionTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RegionToConfigure = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("RegionToConfigure",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RegionToConfigure, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictions = (Commvault.Powershell.Models.ILaptopPlanOverrideSettings) content.GetValueForProperty("OverrideRestrictions",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictions, Commvault.Powershell.Models.LaptopPlanOverrideSettingsTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NetworkResources = (Commvault.Powershell.Models.ILaptopPlanNetworkResources) content.GetValueForProperty("NetworkResources",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NetworkResources, Commvault.Powershell.Models.LaptopPlanNetworkResourcesTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OfflineLaptops = (Commvault.Powershell.Models.IAutoRetireDevices) content.GetValueForProperty("OfflineLaptops",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OfflineLaptops, Commvault.Powershell.Models.AutoRetireDevicesTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NewName = (string) content.GetValueForProperty("NewName",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NewName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).AssociatedUsersAndUserGroups = (Commvault.Powershell.Models.IPlanUserOrGroups[]) content.GetValueForProperty("AssociatedUsersAndUserGroups",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).AssociatedUsersAndUserGroups, __y => TypeConverterExtensions.SelectToArray<Commvault.Powershell.Models.IPlanUserOrGroups>(__y, Commvault.Powershell.Models.PlanUserOrGroupsTypeConverter.ConvertFrom));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).Alerts = (Commvault.Powershell.Models.IIdName[]) content.GetValueForProperty("Alerts",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).Alerts, __y => TypeConverterExtensions.SelectToArray<Commvault.Powershell.Models.IIdName>(__y, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).AllowPlanOverride = (bool?) content.GetValueForProperty("AllowPlanOverride",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).AllowPlanOverride, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).AllowedFeatures = (Commvault.Powershell.Models.ILaptopPlanAllowedFeatures) content.GetValueForProperty("AllowedFeatures",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).AllowedFeatures, Commvault.Powershell.Models.LaptopPlanAllowedFeaturesTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).GeneralOptimizedForCloudBackups = (bool?) content.GetValueForProperty("GeneralOptimizedForCloudBackups",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).GeneralOptimizedForCloudBackups, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RpoSla = (Commvault.Powershell.Models.ISlaUpdateOptions) content.GetValueForProperty("RpoSla",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RpoSla, Commvault.Powershell.Models.SlaUpdateOptionsTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RpoBackupFrequency = (long?) content.GetValueForProperty("RpoBackupFrequency",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RpoBackupFrequency, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentWindowsIncludedPaths = (string[]) content.GetValueForProperty("BackupContentWindowsIncludedPaths",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentWindowsIncludedPaths, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentWindowsExcludedPaths = (string[]) content.GetValueForProperty("BackupContentWindowsExcludedPaths",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentWindowsExcludedPaths, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentMacIncludedPaths = (string[]) content.GetValueForProperty("BackupContentMacIncludedPaths",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentMacIncludedPaths, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentMacExcludedPaths = (string[]) content.GetValueForProperty("BackupContentMacExcludedPaths",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentMacExcludedPaths, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentUnixIncludedPaths = (string[]) content.GetValueForProperty("BackupContentUnixIncludedPaths",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentUnixIncludedPaths, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentUnixExcludedPaths = (string[]) content.GetValueForProperty("BackupContentUnixExcludedPaths",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentUnixExcludedPaths, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentFileSystemQuota = (long?) content.GetValueForProperty("BackupContentFileSystemQuota",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentFileSystemQuota, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RetentionFileVersions = (Commvault.Powershell.Models.ILaptopPlanRetentionFileVersions) content.GetValueForProperty("RetentionFileVersions",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RetentionFileVersions, Commvault.Powershell.Models.LaptopPlanRetentionFileVersionsTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RetentionDeletedItemRetention = (long?) content.GetValueForProperty("RetentionDeletedItemRetention",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RetentionDeletedItemRetention, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RegionToConfigureId = (long?) content.GetValueForProperty("RegionToConfigureId",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RegionToConfigureId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RegionToConfigureName = (string) content.GetValueForProperty("RegionToConfigureName",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RegionToConfigureName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionStoragePool = (string) content.GetValueForProperty("OverrideRestrictionStoragePool",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionStoragePool, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionRpo = (string) content.GetValueForProperty("OverrideRestrictionRpo",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionRpo, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionBackupContent = (string) content.GetValueForProperty("OverrideRestrictionBackupContent",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionBackupContent, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionRetention = (string) content.GetValueForProperty("OverrideRestrictionRetention",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionRetention, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NetworkResourceThrottleSend = (long?) content.GetValueForProperty("NetworkResourceThrottleSend",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NetworkResourceThrottleSend, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NetworkResourceThrottleReceive = (long?) content.GetValueForProperty("NetworkResourceThrottleReceive",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NetworkResourceThrottleReceive, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OfflineLaptopRetireAfterDays = (long?) content.GetValueForProperty("OfflineLaptopRetireAfterDays",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OfflineLaptopRetireAfterDays, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OfflineLaptopDeleteAfterDays = (long?) content.GetValueForProperty("OfflineLaptopDeleteAfterDays",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OfflineLaptopDeleteAfterDays, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaUseSystemDefaultSla = (bool?) content.GetValueForProperty("SlaUseSystemDefaultSla",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaUseSystemDefaultSla, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaPeriod = (long?) content.GetValueForProperty("SlaPeriod",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaPeriod, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaExcludeFromSla = (bool?) content.GetValueForProperty("SlaExcludeFromSla",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaExcludeFromSla, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaEnableAfterDelay = (long?) content.GetValueForProperty("SlaEnableAfterDelay",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaEnableAfterDelay, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaExclusionReason = (string) content.GetValueForProperty("SlaExclusionReason",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaExclusionReason, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionDays = (long?) content.GetValueForProperty("FileVersionDays",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionDays, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionVersions = (long?) content.GetValueForProperty("FileVersionVersions",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionVersions, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionDailyVersions = (long?) content.GetValueForProperty("FileVersionDailyVersions",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionDailyVersions, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionWeeklyVersions = (long?) content.GetValueForProperty("FileVersionWeeklyVersions",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionWeeklyVersions, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionMonthlyVersions = (long?) content.GetValueForProperty("FileVersionMonthlyVersions",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionMonthlyVersions, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.UpdateLaptopPlan"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal UpdateLaptopPlan(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).General = (Commvault.Powershell.Models.ILaptopPlanUpdateGeneralInfo) content.GetValueForProperty("General",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).General, Commvault.Powershell.Models.LaptopPlanUpdateGeneralInfoTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).Rpo = (Commvault.Powershell.Models.ILaptopPlanUpdateRpo) content.GetValueForProperty("Rpo",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).Rpo, Commvault.Powershell.Models.LaptopPlanUpdateRpoTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContent = (Commvault.Powershell.Models.ILaptopPlanBackupContent) content.GetValueForProperty("BackupContent",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContent, Commvault.Powershell.Models.LaptopPlanBackupContentTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).Retention = (Commvault.Powershell.Models.ILaptopPlanRetention) content.GetValueForProperty("Retention",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).Retention, Commvault.Powershell.Models.LaptopPlanRetentionTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RegionToConfigure = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("RegionToConfigure",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RegionToConfigure, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictions = (Commvault.Powershell.Models.ILaptopPlanOverrideSettings) content.GetValueForProperty("OverrideRestrictions",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictions, Commvault.Powershell.Models.LaptopPlanOverrideSettingsTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NetworkResources = (Commvault.Powershell.Models.ILaptopPlanNetworkResources) content.GetValueForProperty("NetworkResources",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NetworkResources, Commvault.Powershell.Models.LaptopPlanNetworkResourcesTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OfflineLaptops = (Commvault.Powershell.Models.IAutoRetireDevices) content.GetValueForProperty("OfflineLaptops",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OfflineLaptops, Commvault.Powershell.Models.AutoRetireDevicesTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NewName = (string) content.GetValueForProperty("NewName",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NewName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).AssociatedUsersAndUserGroups = (Commvault.Powershell.Models.IPlanUserOrGroups[]) content.GetValueForProperty("AssociatedUsersAndUserGroups",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).AssociatedUsersAndUserGroups, __y => TypeConverterExtensions.SelectToArray<Commvault.Powershell.Models.IPlanUserOrGroups>(__y, Commvault.Powershell.Models.PlanUserOrGroupsTypeConverter.ConvertFrom));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).Alerts = (Commvault.Powershell.Models.IIdName[]) content.GetValueForProperty("Alerts",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).Alerts, __y => TypeConverterExtensions.SelectToArray<Commvault.Powershell.Models.IIdName>(__y, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).AllowPlanOverride = (bool?) content.GetValueForProperty("AllowPlanOverride",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).AllowPlanOverride, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).AllowedFeatures = (Commvault.Powershell.Models.ILaptopPlanAllowedFeatures) content.GetValueForProperty("AllowedFeatures",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).AllowedFeatures, Commvault.Powershell.Models.LaptopPlanAllowedFeaturesTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).GeneralOptimizedForCloudBackups = (bool?) content.GetValueForProperty("GeneralOptimizedForCloudBackups",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).GeneralOptimizedForCloudBackups, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RpoSla = (Commvault.Powershell.Models.ISlaUpdateOptions) content.GetValueForProperty("RpoSla",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RpoSla, Commvault.Powershell.Models.SlaUpdateOptionsTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RpoBackupFrequency = (long?) content.GetValueForProperty("RpoBackupFrequency",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RpoBackupFrequency, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentWindowsIncludedPaths = (string[]) content.GetValueForProperty("BackupContentWindowsIncludedPaths",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentWindowsIncludedPaths, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentWindowsExcludedPaths = (string[]) content.GetValueForProperty("BackupContentWindowsExcludedPaths",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentWindowsExcludedPaths, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentMacIncludedPaths = (string[]) content.GetValueForProperty("BackupContentMacIncludedPaths",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentMacIncludedPaths, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentMacExcludedPaths = (string[]) content.GetValueForProperty("BackupContentMacExcludedPaths",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentMacExcludedPaths, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentUnixIncludedPaths = (string[]) content.GetValueForProperty("BackupContentUnixIncludedPaths",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentUnixIncludedPaths, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentUnixExcludedPaths = (string[]) content.GetValueForProperty("BackupContentUnixExcludedPaths",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentUnixExcludedPaths, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentFileSystemQuota = (long?) content.GetValueForProperty("BackupContentFileSystemQuota",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).BackupContentFileSystemQuota, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RetentionFileVersions = (Commvault.Powershell.Models.ILaptopPlanRetentionFileVersions) content.GetValueForProperty("RetentionFileVersions",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RetentionFileVersions, Commvault.Powershell.Models.LaptopPlanRetentionFileVersionsTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RetentionDeletedItemRetention = (long?) content.GetValueForProperty("RetentionDeletedItemRetention",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RetentionDeletedItemRetention, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RegionToConfigureId = (long?) content.GetValueForProperty("RegionToConfigureId",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RegionToConfigureId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RegionToConfigureName = (string) content.GetValueForProperty("RegionToConfigureName",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).RegionToConfigureName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionStoragePool = (string) content.GetValueForProperty("OverrideRestrictionStoragePool",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionStoragePool, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionRpo = (string) content.GetValueForProperty("OverrideRestrictionRpo",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionRpo, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionBackupContent = (string) content.GetValueForProperty("OverrideRestrictionBackupContent",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionBackupContent, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionRetention = (string) content.GetValueForProperty("OverrideRestrictionRetention",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OverrideRestrictionRetention, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NetworkResourceThrottleSend = (long?) content.GetValueForProperty("NetworkResourceThrottleSend",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NetworkResourceThrottleSend, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NetworkResourceThrottleReceive = (long?) content.GetValueForProperty("NetworkResourceThrottleReceive",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).NetworkResourceThrottleReceive, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OfflineLaptopRetireAfterDays = (long?) content.GetValueForProperty("OfflineLaptopRetireAfterDays",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OfflineLaptopRetireAfterDays, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OfflineLaptopDeleteAfterDays = (long?) content.GetValueForProperty("OfflineLaptopDeleteAfterDays",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).OfflineLaptopDeleteAfterDays, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaUseSystemDefaultSla = (bool?) content.GetValueForProperty("SlaUseSystemDefaultSla",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaUseSystemDefaultSla, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaPeriod = (long?) content.GetValueForProperty("SlaPeriod",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaPeriod, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaExcludeFromSla = (bool?) content.GetValueForProperty("SlaExcludeFromSla",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaExcludeFromSla, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaEnableAfterDelay = (long?) content.GetValueForProperty("SlaEnableAfterDelay",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaEnableAfterDelay, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaExclusionReason = (string) content.GetValueForProperty("SlaExclusionReason",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).SlaExclusionReason, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionDays = (long?) content.GetValueForProperty("FileVersionDays",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionDays, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionVersions = (long?) content.GetValueForProperty("FileVersionVersions",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionVersions, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionDailyVersions = (long?) content.GetValueForProperty("FileVersionDailyVersions",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionDailyVersions, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionWeeklyVersions = (long?) content.GetValueForProperty("FileVersionWeeklyVersions",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionWeeklyVersions, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionMonthlyVersions = (long?) content.GetValueForProperty("FileVersionMonthlyVersions",((Commvault.Powershell.Models.IUpdateLaptopPlanInternal)this).FileVersionMonthlyVersions, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            AfterDeserializePSObject(content);
        }
    }
    [System.ComponentModel.TypeConverter(typeof(UpdateLaptopPlanTypeConverter))]
    public partial interface IUpdateLaptopPlan

    {

    }
}