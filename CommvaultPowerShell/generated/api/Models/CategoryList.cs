// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class CategoryList :
        Commvault.Powershell.Models.ICategoryList,
        Commvault.Powershell.Models.ICategoryListInternal
    {

        /// <summary>Backing field for <see cref="Category" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _category;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Category { get => (this._category = this._category ?? new Commvault.Powershell.Models.IdName()); set => this._category = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? CategoryId { get => ((Commvault.Powershell.Models.IIdNameInternal)Category).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Category).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string CategoryName { get => ((Commvault.Powershell.Models.IIdNameInternal)Category).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Category).Name = value ?? null; }

        /// <summary>Internal Acessors for Category</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.ICategoryListInternal.Category { get => (this._category = this._category ?? new Commvault.Powershell.Models.IdName()); set { {_category = value;} } }

        /// <summary>Backing field for <see cref="Permissions" /> property.</summary>
        private Commvault.Powershell.Models.IIdName[] _permissions;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.IIdName[] Permissions { get => this._permissions; set => this._permissions = value; }

        /// <summary>Creates an new <see cref="CategoryList" /> instance.</summary>
        public CategoryList()
        {

        }
    }
    public partial interface ICategoryList :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? CategoryId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string CategoryName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"permissions",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IIdName) })]
        Commvault.Powershell.Models.IIdName[] Permissions { get; set; }

    }
    internal partial interface ICategoryListInternal

    {
        Commvault.Powershell.Models.IIdName Category { get; set; }

        long? CategoryId { get; set; }

        string CategoryName { get; set; }

        Commvault.Powershell.Models.IIdName[] Permissions { get; set; }

    }
}