// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class FirewallTopology :
        Commvault.Powershell.Models.IFirewallTopology,
        Commvault.Powershell.Models.IFirewallTopologyInternal
    {

        /// <summary>Backing field for <see cref="ClientType" /> property.</summary>
        private string _clientType;

        /// <summary>The type of clients associated with the topology.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string ClientType { get => this._clientType; set => this._clientType = value; }

        /// <summary>Internal Acessors for Topology</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IFirewallTopologyInternal.Topology { get => (this._topology = this._topology ?? new Commvault.Powershell.Models.IdName()); set { {_topology = value;} } }

        /// <summary>Backing field for <see cref="Topology" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _topology;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Topology { get => (this._topology = this._topology ?? new Commvault.Powershell.Models.IdName()); set => this._topology = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? TopologyId { get => ((Commvault.Powershell.Models.IIdNameInternal)Topology).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Topology).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string TopologyName { get => ((Commvault.Powershell.Models.IIdNameInternal)Topology).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Topology).Name = value ?? null; }

        /// <summary>Backing field for <see cref="TopologyType" /> property.</summary>
        private string _topologyType;

        /// <summary>
        /// The type of topology of client groups (and sometimes network gateway) for this instance.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string TopologyType { get => this._topologyType; set => this._topologyType = value; }

        /// <summary>Creates an new <see cref="FirewallTopology" /> instance.</summary>
        public FirewallTopology()
        {

        }
    }
    public partial interface IFirewallTopology :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>The type of clients associated with the topology.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The type of clients associated with the topology.",
        SerializedName = @"clientType",
        PossibleTypes = new [] { typeof(string) })]
        string ClientType { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? TopologyId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string TopologyName { get; set; }
        /// <summary>
        /// The type of topology of client groups (and sometimes network gateway) for this instance.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The type of topology of client groups (and sometimes network gateway) for this instance.",
        SerializedName = @"topologyType",
        PossibleTypes = new [] { typeof(string) })]
        string TopologyType { get; set; }

    }
    internal partial interface IFirewallTopologyInternal

    {
        /// <summary>The type of clients associated with the topology.</summary>
        string ClientType { get; set; }

        Commvault.Powershell.Models.IIdName Topology { get; set; }

        long? TopologyId { get; set; }

        string TopologyName { get; set; }
        /// <summary>
        /// The type of topology of client groups (and sometimes network gateway) for this instance.
        /// </summary>
        string TopologyType { get; set; }

    }
}