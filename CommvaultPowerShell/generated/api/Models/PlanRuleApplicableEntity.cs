// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Entity applicable for plan association via plan assignment rules.</summary>
    public partial class PlanRuleApplicableEntity :
        Commvault.Powershell.Models.IPlanRuleApplicableEntity,
        Commvault.Powershell.Models.IPlanRuleApplicableEntityInternal
    {

        /// <summary>Backing field for <see cref="Apptype" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _apptype;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Apptype { get => (this._apptype = this._apptype ?? new Commvault.Powershell.Models.IdName()); set => this._apptype = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? ApptypeId { get => ((Commvault.Powershell.Models.IIdNameInternal)Apptype).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Apptype).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string ApptypeName { get => ((Commvault.Powershell.Models.IIdNameInternal)Apptype).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Apptype).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Backupset" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _backupset;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Backupset { get => (this._backupset = this._backupset ?? new Commvault.Powershell.Models.IdName()); set => this._backupset = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? BackupsetId { get => ((Commvault.Powershell.Models.IIdNameInternal)Backupset).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Backupset).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string BackupsetName { get => ((Commvault.Powershell.Models.IIdNameInternal)Backupset).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Backupset).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Client" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _client;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Client { get => (this._client = this._client ?? new Commvault.Powershell.Models.IdName()); set => this._client = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? ClientId { get => ((Commvault.Powershell.Models.IIdNameInternal)Client).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Client).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string ClientName { get => ((Commvault.Powershell.Models.IIdNameInternal)Client).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Client).Name = value ?? null; }

        /// <summary>Internal Acessors for Apptype</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IPlanRuleApplicableEntityInternal.Apptype { get => (this._apptype = this._apptype ?? new Commvault.Powershell.Models.IdName()); set { {_apptype = value;} } }

        /// <summary>Internal Acessors for Backupset</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IPlanRuleApplicableEntityInternal.Backupset { get => (this._backupset = this._backupset ?? new Commvault.Powershell.Models.IdName()); set { {_backupset = value;} } }

        /// <summary>Internal Acessors for Client</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IPlanRuleApplicableEntityInternal.Client { get => (this._client = this._client ?? new Commvault.Powershell.Models.IdName()); set { {_client = value;} } }

        /// <summary>Internal Acessors for CurrentPlan</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IPlanRuleApplicableEntityInternal.CurrentPlan { get => (this._currentPlan = this._currentPlan ?? new Commvault.Powershell.Models.IdName()); set { {_currentPlan = value;} } }

        /// <summary>Internal Acessors for EvaluatedPlan</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IPlanRuleApplicableEntityInternal.EvaluatedPlan { get => (this._evaluatedPlan = this._evaluatedPlan ?? new Commvault.Powershell.Models.IdName()); set { {_evaluatedPlan = value;} } }

        /// <summary>Internal Acessors for Instance</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IPlanRuleApplicableEntityInternal.Instance { get => (this._instance = this._instance ?? new Commvault.Powershell.Models.IdName()); set { {_instance = value;} } }

        /// <summary>Internal Acessors for Subclient</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IPlanRuleApplicableEntityInternal.Subclient { get => (this._subclient = this._subclient ?? new Commvault.Powershell.Models.IdName()); set { {_subclient = value;} } }

        /// <summary>Backing field for <see cref="CurrentPlan" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _currentPlan;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName CurrentPlan { get => (this._currentPlan = this._currentPlan ?? new Commvault.Powershell.Models.IdName()); set => this._currentPlan = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? CurrentPlanId { get => ((Commvault.Powershell.Models.IIdNameInternal)CurrentPlan).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)CurrentPlan).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string CurrentPlanName { get => ((Commvault.Powershell.Models.IIdNameInternal)CurrentPlan).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)CurrentPlan).Name = value ?? null; }

        /// <summary>Backing field for <see cref="EvaluatedPlan" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _evaluatedPlan;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName EvaluatedPlan { get => (this._evaluatedPlan = this._evaluatedPlan ?? new Commvault.Powershell.Models.IdName()); set => this._evaluatedPlan = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? EvaluatedPlanId { get => ((Commvault.Powershell.Models.IIdNameInternal)EvaluatedPlan).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)EvaluatedPlan).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string EvaluatedPlanName { get => ((Commvault.Powershell.Models.IIdNameInternal)EvaluatedPlan).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)EvaluatedPlan).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Instance" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _instance;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Instance { get => (this._instance = this._instance ?? new Commvault.Powershell.Models.IdName()); set => this._instance = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? InstanceId { get => ((Commvault.Powershell.Models.IIdNameInternal)Instance).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Instance).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string InstanceName { get => ((Commvault.Powershell.Models.IIdNameInternal)Instance).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Instance).Name = value ?? null; }

        /// <summary>Backing field for <see cref="RuleDetails" /> property.</summary>
        private Commvault.Powershell.Models.IPlanEntityRuleInfo _ruleDetails;

        /// <summary>This object will hold each plan rule details.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.IPlanEntityRuleInfo RuleDetails { get => (this._ruleDetails = this._ruleDetails ?? new Commvault.Powershell.Models.PlanEntityRuleInfo()); set => this._ruleDetails = value; }

        /// <summary>Backing field for <see cref="Subclient" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _subclient;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Subclient { get => (this._subclient = this._subclient ?? new Commvault.Powershell.Models.IdName()); set => this._subclient = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? SubclientId { get => ((Commvault.Powershell.Models.IIdNameInternal)Subclient).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Subclient).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string SubclientName { get => ((Commvault.Powershell.Models.IIdNameInternal)Subclient).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Subclient).Name = value ?? null; }

        /// <summary>Creates an new <see cref="PlanRuleApplicableEntity" /> instance.</summary>
        public PlanRuleApplicableEntity()
        {

        }
    }
    /// Entity applicable for plan association via plan assignment rules.
    public partial interface IPlanRuleApplicableEntity :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? ApptypeId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ApptypeName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? BackupsetId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string BackupsetName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? ClientId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ClientName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? CurrentPlanId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentPlanName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? EvaluatedPlanId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string EvaluatedPlanName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? InstanceId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceName { get; set; }
        /// <summary>This object will hold each plan rule details.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This object will hold each plan rule details.",
        SerializedName = @"ruleDetails",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IPlanEntityRuleInfo) })]
        Commvault.Powershell.Models.IPlanEntityRuleInfo RuleDetails { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? SubclientId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SubclientName { get; set; }

    }
    /// Entity applicable for plan association via plan assignment rules.
    internal partial interface IPlanRuleApplicableEntityInternal

    {
        Commvault.Powershell.Models.IIdName Apptype { get; set; }

        long? ApptypeId { get; set; }

        string ApptypeName { get; set; }

        Commvault.Powershell.Models.IIdName Backupset { get; set; }

        long? BackupsetId { get; set; }

        string BackupsetName { get; set; }

        Commvault.Powershell.Models.IIdName Client { get; set; }

        long? ClientId { get; set; }

        string ClientName { get; set; }

        Commvault.Powershell.Models.IIdName CurrentPlan { get; set; }

        long? CurrentPlanId { get; set; }

        string CurrentPlanName { get; set; }

        Commvault.Powershell.Models.IIdName EvaluatedPlan { get; set; }

        long? EvaluatedPlanId { get; set; }

        string EvaluatedPlanName { get; set; }

        Commvault.Powershell.Models.IIdName Instance { get; set; }

        long? InstanceId { get; set; }

        string InstanceName { get; set; }
        /// <summary>This object will hold each plan rule details.</summary>
        Commvault.Powershell.Models.IPlanEntityRuleInfo RuleDetails { get; set; }

        Commvault.Powershell.Models.IIdName Subclient { get; set; }

        long? SubclientId { get; set; }

        string SubclientName { get; set; }

    }
}