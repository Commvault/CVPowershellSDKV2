// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    /// <summary>
    /// A list of users or user groups each having a specific set of roles that determine the kind of operations they can perform
    /// on the entity.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(SecurityAssocTypeConverter))]
    public partial class SecurityAssoc
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.SecurityAssoc"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.ISecurityAssoc" />.</returns>
        public static Commvault.Powershell.Models.ISecurityAssoc DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new SecurityAssoc(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.SecurityAssoc"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.ISecurityAssoc" />.</returns>
        public static Commvault.Powershell.Models.ISecurityAssoc DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new SecurityAssoc(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="SecurityAssoc" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="SecurityAssoc" /> model class.</returns>
        public static Commvault.Powershell.Models.ISecurityAssoc FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.SecurityAssoc"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal SecurityAssoc(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("User"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).User = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("User",((Commvault.Powershell.Models.ISecurityAssocInternal)this).User, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("UserGroup"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserGroup = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("UserGroup",((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserGroup, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExternalUserGroup"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroup = (Commvault.Powershell.Models.IExternalUserGroup) content.GetValueForProperty("ExternalUserGroup",((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroup, Commvault.Powershell.Models.ExternalUserGroupTypeConverter.ConvertFrom);
            }
            if (content.Contains("Role"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).Role = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("Role",((Commvault.Powershell.Models.ISecurityAssocInternal)this).Role, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("IsCreatorAssociation"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).IsCreatorAssociation = (bool?) content.GetValueForProperty("IsCreatorAssociation",((Commvault.Powershell.Models.ISecurityAssocInternal)this).IsCreatorAssociation, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PermissionList"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).PermissionList = (System.Collections.Generic.List<Commvault.Powershell.Models.IPermissionResp>) content.GetValueForProperty("PermissionList",((Commvault.Powershell.Models.ISecurityAssocInternal)this).PermissionList, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IPermissionResp>(__y, Commvault.Powershell.Models.PermissionRespTypeConverter.ConvertFrom));
            }
            if (content.Contains("ExternalUserGroupId"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupId = (long?) content.GetValueForProperty("ExternalUserGroupId",((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ExternalUserGroupName"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupName = (string) content.GetValueForProperty("ExternalUserGroupName",((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("ExternalUserGroupProviderId"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupProviderId = (long?) content.GetValueForProperty("ExternalUserGroupProviderId",((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupProviderId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ExternalUserGroupProviderName"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupProviderName = (string) content.GetValueForProperty("ExternalUserGroupProviderName",((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupProviderName, global::System.Convert.ToString);
            }
            if (content.Contains("UserId"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserId = (long?) content.GetValueForProperty("UserId",((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("UserName"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserName = (string) content.GetValueForProperty("UserName",((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserName, global::System.Convert.ToString);
            }
            if (content.Contains("UserGroupId"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserGroupId = (long?) content.GetValueForProperty("UserGroupId",((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserGroupId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("UserGroupName"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserGroupName = (string) content.GetValueForProperty("UserGroupName",((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("RoleId"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).RoleId = (long?) content.GetValueForProperty("RoleId",((Commvault.Powershell.Models.ISecurityAssocInternal)this).RoleId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("RoleName"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).RoleName = (string) content.GetValueForProperty("RoleName",((Commvault.Powershell.Models.ISecurityAssocInternal)this).RoleName, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.SecurityAssoc"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal SecurityAssoc(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("User"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).User = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("User",((Commvault.Powershell.Models.ISecurityAssocInternal)this).User, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("UserGroup"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserGroup = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("UserGroup",((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserGroup, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExternalUserGroup"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroup = (Commvault.Powershell.Models.IExternalUserGroup) content.GetValueForProperty("ExternalUserGroup",((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroup, Commvault.Powershell.Models.ExternalUserGroupTypeConverter.ConvertFrom);
            }
            if (content.Contains("Role"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).Role = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("Role",((Commvault.Powershell.Models.ISecurityAssocInternal)this).Role, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("IsCreatorAssociation"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).IsCreatorAssociation = (bool?) content.GetValueForProperty("IsCreatorAssociation",((Commvault.Powershell.Models.ISecurityAssocInternal)this).IsCreatorAssociation, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PermissionList"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).PermissionList = (System.Collections.Generic.List<Commvault.Powershell.Models.IPermissionResp>) content.GetValueForProperty("PermissionList",((Commvault.Powershell.Models.ISecurityAssocInternal)this).PermissionList, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IPermissionResp>(__y, Commvault.Powershell.Models.PermissionRespTypeConverter.ConvertFrom));
            }
            if (content.Contains("ExternalUserGroupId"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupId = (long?) content.GetValueForProperty("ExternalUserGroupId",((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ExternalUserGroupName"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupName = (string) content.GetValueForProperty("ExternalUserGroupName",((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("ExternalUserGroupProviderId"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupProviderId = (long?) content.GetValueForProperty("ExternalUserGroupProviderId",((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupProviderId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ExternalUserGroupProviderName"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupProviderName = (string) content.GetValueForProperty("ExternalUserGroupProviderName",((Commvault.Powershell.Models.ISecurityAssocInternal)this).ExternalUserGroupProviderName, global::System.Convert.ToString);
            }
            if (content.Contains("UserId"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserId = (long?) content.GetValueForProperty("UserId",((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("UserName"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserName = (string) content.GetValueForProperty("UserName",((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserName, global::System.Convert.ToString);
            }
            if (content.Contains("UserGroupId"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserGroupId = (long?) content.GetValueForProperty("UserGroupId",((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserGroupId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("UserGroupName"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserGroupName = (string) content.GetValueForProperty("UserGroupName",((Commvault.Powershell.Models.ISecurityAssocInternal)this).UserGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("RoleId"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).RoleId = (long?) content.GetValueForProperty("RoleId",((Commvault.Powershell.Models.ISecurityAssocInternal)this).RoleId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("RoleName"))
            {
                ((Commvault.Powershell.Models.ISecurityAssocInternal)this).RoleName = (string) content.GetValueForProperty("RoleName",((Commvault.Powershell.Models.ISecurityAssocInternal)this).RoleName, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// A list of users or user groups each having a specific set of roles that determine the kind of operations they can perform
    /// on the entity.
    [System.ComponentModel.TypeConverter(typeof(SecurityAssocTypeConverter))]
    public partial interface ISecurityAssoc

    {

    }
}