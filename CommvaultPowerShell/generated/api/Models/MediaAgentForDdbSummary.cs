// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class MediaAgentForDdbSummary :
        Commvault.Powershell.Models.IMediaAgentForDdbSummary,
        Commvault.Powershell.Models.IMediaAgentForDdbSummaryInternal
    {

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Display name of the media agent.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private long? _id;

        /// <summary>Id of the media agent.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="IsDdbSubclientConfigured" /> property.</summary>
        private bool? _isDdbSubclientConfigured;

        /// <summary>Used to determine if a DDB subclient has been configured for this media agent.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? IsDdbSubclientConfigured { get => this._isDdbSubclientConfigured; set => this._isDdbSubclientConfigured = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the media agent.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private string _oSType;

        /// <summary>Media Agent operating system type.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Backing field for <see cref="ReleaseId" /> property.</summary>
        private long? _releaseId;

        /// <summary>Release version of the media agent.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? ReleaseId { get => this._releaseId; set => this._releaseId = value; }

        /// <summary>Backing field for <see cref="SimosId" /> property.</summary>
        private long? _simosId;

        /// <summary>Operating System Id of the media agent.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? SimosId { get => this._simosId; set => this._simosId = value; }

        /// <summary>Creates an new <see cref="MediaAgentForDdbSummary" /> instance.</summary>
        public MediaAgentForDdbSummary()
        {

        }
    }
    public partial interface IMediaAgentForDdbSummary :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Display name of the media agent.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Display name of the media agent.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Id of the media agent.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of the media agent.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? Id { get; set; }
        /// <summary>Used to determine if a DDB subclient has been configured for this media agent.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Used to determine if a DDB subclient has been configured for this media agent.",
        SerializedName = @"isDDBSubclientConfigured",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDdbSubclientConfigured { get; set; }
        /// <summary>Name of the media agent.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the media agent.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Media Agent operating system type.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Media Agent operating system type.",
        SerializedName = @"OSType",
        PossibleTypes = new [] { typeof(string) })]
        string OSType { get; set; }
        /// <summary>Release version of the media agent.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Release version of the media agent.",
        SerializedName = @"releaseId",
        PossibleTypes = new [] { typeof(long) })]
        long? ReleaseId { get; set; }
        /// <summary>Operating System Id of the media agent.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operating System Id of the media agent.",
        SerializedName = @"SIMOSId",
        PossibleTypes = new [] { typeof(long) })]
        long? SimosId { get; set; }

    }
    internal partial interface IMediaAgentForDdbSummaryInternal

    {
        /// <summary>Display name of the media agent.</summary>
        string DisplayName { get; set; }
        /// <summary>Id of the media agent.</summary>
        long? Id { get; set; }
        /// <summary>Used to determine if a DDB subclient has been configured for this media agent.</summary>
        bool? IsDdbSubclientConfigured { get; set; }
        /// <summary>Name of the media agent.</summary>
        string Name { get; set; }
        /// <summary>Media Agent operating system type.</summary>
        string OSType { get; set; }
        /// <summary>Release version of the media agent.</summary>
        long? ReleaseId { get; set; }
        /// <summary>Operating System Id of the media agent.</summary>
        long? SimosId { get; set; }

    }
}