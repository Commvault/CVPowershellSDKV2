// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.2, generator: @autorest/powershell@3.0.494)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(VMGroupSettingsTypeConverter))]
    public partial class VMGroupSettings
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.VMGroupSettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.IVMGroupSettings" />.</returns>
        public static Commvault.Powershell.Models.IVMGroupSettings DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new VMGroupSettings(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.VMGroupSettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.IVMGroupSettings" />.</returns>
        public static Commvault.Powershell.Models.IVMGroupSettings DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new VMGroupSettings(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="VMGroupSettings" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="VMGroupSettings" /> model class.</returns>
        public static Commvault.Powershell.Models.IVMGroupSettings FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.VMGroupSettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal VMGroupSettings(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("GuestCredentials"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).GuestCredentials = (Commvault.Powershell.Models.IGuestCredentialInfo) content.GetValueForProperty("GuestCredentials",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).GuestCredentials, Commvault.Powershell.Models.GuestCredentialInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("UseChangedBlockTrackingOnVM"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).UseChangedBlockTrackingOnVM = (bool?) content.GetValueForProperty("UseChangedBlockTrackingOnVM",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).UseChangedBlockTrackingOnVM, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CustomSnapshotResourceGroup"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CustomSnapshotResourceGroup = (string) content.GetValueForProperty("CustomSnapshotResourceGroup",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CustomSnapshotResourceGroup, global::System.Convert.ToString);
            }
            if (content.Contains("AutoDetectVMOwner"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).AutoDetectVMOwner = (bool?) content.GetValueForProperty("AutoDetectVMOwner",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).AutoDetectVMOwner, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NoOfReaders"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).NoOfReaders = (long?) content.GetValueForProperty("NoOfReaders",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).NoOfReaders, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("IsApplicationAware"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).IsApplicationAware = (bool?) content.GetValueForProperty("IsApplicationAware",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).IsApplicationAware, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VMBackupType"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).VMBackupType = (string) content.GetValueForProperty("VMBackupType",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).VMBackupType, global::System.Convert.ToString);
            }
            if (content.Contains("UseVMCheckpointSetting"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).UseVMCheckpointSetting = (bool?) content.GetValueForProperty("UseVMCheckpointSetting",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).UseVMCheckpointSetting, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TransportMode"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).TransportMode = (string) content.GetValueForProperty("TransportMode",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).TransportMode, global::System.Convert.ToString);
            }
            if (content.Contains("DatastoreFreespaceCheck"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).DatastoreFreespaceCheck = (bool?) content.GetValueForProperty("DatastoreFreespaceCheck",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).DatastoreFreespaceCheck, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DatastoreFreespaceRequired"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).DatastoreFreespaceRequired = (long?) content.GetValueForProperty("DatastoreFreespaceRequired",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).DatastoreFreespaceRequired, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CollectFileDetailsforGranularRecovery"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CollectFileDetailsforGranularRecovery = (bool?) content.GetValueForProperty("CollectFileDetailsforGranularRecovery",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CollectFileDetailsforGranularRecovery, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CollectFileDetailsFromSnapshotCopy"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CollectFileDetailsFromSnapshotCopy = (bool?) content.GetValueForProperty("CollectFileDetailsFromSnapshotCopy",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CollectFileDetailsFromSnapshotCopy, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("JobStartTime"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).JobStartTime = (long?) content.GetValueForProperty("JobStartTime",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).JobStartTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("GuestCredentialsSavedCredentials"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).GuestCredentialsSavedCredentials = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("GuestCredentialsSavedCredentials",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).GuestCredentialsSavedCredentials, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("GuestCredentialsCredentials"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).GuestCredentialsCredentials = (Commvault.Powershell.Models.IUserNamePassword) content.GetValueForProperty("GuestCredentialsCredentials",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).GuestCredentialsCredentials, Commvault.Powershell.Models.UserNamePasswordTypeConverter.ConvertFrom);
            }
            if (content.Contains("SavedCredentialsId"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).SavedCredentialsId = (long?) content.GetValueForProperty("SavedCredentialsId",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).SavedCredentialsId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("SavedCredentialsName"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).SavedCredentialsName = (string) content.GetValueForProperty("SavedCredentialsName",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).SavedCredentialsName, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsName"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CredentialsName = (string) content.GetValueForProperty("CredentialsName",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CredentialsName, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsPassword"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CredentialsPassword = (string) content.GetValueForProperty("CredentialsPassword",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CredentialsPassword, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.VMGroupSettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal VMGroupSettings(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("GuestCredentials"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).GuestCredentials = (Commvault.Powershell.Models.IGuestCredentialInfo) content.GetValueForProperty("GuestCredentials",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).GuestCredentials, Commvault.Powershell.Models.GuestCredentialInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("UseChangedBlockTrackingOnVM"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).UseChangedBlockTrackingOnVM = (bool?) content.GetValueForProperty("UseChangedBlockTrackingOnVM",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).UseChangedBlockTrackingOnVM, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CustomSnapshotResourceGroup"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CustomSnapshotResourceGroup = (string) content.GetValueForProperty("CustomSnapshotResourceGroup",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CustomSnapshotResourceGroup, global::System.Convert.ToString);
            }
            if (content.Contains("AutoDetectVMOwner"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).AutoDetectVMOwner = (bool?) content.GetValueForProperty("AutoDetectVMOwner",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).AutoDetectVMOwner, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NoOfReaders"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).NoOfReaders = (long?) content.GetValueForProperty("NoOfReaders",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).NoOfReaders, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("IsApplicationAware"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).IsApplicationAware = (bool?) content.GetValueForProperty("IsApplicationAware",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).IsApplicationAware, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VMBackupType"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).VMBackupType = (string) content.GetValueForProperty("VMBackupType",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).VMBackupType, global::System.Convert.ToString);
            }
            if (content.Contains("UseVMCheckpointSetting"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).UseVMCheckpointSetting = (bool?) content.GetValueForProperty("UseVMCheckpointSetting",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).UseVMCheckpointSetting, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TransportMode"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).TransportMode = (string) content.GetValueForProperty("TransportMode",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).TransportMode, global::System.Convert.ToString);
            }
            if (content.Contains("DatastoreFreespaceCheck"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).DatastoreFreespaceCheck = (bool?) content.GetValueForProperty("DatastoreFreespaceCheck",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).DatastoreFreespaceCheck, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DatastoreFreespaceRequired"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).DatastoreFreespaceRequired = (long?) content.GetValueForProperty("DatastoreFreespaceRequired",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).DatastoreFreespaceRequired, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CollectFileDetailsforGranularRecovery"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CollectFileDetailsforGranularRecovery = (bool?) content.GetValueForProperty("CollectFileDetailsforGranularRecovery",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CollectFileDetailsforGranularRecovery, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CollectFileDetailsFromSnapshotCopy"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CollectFileDetailsFromSnapshotCopy = (bool?) content.GetValueForProperty("CollectFileDetailsFromSnapshotCopy",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CollectFileDetailsFromSnapshotCopy, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("JobStartTime"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).JobStartTime = (long?) content.GetValueForProperty("JobStartTime",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).JobStartTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("GuestCredentialsSavedCredentials"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).GuestCredentialsSavedCredentials = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("GuestCredentialsSavedCredentials",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).GuestCredentialsSavedCredentials, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("GuestCredentialsCredentials"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).GuestCredentialsCredentials = (Commvault.Powershell.Models.IUserNamePassword) content.GetValueForProperty("GuestCredentialsCredentials",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).GuestCredentialsCredentials, Commvault.Powershell.Models.UserNamePasswordTypeConverter.ConvertFrom);
            }
            if (content.Contains("SavedCredentialsId"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).SavedCredentialsId = (long?) content.GetValueForProperty("SavedCredentialsId",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).SavedCredentialsId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("SavedCredentialsName"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).SavedCredentialsName = (string) content.GetValueForProperty("SavedCredentialsName",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).SavedCredentialsName, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsName"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CredentialsName = (string) content.GetValueForProperty("CredentialsName",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CredentialsName, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsPassword"))
            {
                ((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CredentialsPassword = (string) content.GetValueForProperty("CredentialsPassword",((Commvault.Powershell.Models.IVMGroupSettingsInternal)this).CredentialsPassword, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }
    }
    [System.ComponentModel.TypeConverter(typeof(VMGroupSettingsTypeConverter))]
    public partial interface IVMGroupSettings

    {

    }
}