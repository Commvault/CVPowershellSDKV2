// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>CloudStorageProxy</summary>
    public partial class CloudStorageProxy :
        Commvault.Powershell.Models.ICloudStorageProxy,
        Commvault.Powershell.Models.ICloudStorageProxyInternal
    {

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private System.Security.SecureString _password;

        /// <summary>Password for proxy configuration (Should be in Base64 format)</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public System.Security.SecureString Password { get => this._password; set => this._password = value; }

        /// <summary>Backing field for <see cref="Port" /> property.</summary>
        private long? _port;

        /// <summary>Port for proxy configuration</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? Port { get => this._port; set => this._port = value; }

        /// <summary>Backing field for <see cref="ProxyAddress" /> property.</summary>
        private string _proxyAddress;

        /// <summary>
        /// If the MediaAgent accesses the mount path using a proxy then proxy server address needs to be provided. If you want to
        /// remove proxy information, pass empty string in proxyAddress.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string ProxyAddress { get => this._proxyAddress; set => this._proxyAddress = value; }

        /// <summary>Backing field for <see cref="Username" /> property.</summary>
        private string _username;

        /// <summary>Username for proxy configuration</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Username { get => this._username; set => this._username = value; }

        /// <summary>Creates an new <see cref="CloudStorageProxy" /> instance.</summary>
        public CloudStorageProxy()
        {

        }
    }
    /// CloudStorageProxy
    public partial interface ICloudStorageProxy :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Password for proxy configuration (Should be in Base64 format)</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Password for proxy configuration (Should be in Base64 format)",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString Password { get; set; }
        /// <summary>Port for proxy configuration</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Port for proxy configuration",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(long) })]
        long? Port { get; set; }
        /// <summary>
        /// If the MediaAgent accesses the mount path using a proxy then proxy server address needs to be provided. If you want to
        /// remove proxy information, pass empty string in proxyAddress.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If the MediaAgent accesses the mount path using a proxy then proxy server address needs to be provided. If you want to remove proxy information, pass empty string in proxyAddress.",
        SerializedName = @"proxyAddress",
        PossibleTypes = new [] { typeof(string) })]
        string ProxyAddress { get; set; }
        /// <summary>Username for proxy configuration</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Username for proxy configuration",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string Username { get; set; }

    }
    /// CloudStorageProxy
    internal partial interface ICloudStorageProxyInternal

    {
        /// <summary>Password for proxy configuration (Should be in Base64 format)</summary>
        System.Security.SecureString Password { get; set; }
        /// <summary>Port for proxy configuration</summary>
        long? Port { get; set; }
        /// <summary>
        /// If the MediaAgent accesses the mount path using a proxy then proxy server address needs to be provided. If you want to
        /// remove proxy information, pass empty string in proxyAddress.
        /// </summary>
        string ProxyAddress { get; set; }
        /// <summary>Username for proxy configuration</summary>
        string Username { get; set; }

    }
}