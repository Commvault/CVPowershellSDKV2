// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>
    /// Applicable only for credentials with Cloud Account, Vendor Type as Amazon Web Services and authType is Access and Secret
    /// Keys
    /// </summary>
    public partial class AmazonCredentialContent :
        Commvault.Powershell.Models.IAmazonCredentialContent,
        Commvault.Powershell.Models.IAmazonCredentialContentInternal
    {

        /// <summary>Backing field for <see cref="AccessKeyId" /> property.</summary>
        private string _accessKeyId;

        /// <summary>
        /// Access Key ID of Credential. If updated the updated access key ID is considered.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string AccessKeyId { get => this._accessKeyId; set => this._accessKeyId = value; }

        /// <summary>Internal Acessors for OwnerUser</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IAmazonCredentialContentInternal.OwnerUser { get => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).OwnerUser; set => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).OwnerUser = value; }

        /// <summary>Internal Acessors for OwnerUserGroup</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IAmazonCredentialContentInternal.OwnerUserGroup { get => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).OwnerUserGroup; set => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).OwnerUserGroup = value; }

        /// <summary>Internal Acessors for Security</summary>
        Commvault.Powershell.Models.IUpdateCredentialSecurity Commvault.Powershell.Models.IAmazonCredentialContentInternal.Security { get => (this._security = this._security ?? new Commvault.Powershell.Models.UpdateCredentialSecurity()); set { {_security = value;} } }

        /// <summary>Internal Acessors for SecurityOwner</summary>
        Commvault.Powershell.Models.ICredentialOwner Commvault.Powershell.Models.IAmazonCredentialContentInternal.SecurityOwner { get => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).Owner; set => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).Owner = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Updated description of Credential</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="NewName" /> property.</summary>
        private string _newName;

        /// <summary>Updated name of credential</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string NewName { get => this._newName; set => this._newName = value; }

        /// <summary>Backing field for <see cref="SecretAccessKey" /> property.</summary>
        private string _secretAccessKey;

        /// <summary>Updated Secret Access Key of Credential and must be in base64 encoded format.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string SecretAccessKey { get => this._secretAccessKey; set => this._secretAccessKey = value; }

        /// <summary>Backing field for <see cref="Security" /> property.</summary>
        private Commvault.Powershell.Models.IUpdateCredentialSecurity _security;

        /// <summary>Update Security association of a list of users and user groups</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IUpdateCredentialSecurity Security { get => (this._security = this._security ?? new Commvault.Powershell.Models.UpdateCredentialSecurity()); set => this._security = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Commvault.Powershell.Models.ICredentialSecurityAssociations> SecurityAssociations { get => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).Associations; set => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).Associations = value ?? null /* arrayOf */; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? UserGroupId { get => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).UserGroupId; set => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).UserGroupId = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string UserGroupName { get => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).UserGroupName; set => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).UserGroupName = value ?? null; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? UserId { get => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).UserId; set => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).UserId = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string UserName { get => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).UserName; set => ((Commvault.Powershell.Models.IUpdateCredentialSecurityInternal)Security).UserName = value ?? null; }

        /// <summary>Creates an new <see cref="AmazonCredentialContent" /> instance.</summary>
        public AmazonCredentialContent()
        {

        }
    }
    /// Applicable only for credentials with Cloud Account, Vendor Type as Amazon Web Services and authType is Access and Secret
    /// Keys
    public partial interface IAmazonCredentialContent :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Access Key ID of Credential. If updated the updated access key ID is considered.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Access Key ID of Credential. If updated the updated access key ID is considered.",
        SerializedName = @"accessKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string AccessKeyId { get; set; }
        /// <summary>Updated description of Credential</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Updated description of Credential",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Updated name of credential</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Updated name of credential",
        SerializedName = @"newName",
        PossibleTypes = new [] { typeof(string) })]
        string NewName { get; set; }
        /// <summary>Updated Secret Access Key of Credential and must be in base64 encoded format.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Updated Secret Access Key of Credential and must be in base64 encoded format.",
        SerializedName = @"secretAccessKey",
        PossibleTypes = new [] { typeof(string) })]
        string SecretAccessKey { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"associations",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.ICredentialSecurityAssociations) })]
        System.Collections.Generic.List<Commvault.Powershell.Models.ICredentialSecurityAssociations> SecurityAssociations { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? UserGroupId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string UserGroupName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? UserId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string UserName { get; set; }

    }
    /// Applicable only for credentials with Cloud Account, Vendor Type as Amazon Web Services and authType is Access and Secret
    /// Keys
    internal partial interface IAmazonCredentialContentInternal

    {
        /// <summary>
        /// Access Key ID of Credential. If updated the updated access key ID is considered.
        /// </summary>
        string AccessKeyId { get; set; }
        /// <summary>Updated description of Credential</summary>
        string Description { get; set; }
        /// <summary>Updated name of credential</summary>
        string NewName { get; set; }

        Commvault.Powershell.Models.IIdName OwnerUser { get; set; }

        Commvault.Powershell.Models.IIdName OwnerUserGroup { get; set; }
        /// <summary>Updated Secret Access Key of Credential and must be in base64 encoded format.</summary>
        string SecretAccessKey { get; set; }
        /// <summary>Update Security association of a list of users and user groups</summary>
        Commvault.Powershell.Models.IUpdateCredentialSecurity Security { get; set; }

        System.Collections.Generic.List<Commvault.Powershell.Models.ICredentialSecurityAssociations> SecurityAssociations { get; set; }
        /// <summary>Owner of a credential can be a user or user group</summary>
        Commvault.Powershell.Models.ICredentialOwner SecurityOwner { get; set; }

        long? UserGroupId { get; set; }

        string UserGroupName { get; set; }

        long? UserId { get; set; }

        string UserName { get; set; }

    }
}