// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Recovery target info</summary>
    public partial class RecoveryTargetDetails
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Commvault.Powershell.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Commvault.Powershell.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Commvault.Powershell.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Commvault.Powershell.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Commvault.Powershell.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Commvault.Powershell.Runtime.Json.JsonNode"/> into an instance of Commvault.Powershell.Models.IRecoveryTargetDetails.
        /// </summary>
        /// <param name="node">a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of Commvault.Powershell.Models.IRecoveryTargetDetails.</returns>
        public static Commvault.Powershell.Models.IRecoveryTargetDetails FromJson(Commvault.Powershell.Runtime.Json.JsonNode node)
        {
            return node is Commvault.Powershell.Runtime.Json.JsonObject json ? new RecoveryTargetDetails(json) : null;
        }

        /// <summary>
        /// Deserializes a Commvault.Powershell.Runtime.Json.JsonObject into a new instance of <see cref="RecoveryTargetDetails" />.
        /// </summary>
        /// <param name="json">A Commvault.Powershell.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal RecoveryTargetDetails(Commvault.Powershell.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_entity = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("entity"), out var __jsonEntity) ? Commvault.Powershell.Models.GetRecoveryTargetListSummary.FromJson(__jsonEntity) : Entity;}
            {_accessNode = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("accessNode"), out var __jsonAccessNode) ? Commvault.Powershell.Models.IdNameType.FromJson(__jsonAccessNode) : AccessNode;}
            {_vMDisplayName = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("vmDisplayName"), out var __jsonVMDisplayName) ? Commvault.Powershell.Models.VMDisplayName.FromJson(__jsonVMDisplayName) : VMDisplayName;}
            {_securityOptions = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("securityOptions"), out var __jsonSecurityOptions) ? Commvault.Powershell.Models.SecurityOptions.FromJson(__jsonSecurityOptions) : SecurityOptions;}
            {_destinationOptions = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("destinationOptions"), out var __jsonDestinationOptions) ? Commvault.Powershell.Models.DestinationOptions.FromJson(__jsonDestinationOptions) : DestinationOptions;}
            {_networkOptions = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("networkOptions"), out var __jsonNetworkOptions) ? Commvault.Powershell.Models.NetworkOptions.FromJson(__jsonNetworkOptions) : NetworkOptions;}
            {_provisioningOptions = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("provisioningOptions"), out var __jsonProvisioningOptions) ? Commvault.Powershell.Models.ProvisioningOptions.FromJson(__jsonProvisioningOptions) : ProvisioningOptions;}
            {_cloudDestinationOptions = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("cloudDestinationOptions"), out var __jsonCloudDestinationOptions) ? Commvault.Powershell.Models.CloudDestinationOptions.FromJson(__jsonCloudDestinationOptions) : CloudDestinationOptions;}
            {_zone = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("zone"), out var __jsonZone) ? Commvault.Powershell.Models.Zone.FromJson(__jsonZone) : Zone;}
            {_associatedClientGroup = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("associatedClientGroup"), out var __jsonAssociatedClientGroup) ? Commvault.Powershell.Models.IdName.FromJson(__jsonAssociatedClientGroup) : AssociatedClientGroup;}
            {_liveMountOptions = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("liveMountOptions"), out var __jsonLiveMountOptions) ? Commvault.Powershell.Models.LiveMountOptions.FromJson(__jsonLiveMountOptions) : LiveMountOptions;}
            {_virtualLabOptions = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("virtualLabOptions"), out var __jsonVirtualLabOptions) ? Commvault.Powershell.Models.VirtualLabOptions.FromJson(__jsonVirtualLabOptions) : VirtualLabOptions;}
            {_vMStoragePolicyName = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonString>("vmStoragePolicyName"), out var __jsonVMStoragePolicyName) ? (string)__jsonVMStoragePolicyName : (string)VMStoragePolicyName;}
            {_isoInfo = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonArray>("isoInfo"), out var __jsonIsoInfo) ? If( __jsonIsoInfo as Commvault.Powershell.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Commvault.Powershell.Models.IIsoInfo[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Commvault.Powershell.Models.IIsoInfo) (Commvault.Powershell.Models.IsoInfo.FromJson(__u) )) ))() : null : IsoInfo;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="RecoveryTargetDetails" /> into a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Commvault.Powershell.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Commvault.Powershell.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="RecoveryTargetDetails" /> as a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" />.
        /// </returns>
        public Commvault.Powershell.Runtime.Json.JsonNode ToJson(Commvault.Powershell.Runtime.Json.JsonObject container, Commvault.Powershell.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Commvault.Powershell.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._entity ? (Commvault.Powershell.Runtime.Json.JsonNode) this._entity.ToJson(null,serializationMode) : null, "entity" ,container.Add );
            AddIf( null != this._accessNode ? (Commvault.Powershell.Runtime.Json.JsonNode) this._accessNode.ToJson(null,serializationMode) : null, "accessNode" ,container.Add );
            AddIf( null != this._vMDisplayName ? (Commvault.Powershell.Runtime.Json.JsonNode) this._vMDisplayName.ToJson(null,serializationMode) : null, "vmDisplayName" ,container.Add );
            AddIf( null != this._securityOptions ? (Commvault.Powershell.Runtime.Json.JsonNode) this._securityOptions.ToJson(null,serializationMode) : null, "securityOptions" ,container.Add );
            AddIf( null != this._destinationOptions ? (Commvault.Powershell.Runtime.Json.JsonNode) this._destinationOptions.ToJson(null,serializationMode) : null, "destinationOptions" ,container.Add );
            AddIf( null != this._networkOptions ? (Commvault.Powershell.Runtime.Json.JsonNode) this._networkOptions.ToJson(null,serializationMode) : null, "networkOptions" ,container.Add );
            AddIf( null != this._provisioningOptions ? (Commvault.Powershell.Runtime.Json.JsonNode) this._provisioningOptions.ToJson(null,serializationMode) : null, "provisioningOptions" ,container.Add );
            AddIf( null != this._cloudDestinationOptions ? (Commvault.Powershell.Runtime.Json.JsonNode) this._cloudDestinationOptions.ToJson(null,serializationMode) : null, "cloudDestinationOptions" ,container.Add );
            AddIf( null != this._zone ? (Commvault.Powershell.Runtime.Json.JsonNode) this._zone.ToJson(null,serializationMode) : null, "zone" ,container.Add );
            AddIf( null != this._associatedClientGroup ? (Commvault.Powershell.Runtime.Json.JsonNode) this._associatedClientGroup.ToJson(null,serializationMode) : null, "associatedClientGroup" ,container.Add );
            AddIf( null != this._liveMountOptions ? (Commvault.Powershell.Runtime.Json.JsonNode) this._liveMountOptions.ToJson(null,serializationMode) : null, "liveMountOptions" ,container.Add );
            AddIf( null != this._virtualLabOptions ? (Commvault.Powershell.Runtime.Json.JsonNode) this._virtualLabOptions.ToJson(null,serializationMode) : null, "virtualLabOptions" ,container.Add );
            AddIf( null != (((object)this._vMStoragePolicyName)?.ToString()) ? (Commvault.Powershell.Runtime.Json.JsonNode) new Commvault.Powershell.Runtime.Json.JsonString(this._vMStoragePolicyName.ToString()) : null, "vmStoragePolicyName" ,container.Add );
            if (null != this._isoInfo)
            {
                var __w = new Commvault.Powershell.Runtime.Json.XNodeArray();
                foreach( var __x in this._isoInfo )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("isoInfo",__w);
            }
            AfterToJson(ref container);
            return container;
        }
    }
}