// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    /// <summary>Create a hypervisor group with Oracle VM as the destination vendor</summary>
    [System.ComponentModel.TypeConverter(typeof(CreateHypervisorGroupOracleVMTypeConverter))]
    public partial class CreateHypervisorGroupOracleVM
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.CreateHypervisorGroupOracleVM"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CreateHypervisorGroupOracleVM(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("HypervisorType"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).HypervisorType = (string) content.GetValueForProperty("HypervisorType",((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).HypervisorType, global::System.Convert.ToString);
            }
            if (content.Contains("OracleVMManager"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).OracleVMManager = (string) content.GetValueForProperty("OracleVMManager",((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).OracleVMManager, global::System.Convert.ToString);
            }
            if (content.Contains("UserName"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).UserName = (string) content.GetValueForProperty("UserName",((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).UserName, global::System.Convert.ToString);
            }
            if (content.Contains("Password"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).Password = (string) content.GetValueForProperty("Password",((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).Password, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsId"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).CredentialsId = (long?) content.GetValueForProperty("CredentialsId",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).CredentialsId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CredentialsName"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).CredentialsName = (string) content.GetValueForProperty("CredentialsName",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).CredentialsName, global::System.Convert.ToString);
            }
            if (content.Contains("EtcdProtectionPlan"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).EtcdProtectionPlan = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("EtcdProtectionPlan",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).EtcdProtectionPlan, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("EtcdProtectionEnabled"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).EtcdProtectionEnabled = (bool?) content.GetValueForProperty("EtcdProtectionEnabled",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).EtcdProtectionEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PlanEntityId"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanEntityId = (long?) content.GetValueForProperty("PlanEntityId",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanEntityId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("PlanEntityName"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanEntityName = (string) content.GetValueForProperty("PlanEntityName",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanEntityName, global::System.Convert.ToString);
            }
            if (content.Contains("PlanId"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanId = (long?) content.GetValueForProperty("PlanId",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("PlanName"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanName = (string) content.GetValueForProperty("PlanName",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanName, global::System.Convert.ToString);
            }
            if (content.Contains("Credentials"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).Credentials = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("Credentials",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).Credentials, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("EtcdProtection"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).EtcdProtection = (Commvault.Powershell.Models.IEtcdProtectionItem) content.GetValueForProperty("EtcdProtection",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).EtcdProtection, Commvault.Powershell.Models.EtcdProtectionItemTypeConverter.ConvertFrom);
            }
            if (content.Contains("PlanEntity"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanEntity = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("PlanEntity",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanEntity, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("Name"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).Name = (string) content.GetValueForProperty("Name",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("SkipCredentialValidation"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).SkipCredentialValidation = (bool?) content.GetValueForProperty("SkipCredentialValidation",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).SkipCredentialValidation, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AccessNodes"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).AccessNodes = (System.Collections.Generic.List<Commvault.Powershell.Models.IAccessNodeModel>) content.GetValueForProperty("AccessNodes",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).AccessNodes, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IAccessNodeModel>(__y, Commvault.Powershell.Models.AccessNodeModelTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.CreateHypervisorGroupOracleVM"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CreateHypervisorGroupOracleVM(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("HypervisorType"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).HypervisorType = (string) content.GetValueForProperty("HypervisorType",((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).HypervisorType, global::System.Convert.ToString);
            }
            if (content.Contains("OracleVMManager"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).OracleVMManager = (string) content.GetValueForProperty("OracleVMManager",((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).OracleVMManager, global::System.Convert.ToString);
            }
            if (content.Contains("UserName"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).UserName = (string) content.GetValueForProperty("UserName",((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).UserName, global::System.Convert.ToString);
            }
            if (content.Contains("Password"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).Password = (string) content.GetValueForProperty("Password",((Commvault.Powershell.Models.ICreateHypervisorGroupOracleVMInternal)this).Password, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsId"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).CredentialsId = (long?) content.GetValueForProperty("CredentialsId",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).CredentialsId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CredentialsName"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).CredentialsName = (string) content.GetValueForProperty("CredentialsName",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).CredentialsName, global::System.Convert.ToString);
            }
            if (content.Contains("EtcdProtectionPlan"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).EtcdProtectionPlan = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("EtcdProtectionPlan",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).EtcdProtectionPlan, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("EtcdProtectionEnabled"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).EtcdProtectionEnabled = (bool?) content.GetValueForProperty("EtcdProtectionEnabled",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).EtcdProtectionEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PlanEntityId"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanEntityId = (long?) content.GetValueForProperty("PlanEntityId",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanEntityId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("PlanEntityName"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanEntityName = (string) content.GetValueForProperty("PlanEntityName",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanEntityName, global::System.Convert.ToString);
            }
            if (content.Contains("PlanId"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanId = (long?) content.GetValueForProperty("PlanId",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("PlanName"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanName = (string) content.GetValueForProperty("PlanName",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanName, global::System.Convert.ToString);
            }
            if (content.Contains("Credentials"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).Credentials = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("Credentials",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).Credentials, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("EtcdProtection"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).EtcdProtection = (Commvault.Powershell.Models.IEtcdProtectionItem) content.GetValueForProperty("EtcdProtection",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).EtcdProtection, Commvault.Powershell.Models.EtcdProtectionItemTypeConverter.ConvertFrom);
            }
            if (content.Contains("PlanEntity"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanEntity = (Commvault.Powershell.Models.IIdName) content.GetValueForProperty("PlanEntity",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).PlanEntity, Commvault.Powershell.Models.IdNameTypeConverter.ConvertFrom);
            }
            if (content.Contains("Name"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).Name = (string) content.GetValueForProperty("Name",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("SkipCredentialValidation"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).SkipCredentialValidation = (bool?) content.GetValueForProperty("SkipCredentialValidation",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).SkipCredentialValidation, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AccessNodes"))
            {
                ((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).AccessNodes = (System.Collections.Generic.List<Commvault.Powershell.Models.IAccessNodeModel>) content.GetValueForProperty("AccessNodes",((Commvault.Powershell.Models.ICreateHypervisorGroupReqInternal)this).AccessNodes, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IAccessNodeModel>(__y, Commvault.Powershell.Models.AccessNodeModelTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.CreateHypervisorGroupOracleVM"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Commvault.Powershell.Models.ICreateHypervisorGroupOracleVM" />.
        /// </returns>
        public static Commvault.Powershell.Models.ICreateHypervisorGroupOracleVM DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CreateHypervisorGroupOracleVM(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.CreateHypervisorGroupOracleVM"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Commvault.Powershell.Models.ICreateHypervisorGroupOracleVM" />.
        /// </returns>
        public static Commvault.Powershell.Models.ICreateHypervisorGroupOracleVM DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CreateHypervisorGroupOracleVM(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CreateHypervisorGroupOracleVM" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="CreateHypervisorGroupOracleVM" /> model class.</returns>
        public static Commvault.Powershell.Models.ICreateHypervisorGroupOracleVM FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Create a hypervisor group with Oracle VM as the destination vendor
    [System.ComponentModel.TypeConverter(typeof(CreateHypervisorGroupOracleVMTypeConverter))]
    public partial interface ICreateHypervisorGroupOracleVM

    {

    }
}