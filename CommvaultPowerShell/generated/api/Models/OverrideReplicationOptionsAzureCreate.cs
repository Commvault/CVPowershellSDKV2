// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>
    /// Replication options for Azure. Provide both of the name and the guid of the source VM and provide the id and the name
    /// of the security group
    /// </summary>
    public partial class OverrideReplicationOptionsAzureCreate :
        Commvault.Powershell.Models.IOverrideReplicationOptionsAzureCreate,
        Commvault.Powershell.Models.IOverrideReplicationOptionsAzureCreateInternal
    {

        /// <summary>Internal Acessors for SecurityGroup</summary>
        Commvault.Powershell.Models.ISecurityGroup Commvault.Powershell.Models.IOverrideReplicationOptionsAzureCreateInternal.SecurityGroup { get => (this._securityGroup = this._securityGroup ?? new Commvault.Powershell.Models.SecurityGroup()); set { {_securityGroup = value;} } }

        /// <summary>Internal Acessors for SourceVM</summary>
        Commvault.Powershell.Models.INameGuid Commvault.Powershell.Models.IOverrideReplicationOptionsAzureCreateInternal.SourceVM { get => (this._sourceVM = this._sourceVM ?? new Commvault.Powershell.Models.NameGuid()); set { {_sourceVM = value;} } }

        /// <summary>Backing field for <see cref="CreatePublicIP" /> property.</summary>
        private bool? _createPublicIP;

        /// <summary>Creates a public IP on the network</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? CreatePublicIP { get => this._createPublicIP; set => this._createPublicIP = value; }

        /// <summary>Backing field for <see cref="DiskTypeId" /> property.</summary>
        private string _diskTypeId;

        /// <summary>
        /// The id of the disk type to be used for the destination VM. Default value is Auto
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string DiskTypeId { get => this._diskTypeId; set => this._diskTypeId = value; }

        /// <summary>Backing field for <see cref="PrivateIPaddress" /> property.</summary>
        private string _privateIPaddress;

        /// <summary>Private IP address of the network</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string PrivateIPaddress { get => this._privateIPaddress; set => this._privateIPaddress = value; }

        /// <summary>Backing field for <see cref="PublicIPaddress" /> property.</summary>
        private string _publicIPaddress;

        /// <summary>Public IP address of the network</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string PublicIPaddress { get => this._publicIPaddress; set => this._publicIPaddress = value; }

        /// <summary>Backing field for <see cref="PublicIPaddressId" /> property.</summary>
        private string _publicIPaddressId;

        /// <summary>Public IP address id of the network</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string PublicIPaddressId { get => this._publicIPaddressId; set => this._publicIPaddressId = value; }

        /// <summary>Backing field for <see cref="Region" /> property.</summary>
        private string _region;

        /// <summary>The name of the region where the destination VM will reside</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Region { get => this._region; set => this._region = value; }

        /// <summary>Backing field for <see cref="ResourceGroup" /> property.</summary>
        private string _resourceGroup;

        /// <summary>The resource group to be used for the destination VM</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string ResourceGroup { get => this._resourceGroup; set => this._resourceGroup = value; }

        /// <summary>Backing field for <see cref="RestoreAsManagedVM" /> property.</summary>
        private bool? _restoreAsManagedVM;

        /// <summary>Creates the destination as a managed VM</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? RestoreAsManagedVM { get => this._restoreAsManagedVM; set => this._restoreAsManagedVM = value; }

        /// <summary>Backing field for <see cref="SecurityGroup" /> property.</summary>
        private Commvault.Powershell.Models.ISecurityGroup _securityGroup;

        /// <summary>The id and the name of the security group</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.ISecurityGroup SecurityGroup { get => (this._securityGroup = this._securityGroup ?? new Commvault.Powershell.Models.SecurityGroup()); set => this._securityGroup = value; }

        /// <summary>Security group id</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string SecurityGroupId { get => ((Commvault.Powershell.Models.ISecurityGroupInternal)SecurityGroup).Id; set => ((Commvault.Powershell.Models.ISecurityGroupInternal)SecurityGroup).Id = value ?? null; }

        /// <summary>security group name</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string SecurityGroupName { get => ((Commvault.Powershell.Models.ISecurityGroupInternal)SecurityGroup).Name; set => ((Commvault.Powershell.Models.ISecurityGroupInternal)SecurityGroup).Name = value ?? null; }

        /// <summary>Backing field for <see cref="SourceVM" /> property.</summary>
        private Commvault.Powershell.Models.INameGuid _sourceVM;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.INameGuid SourceVM { get => (this._sourceVM = this._sourceVM ?? new Commvault.Powershell.Models.NameGuid()); set => this._sourceVM = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string SourceVMGuid { get => ((Commvault.Powershell.Models.INameGuidInternal)SourceVM).Guid; set => ((Commvault.Powershell.Models.INameGuidInternal)SourceVM).Guid = value ?? null; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string SourceVMName { get => ((Commvault.Powershell.Models.INameGuidInternal)SourceVM).Name; set => ((Commvault.Powershell.Models.INameGuidInternal)SourceVM).Name = value ?? null; }

        /// <summary>Backing field for <see cref="StorageAccount" /> property.</summary>
        private string _storageAccount;

        /// <summary>The name of the storage account to be used on the destination VM</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string StorageAccount { get => this._storageAccount; set => this._storageAccount = value; }

        /// <summary>Backing field for <see cref="VMDisplayName" /> property.</summary>
        private string _vMDisplayName;

        /// <summary>Display name of destination VM</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string VMDisplayName { get => this._vMDisplayName; set => this._vMDisplayName = value; }

        /// <summary>Backing field for <see cref="VMSizeId" /> property.</summary>
        private string _vMSizeId;

        /// <summary>
        /// The id of the vm size to be applied to the destination VM. Default value is Auto
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string VMSizeId { get => this._vMSizeId; set => this._vMSizeId = value; }

        /// <summary>Backing field for <see cref="VirtualNetwork" /> property.</summary>
        private System.Collections.Generic.List<Commvault.Powershell.Models.INetworkSubnet> _virtualNetwork;

        /// <summary>The network to be used on the destination VM. Default value is Auto</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Commvault.Powershell.Models.INetworkSubnet> VirtualNetwork { get => this._virtualNetwork; set => this._virtualNetwork = value; }

        /// <summary>Creates an new <see cref="OverrideReplicationOptionsAzureCreate" /> instance.</summary>
        public OverrideReplicationOptionsAzureCreate()
        {

        }
    }
    /// Replication options for Azure. Provide both of the name and the guid of the source VM and provide the id and the name
    /// of the security group
    public partial interface IOverrideReplicationOptionsAzureCreate :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Creates a public IP on the network</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Creates a public IP on the network",
        SerializedName = @"createPublicIP",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CreatePublicIP { get; set; }
        /// <summary>
        /// The id of the disk type to be used for the destination VM. Default value is Auto
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The id of the disk type to be used for the destination VM. Default value is Auto",
        SerializedName = @"diskTypeId",
        PossibleTypes = new [] { typeof(string) })]
        string DiskTypeId { get; set; }
        /// <summary>Private IP address of the network</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Private IP address of the network",
        SerializedName = @"privateIPaddress",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateIPaddress { get; set; }
        /// <summary>Public IP address of the network</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Public IP address of the network",
        SerializedName = @"publicIPaddress",
        PossibleTypes = new [] { typeof(string) })]
        string PublicIPaddress { get; set; }
        /// <summary>Public IP address id of the network</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Public IP address id of the network",
        SerializedName = @"publicIPaddressID",
        PossibleTypes = new [] { typeof(string) })]
        string PublicIPaddressId { get; set; }
        /// <summary>The name of the region where the destination VM will reside</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the region where the destination VM will reside",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string Region { get; set; }
        /// <summary>The resource group to be used for the destination VM</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The resource group to be used for the destination VM",
        SerializedName = @"resourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroup { get; set; }
        /// <summary>Creates the destination as a managed VM</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Creates the destination as a managed VM",
        SerializedName = @"restoreAsManagedVM",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RestoreAsManagedVM { get; set; }
        /// <summary>Security group id</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Security group id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityGroupId { get; set; }
        /// <summary>security group name</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"security group name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityGroupName { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"GUID",
        PossibleTypes = new [] { typeof(string) })]
        string SourceVMGuid { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SourceVMName { get; set; }
        /// <summary>The name of the storage account to be used on the destination VM</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the storage account to be used on the destination VM",
        SerializedName = @"storageAccount",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccount { get; set; }
        /// <summary>Display name of destination VM</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Display name of destination VM",
        SerializedName = @"vmDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string VMDisplayName { get; set; }
        /// <summary>
        /// The id of the vm size to be applied to the destination VM. Default value is Auto
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The id of the vm size to be applied to the destination VM. Default value is Auto",
        SerializedName = @"vmSizeId",
        PossibleTypes = new [] { typeof(string) })]
        string VMSizeId { get; set; }
        /// <summary>The network to be used on the destination VM. Default value is Auto</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The network to be used on the destination VM. Default value is Auto",
        SerializedName = @"virtualNetwork",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.INetworkSubnet) })]
        System.Collections.Generic.List<Commvault.Powershell.Models.INetworkSubnet> VirtualNetwork { get; set; }

    }
    /// Replication options for Azure. Provide both of the name and the guid of the source VM and provide the id and the name
    /// of the security group
    internal partial interface IOverrideReplicationOptionsAzureCreateInternal

    {
        /// <summary>Creates a public IP on the network</summary>
        bool? CreatePublicIP { get; set; }
        /// <summary>
        /// The id of the disk type to be used for the destination VM. Default value is Auto
        /// </summary>
        string DiskTypeId { get; set; }
        /// <summary>Private IP address of the network</summary>
        string PrivateIPaddress { get; set; }
        /// <summary>Public IP address of the network</summary>
        string PublicIPaddress { get; set; }
        /// <summary>Public IP address id of the network</summary>
        string PublicIPaddressId { get; set; }
        /// <summary>The name of the region where the destination VM will reside</summary>
        string Region { get; set; }
        /// <summary>The resource group to be used for the destination VM</summary>
        string ResourceGroup { get; set; }
        /// <summary>Creates the destination as a managed VM</summary>
        bool? RestoreAsManagedVM { get; set; }
        /// <summary>The id and the name of the security group</summary>
        Commvault.Powershell.Models.ISecurityGroup SecurityGroup { get; set; }
        /// <summary>Security group id</summary>
        string SecurityGroupId { get; set; }
        /// <summary>security group name</summary>
        string SecurityGroupName { get; set; }

        Commvault.Powershell.Models.INameGuid SourceVM { get; set; }

        string SourceVMGuid { get; set; }

        string SourceVMName { get; set; }
        /// <summary>The name of the storage account to be used on the destination VM</summary>
        string StorageAccount { get; set; }
        /// <summary>Display name of destination VM</summary>
        string VMDisplayName { get; set; }
        /// <summary>
        /// The id of the vm size to be applied to the destination VM. Default value is Auto
        /// </summary>
        string VMSizeId { get; set; }
        /// <summary>The network to be used on the destination VM. Default value is Auto</summary>
        System.Collections.Generic.List<Commvault.Powershell.Models.INetworkSubnet> VirtualNetwork { get; set; }

    }
}