// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>MigrationMonitor</summary>
    public partial class MigrationMonitor :
        Commvault.Powershell.Models.IMigrationMonitor,
        Commvault.Powershell.Models.IMigrationMonitorInternal
    {

        /// <summary>Backing field for <see cref="DestinationPath" /> property.</summary>
        private string _destinationPath;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string DestinationPath { get => this._destinationPath; set => this._destinationPath = value; }

        /// <summary>Backing field for <see cref="LastSyncTime" /> property.</summary>
        private long? _lastSyncTime;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? LastSyncTime { get => this._lastSyncTime; set => this._lastSyncTime = value; }

        /// <summary>Backing field for <see cref="MigrationSize" /> property.</summary>
        private float? _migrationSize;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public float? MigrationSize { get => this._migrationSize; set => this._migrationSize = value; }

        /// <summary>Backing field for <see cref="NumOfFiles" /> property.</summary>
        private long? _numOfFiles;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? NumOfFiles { get => this._numOfFiles; set => this._numOfFiles = value; }

        /// <summary>Backing field for <see cref="ReplicationId" /> property.</summary>
        private long? _replicationId;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? ReplicationId { get => this._replicationId; set => this._replicationId = value; }

        /// <summary>Backing field for <see cref="SourcePath" /> property.</summary>
        private string _sourcePath;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string SourcePath { get => this._sourcePath; set => this._sourcePath = value; }

        /// <summary>Backing field for <see cref="SyncStatus" /> property.</summary>
        private string _syncStatus;

        /// <summary>ReplicationStatus</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string SyncStatus { get => this._syncStatus; set => this._syncStatus = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="MigrationMonitor" /> instance.</summary>
        public MigrationMonitor()
        {

        }
    }
    /// MigrationMonitor
    public partial interface IMigrationMonitor :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"destinationPath",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationPath { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"lastSyncTime",
        PossibleTypes = new [] { typeof(long) })]
        long? LastSyncTime { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"migrationSize",
        PossibleTypes = new [] { typeof(float) })]
        float? MigrationSize { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"numOfFiles",
        PossibleTypes = new [] { typeof(long) })]
        long? NumOfFiles { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"replicationId",
        PossibleTypes = new [] { typeof(long) })]
        long? ReplicationId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"sourcePath",
        PossibleTypes = new [] { typeof(string) })]
        string SourcePath { get; set; }
        /// <summary>ReplicationStatus</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ReplicationStatus",
        SerializedName = @"syncStatus",
        PossibleTypes = new [] { typeof(string) })]
        string SyncStatus { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// MigrationMonitor
    internal partial interface IMigrationMonitorInternal

    {
        string DestinationPath { get; set; }

        long? LastSyncTime { get; set; }

        float? MigrationSize { get; set; }

        long? NumOfFiles { get; set; }

        long? ReplicationId { get; set; }

        string SourcePath { get; set; }
        /// <summary>ReplicationStatus</summary>
        string SyncStatus { get; set; }

        string Type { get; set; }

    }
}