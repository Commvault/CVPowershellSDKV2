// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(CreateServerPlanBackupContentTypeConverter))]
    public partial class CreateServerPlanBackupContent
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.CreateServerPlanBackupContent"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CreateServerPlanBackupContent(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("BackupContent"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContent = (Commvault.Powershell.Models.IPlanContent) content.GetValueForProperty("BackupContent",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContent, Commvault.Powershell.Models.PlanContentTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupContentWindowsNumberOfDataReaders"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsNumberOfDataReaders = (Commvault.Powershell.Models.IPlanContentDataReaders) content.GetValueForProperty("BackupContentWindowsNumberOfDataReaders",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsNumberOfDataReaders, Commvault.Powershell.Models.PlanContentDataReadersTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupContentUnixNumberOfDataReaders"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixNumberOfDataReaders = (Commvault.Powershell.Models.IPlanContentDataReaders) content.GetValueForProperty("BackupContentUnixNumberOfDataReaders",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixNumberOfDataReaders, Commvault.Powershell.Models.PlanContentDataReadersTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupContentMacNumberOfDataReaders"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacNumberOfDataReaders = (Commvault.Powershell.Models.IPlanContentDataReaders) content.GetValueForProperty("BackupContentMacNumberOfDataReaders",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacNumberOfDataReaders, Commvault.Powershell.Models.PlanContentDataReadersTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupContentWindowsIncludedPaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsIncludedPaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentWindowsIncludedPaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsIncludedPaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentWindowsExcludedPaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsExcludedPaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentWindowsExcludedPaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsExcludedPaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentWindowsFilterToExcludePaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsFilterToExcludePaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentWindowsFilterToExcludePaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsFilterToExcludePaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentBackupSystemState"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentBackupSystemState = (bool?) content.GetValueForProperty("BackupContentBackupSystemState",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentBackupSystemState, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BackupContentBackupSystemStateOnlyWithFullBackup"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentBackupSystemStateOnlyWithFullBackup = (bool?) content.GetValueForProperty("BackupContentBackupSystemStateOnlyWithFullBackup",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentBackupSystemStateOnlyWithFullBackup, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BackupContentUseVssForSystemState"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUseVssForSystemState = (bool?) content.GetValueForProperty("BackupContentUseVssForSystemState",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUseVssForSystemState, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BackupContentMacIncludedPaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacIncludedPaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentMacIncludedPaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacIncludedPaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentMacExcludedPaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacExcludedPaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentMacExcludedPaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacExcludedPaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentMacFilterToExcludePaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacFilterToExcludePaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentMacFilterToExcludePaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacFilterToExcludePaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentUnixIncludedPaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixIncludedPaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentUnixIncludedPaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixIncludedPaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentUnixExcludedPaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixExcludedPaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentUnixExcludedPaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixExcludedPaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentUnixFilterToExcludePaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixFilterToExcludePaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentUnixFilterToExcludePaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixFilterToExcludePaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentForceUpdateProperties"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentForceUpdateProperties = (bool?) content.GetValueForProperty("BackupContentForceUpdateProperties",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentForceUpdateProperties, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowNumberOfDataReaderUseOptimal"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).WindowNumberOfDataReaderUseOptimal = (bool?) content.GetValueForProperty("WindowNumberOfDataReaderUseOptimal",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).WindowNumberOfDataReaderUseOptimal, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowNumberOfDataReaderCount"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).WindowNumberOfDataReaderCount = (long?) content.GetValueForProperty("WindowNumberOfDataReaderCount",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).WindowNumberOfDataReaderCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("UnixNumberOfDataReaderUseOptimal"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).UnixNumberOfDataReaderUseOptimal = (bool?) content.GetValueForProperty("UnixNumberOfDataReaderUseOptimal",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).UnixNumberOfDataReaderUseOptimal, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UnixNumberOfDataReaderCount"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).UnixNumberOfDataReaderCount = (long?) content.GetValueForProperty("UnixNumberOfDataReaderCount",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).UnixNumberOfDataReaderCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("MacNumberOfDataReaderUseOptimal"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).MacNumberOfDataReaderUseOptimal = (bool?) content.GetValueForProperty("MacNumberOfDataReaderUseOptimal",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).MacNumberOfDataReaderUseOptimal, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MacNumberOfDataReaderCount"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).MacNumberOfDataReaderCount = (long?) content.GetValueForProperty("MacNumberOfDataReaderCount",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).MacNumberOfDataReaderCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.CreateServerPlanBackupContent"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CreateServerPlanBackupContent(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("BackupContent"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContent = (Commvault.Powershell.Models.IPlanContent) content.GetValueForProperty("BackupContent",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContent, Commvault.Powershell.Models.PlanContentTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupContentWindowsNumberOfDataReaders"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsNumberOfDataReaders = (Commvault.Powershell.Models.IPlanContentDataReaders) content.GetValueForProperty("BackupContentWindowsNumberOfDataReaders",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsNumberOfDataReaders, Commvault.Powershell.Models.PlanContentDataReadersTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupContentUnixNumberOfDataReaders"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixNumberOfDataReaders = (Commvault.Powershell.Models.IPlanContentDataReaders) content.GetValueForProperty("BackupContentUnixNumberOfDataReaders",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixNumberOfDataReaders, Commvault.Powershell.Models.PlanContentDataReadersTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupContentMacNumberOfDataReaders"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacNumberOfDataReaders = (Commvault.Powershell.Models.IPlanContentDataReaders) content.GetValueForProperty("BackupContentMacNumberOfDataReaders",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacNumberOfDataReaders, Commvault.Powershell.Models.PlanContentDataReadersTypeConverter.ConvertFrom);
            }
            if (content.Contains("BackupContentWindowsIncludedPaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsIncludedPaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentWindowsIncludedPaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsIncludedPaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentWindowsExcludedPaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsExcludedPaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentWindowsExcludedPaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsExcludedPaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentWindowsFilterToExcludePaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsFilterToExcludePaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentWindowsFilterToExcludePaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentWindowsFilterToExcludePaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentBackupSystemState"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentBackupSystemState = (bool?) content.GetValueForProperty("BackupContentBackupSystemState",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentBackupSystemState, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BackupContentBackupSystemStateOnlyWithFullBackup"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentBackupSystemStateOnlyWithFullBackup = (bool?) content.GetValueForProperty("BackupContentBackupSystemStateOnlyWithFullBackup",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentBackupSystemStateOnlyWithFullBackup, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BackupContentUseVssForSystemState"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUseVssForSystemState = (bool?) content.GetValueForProperty("BackupContentUseVssForSystemState",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUseVssForSystemState, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BackupContentMacIncludedPaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacIncludedPaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentMacIncludedPaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacIncludedPaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentMacExcludedPaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacExcludedPaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentMacExcludedPaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacExcludedPaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentMacFilterToExcludePaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacFilterToExcludePaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentMacFilterToExcludePaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentMacFilterToExcludePaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentUnixIncludedPaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixIncludedPaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentUnixIncludedPaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixIncludedPaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentUnixExcludedPaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixExcludedPaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentUnixExcludedPaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixExcludedPaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentUnixFilterToExcludePaths"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixFilterToExcludePaths = (System.Collections.Generic.List<string>) content.GetValueForProperty("BackupContentUnixFilterToExcludePaths",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentUnixFilterToExcludePaths, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BackupContentForceUpdateProperties"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentForceUpdateProperties = (bool?) content.GetValueForProperty("BackupContentForceUpdateProperties",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).BackupContentForceUpdateProperties, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowNumberOfDataReaderUseOptimal"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).WindowNumberOfDataReaderUseOptimal = (bool?) content.GetValueForProperty("WindowNumberOfDataReaderUseOptimal",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).WindowNumberOfDataReaderUseOptimal, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowNumberOfDataReaderCount"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).WindowNumberOfDataReaderCount = (long?) content.GetValueForProperty("WindowNumberOfDataReaderCount",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).WindowNumberOfDataReaderCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("UnixNumberOfDataReaderUseOptimal"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).UnixNumberOfDataReaderUseOptimal = (bool?) content.GetValueForProperty("UnixNumberOfDataReaderUseOptimal",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).UnixNumberOfDataReaderUseOptimal, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UnixNumberOfDataReaderCount"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).UnixNumberOfDataReaderCount = (long?) content.GetValueForProperty("UnixNumberOfDataReaderCount",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).UnixNumberOfDataReaderCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("MacNumberOfDataReaderUseOptimal"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).MacNumberOfDataReaderUseOptimal = (bool?) content.GetValueForProperty("MacNumberOfDataReaderUseOptimal",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).MacNumberOfDataReaderUseOptimal, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MacNumberOfDataReaderCount"))
            {
                ((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).MacNumberOfDataReaderCount = (long?) content.GetValueForProperty("MacNumberOfDataReaderCount",((Commvault.Powershell.Models.ICreateServerPlanBackupContentInternal)this).MacNumberOfDataReaderCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.CreateServerPlanBackupContent"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Commvault.Powershell.Models.ICreateServerPlanBackupContent" />.
        /// </returns>
        public static Commvault.Powershell.Models.ICreateServerPlanBackupContent DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CreateServerPlanBackupContent(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.CreateServerPlanBackupContent"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Commvault.Powershell.Models.ICreateServerPlanBackupContent" />.
        /// </returns>
        public static Commvault.Powershell.Models.ICreateServerPlanBackupContent DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CreateServerPlanBackupContent(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CreateServerPlanBackupContent" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="CreateServerPlanBackupContent" /> model class.</returns>
        public static Commvault.Powershell.Models.ICreateServerPlanBackupContent FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    [System.ComponentModel.TypeConverter(typeof(CreateServerPlanBackupContentTypeConverter))]
    public partial interface ICreateServerPlanBackupContent

    {

    }
}