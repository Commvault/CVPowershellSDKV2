// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.2, generator: @autorest/powershell@3.0.494)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>
    /// Can retain file versions for one of following three cases:<br>days<br>versions<br>custom versions (daily, weekly monthly)<br>If
    /// not defined then, 5 versions are considered the default setting.
    /// </summary>
    public partial class LaptopPlanRetentionFileVersions :
        Commvault.Powershell.Models.ILaptopPlanRetentionFileVersions,
        Commvault.Powershell.Models.ILaptopPlanRetentionFileVersionsInternal
    {

        /// <summary>Backing field for <see cref="DailyVersions" /> property.</summary>
        private long? _dailyVersions;

        /// <summary>Custom version rule: Retain daily versions for this many day(s)</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? DailyVersions { get => this._dailyVersions; set => this._dailyVersions = value; }

        /// <summary>Backing field for <see cref="Days" /> property.</summary>
        private long? _days;

        /// <summary>
        /// Retain files for this many days. Year(s) or month(s) need to be converted to day(s)
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? Days { get => this._days; set => this._days = value; }

        /// <summary>Backing field for <see cref="MonthlyVersions" /> property.</summary>
        private long? _monthlyVersions;

        /// <summary>Custom version rule: Retain monthly versions for this many month(s)</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? MonthlyVersions { get => this._monthlyVersions; set => this._monthlyVersions = value; }

        /// <summary>Backing field for <see cref="Versions" /> property.</summary>
        private long? _versions;

        /// <summary>
        /// Retain this many file versions. This is considered as default if no file retention rule is specified.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? Versions { get => this._versions; set => this._versions = value; }

        /// <summary>Backing field for <see cref="WeeklyVersions" /> property.</summary>
        private long? _weeklyVersions;

        /// <summary>Custom version rule: Retain weekly versions for this many week(s)</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? WeeklyVersions { get => this._weeklyVersions; set => this._weeklyVersions = value; }

        /// <summary>Creates an new <see cref="LaptopPlanRetentionFileVersions" /> instance.</summary>
        public LaptopPlanRetentionFileVersions()
        {

        }
    }
    /// Can retain file versions for one of following three cases:<br>days<br>versions<br>custom versions (daily, weekly monthly)<br>If
    /// not defined then, 5 versions are considered the default setting.
    public partial interface ILaptopPlanRetentionFileVersions :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Custom version rule: Retain daily versions for this many day(s)</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Custom version rule: Retain daily versions for this many day(s)",
        SerializedName = @"dailyVersions",
        PossibleTypes = new [] { typeof(long) })]
        long? DailyVersions { get; set; }
        /// <summary>
        /// Retain files for this many days. Year(s) or month(s) need to be converted to day(s)
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Retain files for this many days. Year(s) or month(s) need to be converted to day(s)",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(long) })]
        long? Days { get; set; }
        /// <summary>Custom version rule: Retain monthly versions for this many month(s)</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Custom version rule: Retain monthly versions for this many month(s)",
        SerializedName = @"monthlyVersions",
        PossibleTypes = new [] { typeof(long) })]
        long? MonthlyVersions { get; set; }
        /// <summary>
        /// Retain this many file versions. This is considered as default if no file retention rule is specified.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Retain this many file versions. This is considered as default if no file retention rule is specified.",
        SerializedName = @"versions",
        PossibleTypes = new [] { typeof(long) })]
        long? Versions { get; set; }
        /// <summary>Custom version rule: Retain weekly versions for this many week(s)</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Custom version rule: Retain weekly versions for this many week(s)",
        SerializedName = @"weeklyVersions",
        PossibleTypes = new [] { typeof(long) })]
        long? WeeklyVersions { get; set; }

    }
    /// Can retain file versions for one of following three cases:<br>days<br>versions<br>custom versions (daily, weekly monthly)<br>If
    /// not defined then, 5 versions are considered the default setting.
    internal partial interface ILaptopPlanRetentionFileVersionsInternal

    {
        /// <summary>Custom version rule: Retain daily versions for this many day(s)</summary>
        long? DailyVersions { get; set; }
        /// <summary>
        /// Retain files for this many days. Year(s) or month(s) need to be converted to day(s)
        /// </summary>
        long? Days { get; set; }
        /// <summary>Custom version rule: Retain monthly versions for this many month(s)</summary>
        long? MonthlyVersions { get; set; }
        /// <summary>
        /// Retain this many file versions. This is considered as default if no file retention rule is specified.
        /// </summary>
        long? Versions { get; set; }
        /// <summary>Custom version rule: Retain weekly versions for this many week(s)</summary>
        long? WeeklyVersions { get; set; }

    }
}