// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.2, generator: @autorest/powershell@3.0.494)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Copy configured for a replication group</summary>
    public partial class StorageCopy :
        Commvault.Powershell.Models.IStorageCopy,
        Commvault.Powershell.Models.IStorageCopyInternal
    {

        /// <summary>Internal Acessors for StoragePool</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IStorageCopyInternal.StoragePool { get => (this._storagePool = this._storagePool ?? new Commvault.Powershell.Models.IdName()); set { {_storagePool = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Storage name. Primary, secondary</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Retention" /> property.</summary>
        private long? _retention;

        /// <summary>How long the data is retained. Mentioned in days</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? Retention { get => this._retention; set => this._retention = value; }

        /// <summary>Backing field for <see cref="StoragePool" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _storagePool;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName StoragePool { get => (this._storagePool = this._storagePool ?? new Commvault.Powershell.Models.IdName()); set => this._storagePool = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? StoragePoolId { get => ((Commvault.Powershell.Models.IIdNameInternal)StoragePool).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)StoragePool).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string StoragePoolName { get => ((Commvault.Powershell.Models.IIdNameInternal)StoragePool).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)StoragePool).Name = value ?? null; }

        /// <summary>Creates an new <see cref="StorageCopy" /> instance.</summary>
        public StorageCopy()
        {

        }
    }
    /// Copy configured for a replication group
    public partial interface IStorageCopy :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Storage name. Primary, secondary</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage name. Primary, secondary ",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>How long the data is retained. Mentioned in days</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"How long the data is retained. Mentioned in days",
        SerializedName = @"retention",
        PossibleTypes = new [] { typeof(long) })]
        long? Retention { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? StoragePoolId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string StoragePoolName { get; set; }

    }
    /// Copy configured for a replication group
    internal partial interface IStorageCopyInternal

    {
        /// <summary>Storage name. Primary, secondary</summary>
        string Name { get; set; }
        /// <summary>How long the data is retained. Mentioned in days</summary>
        long? Retention { get; set; }

        Commvault.Powershell.Models.IIdName StoragePool { get; set; }

        long? StoragePoolId { get; set; }

        string StoragePoolName { get; set; }

    }
}