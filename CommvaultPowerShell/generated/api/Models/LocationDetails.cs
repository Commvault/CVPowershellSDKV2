// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.2, generator: @autorest/powershell@3.0.494)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Details for a location in a region</summary>
    public partial class LocationDetails :
        Commvault.Powershell.Models.ILocationDetails,
        Commvault.Powershell.Models.ILocationDetailsInternal
    {

        /// <summary>Backing field for <see cref="City" /> property.</summary>
        private string _city;

        /// <summary>Name of city</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string City { get => this._city; set => this._city = value; }

        /// <summary>Backing field for <see cref="Country" /> property.</summary>
        private string _country;

        /// <summary>Name of country</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Country { get => this._country; set => this._country = value; }

        /// <summary>Backing field for <see cref="Latitude" /> property.</summary>
        private double _latitude;

        /// <summary>Latitude for the location</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public double Latitude { get => this._latitude; set => this._latitude = value; }

        /// <summary>Backing field for <see cref="Longitude" /> property.</summary>
        private double _longitude;

        /// <summary>Longitude for the location</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public double Longitude { get => this._longitude; set => this._longitude = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private string _state;

        /// <summary>Name of state</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string State { get => this._state; set => this._state = value; }

        /// <summary>Creates an new <see cref="LocationDetails" /> instance.</summary>
        public LocationDetails()
        {

        }
    }
    /// Details for a location in a region
    public partial interface ILocationDetails :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Name of city</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of city",
        SerializedName = @"city",
        PossibleTypes = new [] { typeof(string) })]
        string City { get; set; }
        /// <summary>Name of country</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of country",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string Country { get; set; }
        /// <summary>Latitude for the location</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Latitude for the location",
        SerializedName = @"latitude",
        PossibleTypes = new [] { typeof(double) })]
        double Latitude { get; set; }
        /// <summary>Longitude for the location</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Longitude for the location",
        SerializedName = @"longitude",
        PossibleTypes = new [] { typeof(double) })]
        double Longitude { get; set; }
        /// <summary>Name of state</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of state",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string State { get; set; }

    }
    /// Details for a location in a region
    internal partial interface ILocationDetailsInternal

    {
        /// <summary>Name of city</summary>
        string City { get; set; }
        /// <summary>Name of country</summary>
        string Country { get; set; }
        /// <summary>Latitude for the location</summary>
        double Latitude { get; set; }
        /// <summary>Longitude for the location</summary>
        double Longitude { get; set; }
        /// <summary>Name of state</summary>
        string State { get; set; }

    }
}