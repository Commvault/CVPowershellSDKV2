// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Entity applicable for plan association via plan assignment rules.</summary>
    public partial class PlanRuleApplicableEntity
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Commvault.Powershell.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Commvault.Powershell.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Commvault.Powershell.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Commvault.Powershell.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Commvault.Powershell.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Commvault.Powershell.Runtime.Json.JsonNode"/> into an instance of Commvault.Powershell.Models.IPlanRuleApplicableEntity.
        /// </summary>
        /// <param name="node">a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of Commvault.Powershell.Models.IPlanRuleApplicableEntity.</returns>
        public static Commvault.Powershell.Models.IPlanRuleApplicableEntity FromJson(Commvault.Powershell.Runtime.Json.JsonNode node)
        {
            return node is Commvault.Powershell.Runtime.Json.JsonObject json ? new PlanRuleApplicableEntity(json) : null;
        }

        /// <summary>
        /// Deserializes a Commvault.Powershell.Runtime.Json.JsonObject into a new instance of <see cref="PlanRuleApplicableEntity" />.
        /// </summary>
        /// <param name="json">A Commvault.Powershell.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal PlanRuleApplicableEntity(Commvault.Powershell.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_subclient = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("subclient"), out var __jsonSubclient) ? Commvault.Powershell.Models.IdName.FromJson(__jsonSubclient) : Subclient;}
            {_backupset = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("backupset"), out var __jsonBackupset) ? Commvault.Powershell.Models.IdName.FromJson(__jsonBackupset) : Backupset;}
            {_instance = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("instance"), out var __jsonInstance) ? Commvault.Powershell.Models.IdName.FromJson(__jsonInstance) : Instance;}
            {_client = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("client"), out var __jsonClient) ? Commvault.Powershell.Models.IdName.FromJson(__jsonClient) : Client;}
            {_apptype = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("apptype"), out var __jsonApptype) ? Commvault.Powershell.Models.IdName.FromJson(__jsonApptype) : Apptype;}
            {_evaluatedPlan = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("evaluatedPlan"), out var __jsonEvaluatedPlan) ? Commvault.Powershell.Models.IdName.FromJson(__jsonEvaluatedPlan) : EvaluatedPlan;}
            {_currentPlan = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("currentPlan"), out var __jsonCurrentPlan) ? Commvault.Powershell.Models.IdName.FromJson(__jsonCurrentPlan) : CurrentPlan;}
            {_ruleDetails = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("ruleDetails"), out var __jsonRuleDetails) ? Commvault.Powershell.Models.PlanEntityRuleInfo.FromJson(__jsonRuleDetails) : RuleDetails;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="PlanRuleApplicableEntity" /> into a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Commvault.Powershell.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Commvault.Powershell.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="PlanRuleApplicableEntity" /> as a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" />.
        /// </returns>
        public Commvault.Powershell.Runtime.Json.JsonNode ToJson(Commvault.Powershell.Runtime.Json.JsonObject container, Commvault.Powershell.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Commvault.Powershell.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._subclient ? (Commvault.Powershell.Runtime.Json.JsonNode) this._subclient.ToJson(null,serializationMode) : null, "subclient" ,container.Add );
            AddIf( null != this._backupset ? (Commvault.Powershell.Runtime.Json.JsonNode) this._backupset.ToJson(null,serializationMode) : null, "backupset" ,container.Add );
            AddIf( null != this._instance ? (Commvault.Powershell.Runtime.Json.JsonNode) this._instance.ToJson(null,serializationMode) : null, "instance" ,container.Add );
            AddIf( null != this._client ? (Commvault.Powershell.Runtime.Json.JsonNode) this._client.ToJson(null,serializationMode) : null, "client" ,container.Add );
            AddIf( null != this._apptype ? (Commvault.Powershell.Runtime.Json.JsonNode) this._apptype.ToJson(null,serializationMode) : null, "apptype" ,container.Add );
            AddIf( null != this._evaluatedPlan ? (Commvault.Powershell.Runtime.Json.JsonNode) this._evaluatedPlan.ToJson(null,serializationMode) : null, "evaluatedPlan" ,container.Add );
            AddIf( null != this._currentPlan ? (Commvault.Powershell.Runtime.Json.JsonNode) this._currentPlan.ToJson(null,serializationMode) : null, "currentPlan" ,container.Add );
            AddIf( null != this._ruleDetails ? (Commvault.Powershell.Runtime.Json.JsonNode) this._ruleDetails.ToJson(null,serializationMode) : null, "ruleDetails" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}