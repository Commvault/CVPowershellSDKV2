// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>hypervisorSettings</summary>
    public partial class HypervisorSettings
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Commvault.Powershell.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Commvault.Powershell.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Commvault.Powershell.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Commvault.Powershell.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Commvault.Powershell.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Commvault.Powershell.Runtime.Json.JsonNode"/> into an instance of Commvault.Powershell.Models.IHypervisorSettings.
        /// </summary>
        /// <param name="node">a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of Commvault.Powershell.Models.IHypervisorSettings.</returns>
        public static Commvault.Powershell.Models.IHypervisorSettings FromJson(Commvault.Powershell.Runtime.Json.JsonNode node)
        {
            return node is Commvault.Powershell.Runtime.Json.JsonObject json ? new HypervisorSettings(json) : null;
        }

        /// <summary>
        /// Deserializes a Commvault.Powershell.Runtime.Json.JsonObject into a new instance of <see cref="HypervisorSettings" />.
        /// </summary>
        /// <param name="json">A Commvault.Powershell.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal HypervisorSettings(Commvault.Powershell.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_regionInfo = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("regionInfo"), out var __jsonRegionInfo) ? Commvault.Powershell.Models.RegionInfo.FromJson(__jsonRegionInfo) : RegionInfo;}
            {_timeZone = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("timeZone"), out var __jsonTimeZone) ? Commvault.Powershell.Models.IdName.FromJson(__jsonTimeZone) : TimeZone;}
            {_metricsMonitoringPolicy = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("metricsMonitoringPolicy"), out var __jsonMetricsMonitoringPolicy) ? Commvault.Powershell.Models.HypervisorMonitoringPolicy.FromJson(__jsonMetricsMonitoringPolicy) : MetricsMonitoringPolicy;}
            {_guestCredentials = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("guestCredentials"), out var __jsonGuestCredentials) ? Commvault.Powershell.Models.UserNamePassword.FromJson(__jsonGuestCredentials) : GuestCredentials;}
            {_applicationCredentials = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("applicationCredentials"), out var __jsonApplicationCredentials) ? Commvault.Powershell.Models.UserNamePassword.FromJson(__jsonApplicationCredentials) : ApplicationCredentials;}
            {_mountAccessNode = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonObject>("mountAccessNode"), out var __jsonMountAccessNode) ? Commvault.Powershell.Models.IdName.FromJson(__jsonMountAccessNode) : MountAccessNode;}
            {_customAttributes = If( json?.PropertyT<Commvault.Powershell.Runtime.Json.JsonArray>("customAttributes"), out var __jsonCustomAttributes) ? If( __jsonCustomAttributes as Commvault.Powershell.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Commvault.Powershell.Models.IHypervisorCustomAttribute[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Commvault.Powershell.Models.IHypervisorCustomAttribute) (Commvault.Powershell.Models.HypervisorCustomAttribute.FromJson(__u) )) ))() : null : CustomAttributes;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="HypervisorSettings" /> into a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Commvault.Powershell.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Commvault.Powershell.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="HypervisorSettings" /> as a <see cref="Commvault.Powershell.Runtime.Json.JsonNode" />.
        /// </returns>
        public Commvault.Powershell.Runtime.Json.JsonNode ToJson(Commvault.Powershell.Runtime.Json.JsonObject container, Commvault.Powershell.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Commvault.Powershell.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._regionInfo ? (Commvault.Powershell.Runtime.Json.JsonNode) this._regionInfo.ToJson(null,serializationMode) : null, "regionInfo" ,container.Add );
            AddIf( null != this._timeZone ? (Commvault.Powershell.Runtime.Json.JsonNode) this._timeZone.ToJson(null,serializationMode) : null, "timeZone" ,container.Add );
            AddIf( null != this._metricsMonitoringPolicy ? (Commvault.Powershell.Runtime.Json.JsonNode) this._metricsMonitoringPolicy.ToJson(null,serializationMode) : null, "metricsMonitoringPolicy" ,container.Add );
            AddIf( null != this._guestCredentials ? (Commvault.Powershell.Runtime.Json.JsonNode) this._guestCredentials.ToJson(null,serializationMode) : null, "guestCredentials" ,container.Add );
            AddIf( null != this._applicationCredentials ? (Commvault.Powershell.Runtime.Json.JsonNode) this._applicationCredentials.ToJson(null,serializationMode) : null, "applicationCredentials" ,container.Add );
            AddIf( null != this._mountAccessNode ? (Commvault.Powershell.Runtime.Json.JsonNode) this._mountAccessNode.ToJson(null,serializationMode) : null, "mountAccessNode" ,container.Add );
            if (null != this._customAttributes)
            {
                var __w = new Commvault.Powershell.Runtime.Json.XNodeArray();
                foreach( var __x in this._customAttributes )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("customAttributes",__w);
            }
            AfterToJson(ref container);
            return container;
        }
    }
}