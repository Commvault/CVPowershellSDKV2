// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>CloudBucketConfiguration</summary>
    public partial class CloudBucketConfiguration :
        Commvault.Powershell.Models.ICloudBucketConfiguration,
        Commvault.Powershell.Models.ICloudBucketConfigurationInternal
    {

        /// <summary>Internal Acessors for StorageAcceleratorCredentials</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.ICloudBucketConfigurationInternal.StorageAcceleratorCredentials { get => (this._storageAcceleratorCredentials = this._storageAcceleratorCredentials ?? new Commvault.Powershell.Models.IdName()); set { {_storageAcceleratorCredentials = value;} } }

        /// <summary>Backing field for <see cref="Enable" /> property.</summary>
        private bool? _enable;

        /// <summary>When true, means mount path is enabled</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? Enable { get => this._enable; set => this._enable = value; }

        /// <summary>Backing field for <see cref="PrepareForRetirement" /> property.</summary>
        private bool? _prepareForRetirement;

        /// <summary>
        /// When true, the deduplicated blocks in the mount path will not be referenced when there are multiple mount paths in the
        /// library.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? PrepareForRetirement { get => this._prepareForRetirement; set => this._prepareForRetirement = value; }

        /// <summary>Backing field for <see cref="PreventNewDataWritesToBackupLocation" /> property.</summary>
        private bool? _preventNewDataWritesToBackupLocation;

        /// <summary>
        /// When true, prevents new data writes to backup location by changing number of writers to zero
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? PreventNewDataWritesToBackupLocation { get => this._preventNewDataWritesToBackupLocation; set => this._preventNewDataWritesToBackupLocation = value; }

        /// <summary>Backing field for <see cref="StorageAcceleratorCredentials" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _storageAcceleratorCredentials;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName StorageAcceleratorCredentials { get => (this._storageAcceleratorCredentials = this._storageAcceleratorCredentials ?? new Commvault.Powershell.Models.IdName()); set => this._storageAcceleratorCredentials = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? StorageAcceleratorCredentialsId { get => ((Commvault.Powershell.Models.IIdNameInternal)StorageAcceleratorCredentials).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)StorageAcceleratorCredentials).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string StorageAcceleratorCredentialsName { get => ((Commvault.Powershell.Models.IIdNameInternal)StorageAcceleratorCredentials).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)StorageAcceleratorCredentials).Name = value ?? null; }

        /// <summary>Creates an new <see cref="CloudBucketConfiguration" /> instance.</summary>
        public CloudBucketConfiguration()
        {

        }
    }
    /// CloudBucketConfiguration
    public partial interface ICloudBucketConfiguration :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>When true, means mount path is enabled</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When true, means mount path is enabled",
        SerializedName = @"enable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enable { get; set; }
        /// <summary>
        /// When true, the deduplicated blocks in the mount path will not be referenced when there are multiple mount paths in the
        /// library.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When true, the deduplicated blocks in the mount path will not be referenced when there are multiple mount paths in the library.",
        SerializedName = @"prepareForRetirement",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PrepareForRetirement { get; set; }
        /// <summary>
        /// When true, prevents new data writes to backup location by changing number of writers to zero
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When true, prevents new data writes to backup location by changing number of writers to zero",
        SerializedName = @"preventNewDataWritesToBackupLocation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PreventNewDataWritesToBackupLocation { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? StorageAcceleratorCredentialsId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAcceleratorCredentialsName { get; set; }

    }
    /// CloudBucketConfiguration
    internal partial interface ICloudBucketConfigurationInternal

    {
        /// <summary>When true, means mount path is enabled</summary>
        bool? Enable { get; set; }
        /// <summary>
        /// When true, the deduplicated blocks in the mount path will not be referenced when there are multiple mount paths in the
        /// library.
        /// </summary>
        bool? PrepareForRetirement { get; set; }
        /// <summary>
        /// When true, prevents new data writes to backup location by changing number of writers to zero
        /// </summary>
        bool? PreventNewDataWritesToBackupLocation { get; set; }

        Commvault.Powershell.Models.IIdName StorageAcceleratorCredentials { get; set; }

        long? StorageAcceleratorCredentialsId { get; set; }

        string StorageAcceleratorCredentialsName { get; set; }

    }
}