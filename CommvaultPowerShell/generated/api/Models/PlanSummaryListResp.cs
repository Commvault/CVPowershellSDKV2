// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class PlanSummaryListResp :
        Commvault.Powershell.Models.IPlanSummaryListResp,
        Commvault.Powershell.Models.IPlanSummaryListRespInternal
    {

        /// <summary>Backing field for <see cref="Plans" /> property.</summary>
        private System.Collections.Generic.List<Commvault.Powershell.Models.IPlanSummary> _plans;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Commvault.Powershell.Models.IPlanSummary> Plans { get => this._plans; set => this._plans = value; }

        /// <summary>Backing field for <see cref="PlansCount" /> property.</summary>
        private long? _plansCount;

        /// <summary>Number of plans returned</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? PlansCount { get => this._plansCount; set => this._plansCount = value; }

        /// <summary>Creates an new <see cref="PlanSummaryListResp" /> instance.</summary>
        public PlanSummaryListResp()
        {

        }
    }
    public partial interface IPlanSummaryListResp :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"plans",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IPlanSummary) })]
        System.Collections.Generic.List<Commvault.Powershell.Models.IPlanSummary> Plans { get; set; }
        /// <summary>Number of plans returned</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of plans returned",
        SerializedName = @"plansCount",
        PossibleTypes = new [] { typeof(long) })]
        long? PlansCount { get; set; }

    }
    internal partial interface IPlanSummaryListRespInternal

    {
        System.Collections.Generic.List<Commvault.Powershell.Models.IPlanSummary> Plans { get; set; }
        /// <summary>Number of plans returned</summary>
        long? PlansCount { get; set; }

    }
}