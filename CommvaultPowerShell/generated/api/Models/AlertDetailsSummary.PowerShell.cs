// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    /// <summary>AlertDetailsSummary</summary>
    [System.ComponentModel.TypeConverter(typeof(AlertDetailsSummaryTypeConverter))]
    public partial class AlertDetailsSummary
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.AlertDetailsSummary"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AlertDetailsSummary(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Type"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).Type = (Commvault.Powershell.Models.IAlertTypeIdName1) content.GetValueForProperty("Type",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).Type, Commvault.Powershell.Models.AlertTypeIdName1TypeConverter.ConvertFrom);
            }
            if (content.Contains("Category"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).Category = (Commvault.Powershell.Models.IAlertCategoryIdName1) content.GetValueForProperty("Category",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).Category, Commvault.Powershell.Models.AlertCategoryIdName1TypeConverter.ConvertFrom);
            }
            if (content.Contains("Criteria"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).Criteria = (Commvault.Powershell.Models.IAlertCriteriaIdName1) content.GetValueForProperty("Criteria",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).Criteria, Commvault.Powershell.Models.AlertCriteriaIdName1TypeConverter.ConvertFrom);
            }
            if (content.Contains("CriteriaList"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriteriaList = (System.Collections.Generic.List<Commvault.Powershell.Models.IAlertCriteriaIdName1>) content.GetValueForProperty("CriteriaList",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriteriaList, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IAlertCriteriaIdName1>(__y, Commvault.Powershell.Models.AlertCriteriaIdName1TypeConverter.ConvertFrom));
            }
            if (content.Contains("TypeId"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).TypeId = (long?) content.GetValueForProperty("TypeId",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).TypeId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("TypeName"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).TypeName = (string) content.GetValueForProperty("TypeName",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).TypeName, global::System.Convert.ToString);
            }
            if (content.Contains("CategoryId"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CategoryId = (long?) content.GetValueForProperty("CategoryId",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CategoryId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CategoryName"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CategoryName = (string) content.GetValueForProperty("CategoryName",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CategoryName, global::System.Convert.ToString);
            }
            if (content.Contains("CriterionNotificationCriteria"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionNotificationCriteria = (Commvault.Powershell.Models.INotificationCriteriaOptions) content.GetValueForProperty("CriterionNotificationCriteria",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionNotificationCriteria, Commvault.Powershell.Models.NotificationCriteriaOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("CriterionId"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionId = (long?) content.GetValueForProperty("CriterionId",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CriterionName"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionName = (string) content.GetValueForProperty("CriterionName",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionName, global::System.Convert.ToString);
            }
            if (content.Contains("CriterionParamsList"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionParamsList = (System.Collections.Generic.List<Commvault.Powershell.Models.IAlertDefinitionsCriteriaParams>) content.GetValueForProperty("CriterionParamsList",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionParamsList, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IAlertDefinitionsCriteriaParams>(__y, Commvault.Powershell.Models.AlertDefinitionsCriteriaParamsTypeConverter.ConvertFrom));
            }
            if (content.Contains("NotificationCriterionValue"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).NotificationCriterionValue = (long?) content.GetValueForProperty("NotificationCriterionValue",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).NotificationCriterionValue, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NotificationCriterionDelayTime"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).NotificationCriterionDelayTime = (long?) content.GetValueForProperty("NotificationCriterionDelayTime",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).NotificationCriterionDelayTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NotificationCriterionPersistTime"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).NotificationCriterionPersistTime = (long?) content.GetValueForProperty("NotificationCriterionPersistTime",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).NotificationCriterionPersistTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.AlertDetailsSummary"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AlertDetailsSummary(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Type"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).Type = (Commvault.Powershell.Models.IAlertTypeIdName1) content.GetValueForProperty("Type",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).Type, Commvault.Powershell.Models.AlertTypeIdName1TypeConverter.ConvertFrom);
            }
            if (content.Contains("Category"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).Category = (Commvault.Powershell.Models.IAlertCategoryIdName1) content.GetValueForProperty("Category",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).Category, Commvault.Powershell.Models.AlertCategoryIdName1TypeConverter.ConvertFrom);
            }
            if (content.Contains("Criteria"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).Criteria = (Commvault.Powershell.Models.IAlertCriteriaIdName1) content.GetValueForProperty("Criteria",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).Criteria, Commvault.Powershell.Models.AlertCriteriaIdName1TypeConverter.ConvertFrom);
            }
            if (content.Contains("CriteriaList"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriteriaList = (System.Collections.Generic.List<Commvault.Powershell.Models.IAlertCriteriaIdName1>) content.GetValueForProperty("CriteriaList",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriteriaList, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IAlertCriteriaIdName1>(__y, Commvault.Powershell.Models.AlertCriteriaIdName1TypeConverter.ConvertFrom));
            }
            if (content.Contains("TypeId"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).TypeId = (long?) content.GetValueForProperty("TypeId",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).TypeId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("TypeName"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).TypeName = (string) content.GetValueForProperty("TypeName",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).TypeName, global::System.Convert.ToString);
            }
            if (content.Contains("CategoryId"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CategoryId = (long?) content.GetValueForProperty("CategoryId",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CategoryId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CategoryName"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CategoryName = (string) content.GetValueForProperty("CategoryName",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CategoryName, global::System.Convert.ToString);
            }
            if (content.Contains("CriterionNotificationCriteria"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionNotificationCriteria = (Commvault.Powershell.Models.INotificationCriteriaOptions) content.GetValueForProperty("CriterionNotificationCriteria",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionNotificationCriteria, Commvault.Powershell.Models.NotificationCriteriaOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("CriterionId"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionId = (long?) content.GetValueForProperty("CriterionId",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CriterionName"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionName = (string) content.GetValueForProperty("CriterionName",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionName, global::System.Convert.ToString);
            }
            if (content.Contains("CriterionParamsList"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionParamsList = (System.Collections.Generic.List<Commvault.Powershell.Models.IAlertDefinitionsCriteriaParams>) content.GetValueForProperty("CriterionParamsList",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).CriterionParamsList, __y => TypeConverterExtensions.SelectToList<Commvault.Powershell.Models.IAlertDefinitionsCriteriaParams>(__y, Commvault.Powershell.Models.AlertDefinitionsCriteriaParamsTypeConverter.ConvertFrom));
            }
            if (content.Contains("NotificationCriterionValue"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).NotificationCriterionValue = (long?) content.GetValueForProperty("NotificationCriterionValue",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).NotificationCriterionValue, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NotificationCriterionDelayTime"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).NotificationCriterionDelayTime = (long?) content.GetValueForProperty("NotificationCriterionDelayTime",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).NotificationCriterionDelayTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NotificationCriterionPersistTime"))
            {
                ((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).NotificationCriterionPersistTime = (long?) content.GetValueForProperty("NotificationCriterionPersistTime",((Commvault.Powershell.Models.IAlertDetailsSummaryInternal)this).NotificationCriterionPersistTime, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.AlertDetailsSummary"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.IAlertDetailsSummary" />.</returns>
        public static Commvault.Powershell.Models.IAlertDetailsSummary DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AlertDetailsSummary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.AlertDetailsSummary"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="Commvault.Powershell.Models.IAlertDetailsSummary" />.</returns>
        public static Commvault.Powershell.Models.IAlertDetailsSummary DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AlertDetailsSummary(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AlertDetailsSummary" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AlertDetailsSummary" /> model class.</returns>
        public static Commvault.Powershell.Models.IAlertDetailsSummary FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// AlertDetailsSummary
    [System.ComponentModel.TypeConverter(typeof(AlertDetailsSummaryTypeConverter))]
    public partial interface IAlertDetailsSummary

    {

    }
}