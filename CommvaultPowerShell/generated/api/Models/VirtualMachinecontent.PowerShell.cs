// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using Commvault.Powershell.Runtime.PowerShell;

    /// <summary>VirtualMachinecontent</summary>
    [System.ComponentModel.TypeConverter(typeof(VirtualMachinecontentTypeConverter))]
    public partial class VirtualMachinecontent
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Commvault.Powershell.Models.VirtualMachinecontent"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Commvault.Powershell.Models.IVirtualMachinecontent" />.
        /// </returns>
        public static Commvault.Powershell.Models.IVirtualMachinecontent DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new VirtualMachinecontent(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Commvault.Powershell.Models.VirtualMachinecontent"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Commvault.Powershell.Models.IVirtualMachinecontent" />.
        /// </returns>
        public static Commvault.Powershell.Models.IVirtualMachinecontent DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new VirtualMachinecontent(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="VirtualMachinecontent" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Commvault.Powershell.Models.IVirtualMachinecontent FromJsonString(string jsonText) => FromJson(Commvault.Powershell.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Commvault.Powershell.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Commvault.Powershell.Models.VirtualMachinecontent"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal VirtualMachinecontent(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentials = (Commvault.Powershell.Models.IVMGuestCredentials) content.GetValueForProperty("GuestCredentials",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentials, Commvault.Powershell.Models.VMGuestCredentialsTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).ExistingCredential = (Commvault.Powershell.Models.IVMExistingCredential) content.GetValueForProperty("ExistingCredential",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).ExistingCredential, Commvault.Powershell.Models.VMExistingCredentialTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).Name = (string) content.GetValueForProperty("Name",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).Name, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).Guid = (string) content.GetValueForProperty("Guid",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).Guid, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).Type = (string) content.GetValueForProperty("Type",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).Type, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentialAssocId = (long?) content.GetValueForProperty("GuestCredentialAssocId",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentialAssocId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentialsUserName = (string) content.GetValueForProperty("GuestCredentialsUserName",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentialsUserName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentialsPassword = (string) content.GetValueForProperty("GuestCredentialsPassword",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentialsPassword, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).ExistingCredentialId = (long?) content.GetValueForProperty("ExistingCredentialId",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).ExistingCredentialId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).ExistingCredentialName = (string) content.GetValueForProperty("ExistingCredentialName",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).ExistingCredentialName, global::System.Convert.ToString);
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Commvault.Powershell.Models.VirtualMachinecontent"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal VirtualMachinecontent(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentials = (Commvault.Powershell.Models.IVMGuestCredentials) content.GetValueForProperty("GuestCredentials",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentials, Commvault.Powershell.Models.VMGuestCredentialsTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).ExistingCredential = (Commvault.Powershell.Models.IVMExistingCredential) content.GetValueForProperty("ExistingCredential",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).ExistingCredential, Commvault.Powershell.Models.VMExistingCredentialTypeConverter.ConvertFrom);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).Name = (string) content.GetValueForProperty("Name",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).Name, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).Guid = (string) content.GetValueForProperty("Guid",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).Guid, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).Type = (string) content.GetValueForProperty("Type",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).Type, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentialAssocId = (long?) content.GetValueForProperty("GuestCredentialAssocId",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentialAssocId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentialsUserName = (string) content.GetValueForProperty("GuestCredentialsUserName",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentialsUserName, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentialsPassword = (string) content.GetValueForProperty("GuestCredentialsPassword",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).GuestCredentialsPassword, global::System.Convert.ToString);
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).ExistingCredentialId = (long?) content.GetValueForProperty("ExistingCredentialId",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).ExistingCredentialId, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            ((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).ExistingCredentialName = (string) content.GetValueForProperty("ExistingCredentialName",((Commvault.Powershell.Models.IVirtualMachinecontentInternal)this).ExistingCredentialName, global::System.Convert.ToString);
            AfterDeserializePSObject(content);
        }
    }
    /// VirtualMachinecontent
    [System.ComponentModel.TypeConverter(typeof(VirtualMachinecontentTypeConverter))]
    public partial interface IVirtualMachinecontent

    {

    }
}