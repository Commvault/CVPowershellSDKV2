// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.708)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class DoNotRunJobDetails :
        Commvault.Powershell.Models.IDoNotRunJobDetails,
        Commvault.Powershell.Models.IDoNotRunJobDetailsInternal
    {

        /// <summary>Backing field for <see cref="DayTimeEnd" /> property.</summary>
        private long? _dayTimeEnd;

        /// <summary>day time end in seconds, during which the operation will not run.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? DayTimeEnd { get => this._dayTimeEnd; set => this._dayTimeEnd = value; }

        /// <summary>Backing field for <see cref="DayTimeStart" /> property.</summary>
        private long? _dayTimeStart;

        /// <summary>day time start in seconds, during which the operation will not run.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? DayTimeStart { get => this._dayTimeStart; set => this._dayTimeStart = value; }

        /// <summary>Backing field for <see cref="OfWeeks" /> property.</summary>
        private System.Collections.Generic.List<string> _ofWeeks;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> OfWeeks { get => this._ofWeeks; set => this._ofWeeks = value; }

        /// <summary>Backing field for <see cref="OnDays" /> property.</summary>
        private System.Collections.Generic.List<string> _onDays;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> OnDays { get => this._onDays; set => this._onDays = value; }

        /// <summary>Creates an new <see cref="DoNotRunJobDetails" /> instance.</summary>
        public DoNotRunJobDetails()
        {

        }
    }
    public partial interface IDoNotRunJobDetails :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>day time end in seconds, during which the operation will not run.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"day time end in seconds, during which the operation will not run.",
        SerializedName = @"dayTimeEnd",
        PossibleTypes = new [] { typeof(long) })]
        long? DayTimeEnd { get; set; }
        /// <summary>day time start in seconds, during which the operation will not run.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"day time start in seconds, during which the operation will not run.",
        SerializedName = @"dayTimeStart",
        PossibleTypes = new [] { typeof(long) })]
        long? DayTimeStart { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"ofWeeks",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> OfWeeks { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"onDays",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> OnDays { get; set; }

    }
    internal partial interface IDoNotRunJobDetailsInternal

    {
        /// <summary>day time end in seconds, during which the operation will not run.</summary>
        long? DayTimeEnd { get; set; }
        /// <summary>day time start in seconds, during which the operation will not run.</summary>
        long? DayTimeStart { get; set; }

        System.Collections.Generic.List<string> OfWeeks { get; set; }

        System.Collections.Generic.List<string> OnDays { get; set; }

    }
}