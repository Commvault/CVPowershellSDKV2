// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.2, generator: @autorest/powershell@3.0.494)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>
    /// company refers to company to which the blackout window is associated. dates refers to the dates where the blackout window
    /// will be in effect. Dates are given in unix time format.doNotRunBetween refers to the time between which jobs cannot be
    /// run. The time is provided in seconds.
    /// </summary>
    public partial class BlackoutWindowSummary :
        Commvault.Powershell.Models.IBlackoutWindowSummary,
        Commvault.Powershell.Models.IBlackoutWindowSummaryInternal
    {

        /// <summary>the blackout window is no longer in effect from this point on.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? BetweenDateEnd { get => ((Commvault.Powershell.Models.IStartEndInternal)BetweenDates).End; set => ((Commvault.Powershell.Models.IStartEndInternal)BetweenDates).End = value ?? default(long); }

        /// <summary>the blackout window comes into effect at this point.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? BetweenDateStart { get => ((Commvault.Powershell.Models.IStartEndInternal)BetweenDates).Start; set => ((Commvault.Powershell.Models.IStartEndInternal)BetweenDates).Start = value ?? default(long); }

        /// <summary>Backing field for <see cref="BetweenDates" /> property.</summary>
        private Commvault.Powershell.Models.IStartEnd _betweenDates;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IStartEnd BetweenDates { get => (this._betweenDates = this._betweenDates ?? new Commvault.Powershell.Models.StartEnd()); set => this._betweenDates = value; }

        /// <summary>Internal Acessors for BetweenDates</summary>
        Commvault.Powershell.Models.IStartEnd Commvault.Powershell.Models.IBlackoutWindowSummaryInternal.BetweenDates { get => (this._betweenDates = this._betweenDates ?? new Commvault.Powershell.Models.StartEnd()); set { {_betweenDates = value;} } }

        /// <summary>Internal Acessors for Company</summary>
        Commvault.Powershell.Models.IIdName Commvault.Powershell.Models.IBlackoutWindowSummaryInternal.Company { get => (this._company = this._company ?? new Commvault.Powershell.Models.IdName()); set { {_company = value;} } }

        /// <summary>Backing field for <see cref="Company" /> property.</summary>
        private Commvault.Powershell.Models.IIdName _company;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IIdName Company { get => (this._company = this._company ?? new Commvault.Powershell.Models.IdName()); set => this._company = value; }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public long? CompanyId { get => ((Commvault.Powershell.Models.IIdNameInternal)Company).Id; set => ((Commvault.Powershell.Models.IIdNameInternal)Company).Id = value ?? default(long); }

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string CompanyName { get => ((Commvault.Powershell.Models.IIdNameInternal)Company).Name; set => ((Commvault.Powershell.Models.IIdNameInternal)Company).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Days" /> property.</summary>
        private string[] _days;

        /// <summary>Days of the week on which the black out window will be in effect.</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string[] Days { get => this._days; set => this._days = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private long? _id;

        /// <summary>blackout window Id</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>blackout window name</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Time" /> property.</summary>
        private Commvault.Powershell.Models.IStartEnd[] _time;

        /// <summary>
        /// Refers to the time between which the blackout window will be in effect. It has to be provided in seconds.
        /// </summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public Commvault.Powershell.Models.IStartEnd[] Time { get => this._time; set => this._time = value; }

        /// <summary>Creates an new <see cref="BlackoutWindowSummary" /> instance.</summary>
        public BlackoutWindowSummary()
        {

        }
    }
    /// company refers to company to which the blackout window is associated. dates refers to the dates where the blackout window
    /// will be in effect. Dates are given in unix time format.doNotRunBetween refers to the time between which jobs cannot be
    /// run. The time is provided in seconds.
    public partial interface IBlackoutWindowSummary :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>the blackout window is no longer in effect from this point on.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the blackout window is no longer in effect from this point on.",
        SerializedName = @"end",
        PossibleTypes = new [] { typeof(long) })]
        long? BetweenDateEnd { get; set; }
        /// <summary>the blackout window comes into effect at this point.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the blackout window comes into effect at this point.",
        SerializedName = @"start",
        PossibleTypes = new [] { typeof(long) })]
        long? BetweenDateStart { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? CompanyId { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string CompanyName { get; set; }
        /// <summary>Days of the week on which the black out window will be in effect.</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Days of the week on which the black out window will be in effect.",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(string) })]
        string[] Days { get; set; }
        /// <summary>blackout window Id</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"blackout window Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? Id { get; set; }
        /// <summary>blackout window name</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"blackout window name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// Refers to the time between which the blackout window will be in effect. It has to be provided in seconds.
        /// </summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Refers to the time between which the blackout window will be in effect. It has to be provided in seconds.",
        SerializedName = @"time",
        PossibleTypes = new [] { typeof(Commvault.Powershell.Models.IStartEnd) })]
        Commvault.Powershell.Models.IStartEnd[] Time { get; set; }

    }
    /// company refers to company to which the blackout window is associated. dates refers to the dates where the blackout window
    /// will be in effect. Dates are given in unix time format.doNotRunBetween refers to the time between which jobs cannot be
    /// run. The time is provided in seconds.
    internal partial interface IBlackoutWindowSummaryInternal

    {
        /// <summary>the blackout window is no longer in effect from this point on.</summary>
        long? BetweenDateEnd { get; set; }
        /// <summary>the blackout window comes into effect at this point.</summary>
        long? BetweenDateStart { get; set; }

        Commvault.Powershell.Models.IStartEnd BetweenDates { get; set; }

        Commvault.Powershell.Models.IIdName Company { get; set; }

        long? CompanyId { get; set; }

        string CompanyName { get; set; }
        /// <summary>Days of the week on which the black out window will be in effect.</summary>
        string[] Days { get; set; }
        /// <summary>blackout window Id</summary>
        long? Id { get; set; }
        /// <summary>blackout window name</summary>
        string Name { get; set; }
        /// <summary>
        /// Refers to the time between which the blackout window will be in effect. It has to be provided in seconds.
        /// </summary>
        Commvault.Powershell.Models.IStartEnd[] Time { get; set; }

    }
}