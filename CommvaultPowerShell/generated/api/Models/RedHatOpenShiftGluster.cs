// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    public partial class RedHatOpenShiftGluster :
        Commvault.Powershell.Models.IRedHatOpenShiftGluster,
        Commvault.Powershell.Models.IRedHatOpenShiftGlusterInternal
    {

        /// <summary>Backing field for <see cref="AuthType" /> property.</summary>
        private long? _authType;

        /// <summary>Gluster Host authtype</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? AuthType { get => this._authType; set => this._authType = value; }

        /// <summary>Internal Acessors for Credentials</summary>
        Commvault.Powershell.Models.IUserNamePassword Commvault.Powershell.Models.IRedHatOpenShiftGlusterInternal.Credentials { get => (this._credentials = this._credentials ?? new Commvault.Powershell.Models.UserNamePassword()); set { {_credentials = value;} } }

        /// <summary>Backing field for <see cref="Credentials" /> property.</summary>
        private Commvault.Powershell.Models.IUserNamePassword _credentials;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        internal Commvault.Powershell.Models.IUserNamePassword Credentials { get => (this._credentials = this._credentials ?? new Commvault.Powershell.Models.UserNamePassword()); set => this._credentials = value; }

        /// <summary>username to access the network path</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string CredentialsName { get => ((Commvault.Powershell.Models.IUserNamePasswordInternal)Credentials).Name; set => ((Commvault.Powershell.Models.IUserNamePasswordInternal)Credentials).Name = value ?? null; }

        /// <summary>password to access the network path</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Inlined)]
        public string CredentialsPassword { get => ((Commvault.Powershell.Models.IUserNamePasswordInternal)Credentials).Password; set => ((Commvault.Powershell.Models.IUserNamePasswordInternal)Credentials).Password = value ?? null; }

        /// <summary>Backing field for <see cref="HostName" /> property.</summary>
        private string _hostName;

        /// <summary>Gluster Host Hostname</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string HostName { get => this._hostName; set => this._hostName = value; }

        /// <summary>Creates an new <see cref="RedHatOpenShiftGluster" /> instance.</summary>
        public RedHatOpenShiftGluster()
        {

        }
    }
    public partial interface IRedHatOpenShiftGluster :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Gluster Host authtype</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gluster Host authtype ",
        SerializedName = @"authType",
        PossibleTypes = new [] { typeof(long) })]
        long? AuthType { get; set; }
        /// <summary>username to access the network path</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"username to access the network path",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsName { get; set; }
        /// <summary>password to access the network path</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"password to access the network path",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsPassword { get; set; }
        /// <summary>Gluster Host Hostname</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Gluster Host Hostname ",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string HostName { get; set; }

    }
    internal partial interface IRedHatOpenShiftGlusterInternal

    {
        /// <summary>Gluster Host authtype</summary>
        long? AuthType { get; set; }

        Commvault.Powershell.Models.IUserNamePassword Credentials { get; set; }
        /// <summary>username to access the network path</summary>
        string CredentialsName { get; set; }
        /// <summary>password to access the network path</summary>
        string CredentialsPassword { get; set; }
        /// <summary>Gluster Host Hostname</summary>
        string HostName { get; set; }

    }
}