// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.4, generator: @autorest/powershell@3.0.415)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Commvault.Powershell.Models
{
    using static Commvault.Powershell.Runtime.Extensions;

    /// <summary>Summary of a distributed storage</summary>
    public partial class DistributedStorageSummary :
        Commvault.Powershell.Models.IDistributedStorageSummary,
        Commvault.Powershell.Models.IDistributedStorageSummaryInternal
    {

        /// <summary>Backing field for <see cref="CanManage" /> property.</summary>
        private bool? _canManage;

        /// <summary>Denotes if the user can manage the cluster</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public bool? CanManage { get => this._canManage; set => this._canManage = value; }

        /// <summary>Backing field for <see cref="ClusterUrl" /> property.</summary>
        private string _clusterUrl;

        /// <summary>URL of the distributed storage cluster</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string ClusterUrl { get => this._clusterUrl; set => this._clusterUrl = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private long? _id;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public long? Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Username" /> property.</summary>
        private string _username;

        /// <summary>Username of the distributed storage user</summary>
        [Commvault.Powershell.Origin(Commvault.Powershell.PropertyOrigin.Owned)]
        public string Username { get => this._username; set => this._username = value; }

        /// <summary>Creates an new <see cref="DistributedStorageSummary" /> instance.</summary>
        public DistributedStorageSummary()
        {

        }
    }
    /// Summary of a distributed storage
    public partial interface IDistributedStorageSummary :
        Commvault.Powershell.Runtime.IJsonSerializable
    {
        /// <summary>Denotes if the user can manage the cluster</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Denotes if the user can manage the cluster",
        SerializedName = @"canManage",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CanManage { get; set; }
        /// <summary>URL of the distributed storage cluster</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URL of the distributed storage cluster",
        SerializedName = @"clusterURL",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterUrl { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(long) })]
        long? Id { get; set; }

        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Username of the distributed storage user</summary>
        [Commvault.Powershell.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Username of the distributed storage user",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string Username { get; set; }

    }
    /// Summary of a distributed storage
    internal partial interface IDistributedStorageSummaryInternal

    {
        /// <summary>Denotes if the user can manage the cluster</summary>
        bool? CanManage { get; set; }
        /// <summary>URL of the distributed storage cluster</summary>
        string ClusterUrl { get; set; }

        long? Id { get; set; }

        string Name { get; set; }
        /// <summary>Username of the distributed storage user</summary>
        string Username { get; set; }

    }
}